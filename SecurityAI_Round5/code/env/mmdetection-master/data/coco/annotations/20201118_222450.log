2020-11-18 22:24:50,649 - mmdet - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.6.4 |Anaconda, Inc.| (default, Jan 16 2018, 18:10:19) [GCC 7.2.0]
CUDA available: True
CUDA_HOME: /usr/local/cuda
NVCC: Cuda compilation tools, release 10.0, V10.0.130
GPU 0: Tesla P100-PCIE-16GB
GCC: gcc (GCC) 5.3.0
PyTorch: 1.3.1+cu100
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - Intel(R) Math Kernel Library Version 2019.0.4 Product Build 20190411 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.20.5 (Git Hash 0125f28c61c1f822fd48570b4c1066f96fcb9b2e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CUDA Runtime 10.0
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.1
  - Build settings: BLAS=MKL, BUILD_NAMEDTENSOR=OFF, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Wno-stringop-overflow, DISABLE_NUMA=1, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=True, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

TorchVision: 0.4.2+cu100
OpenCV: 4.4.0
MMCV: 1.0.5
MMDetection: 2.3.0+788fa8d
MMDetection Compiler: GCC 7.3
MMDetection CUDA Compiler: 10.0
------------------------------------------------------------

2020-11-18 22:24:50,649 - mmdet - INFO - Distributed training: False
2020-11-18 22:24:51,039 - mmdet - INFO - Config:
model = dict(
    type='FasterRCNN',
    pretrained='torchvision://resnet50',
    backbone=dict(
        type='ResNet',
        depth=50,
        num_stages=4,
        out_indices=(0, 1, 2, 3),
        frozen_stages=1,
        norm_cfg=dict(type='BN', requires_grad=True),
        norm_eval=True,
        style='pytorch'),
    neck=dict(
        type='FPN',
        in_channels=[256, 512, 1024, 2048],
        out_channels=256,
        num_outs=5),
    rpn_head=dict(
        type='RPNHead',
        in_channels=256,
        feat_channels=256,
        anchor_generator=dict(
            type='AnchorGenerator',
            scales=[8],
            ratios=[0.5, 1.0, 2.0],
            strides=[4, 8, 16, 32, 64]),
        bbox_coder=dict(
            type='DeltaXYWHBBoxCoder',
            target_means=[0.0, 0.0, 0.0, 0.0],
            target_stds=[1.0, 1.0, 1.0, 1.0]),
        loss_cls=dict(
            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),
        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),
    roi_head=dict(
        type='StandardRoIHead',
        bbox_roi_extractor=dict(
            type='SingleRoIExtractor',
            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),
            out_channels=256,
            featmap_strides=[4, 8, 16, 32]),
        bbox_head=dict(
            type='Shared2FCBBoxHead',
            in_channels=256,
            fc_out_channels=1024,
            roi_feat_size=7,
            num_classes=2,
            bbox_coder=dict(
                type='DeltaXYWHBBoxCoder',
                target_means=[0.0, 0.0, 0.0, 0.0],
                target_stds=[0.1, 0.1, 0.2, 0.2]),
            reg_class_agnostic=False,
            loss_cls=dict(
                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),
            loss_bbox=dict(type='L1Loss', loss_weight=1.0))))
train_cfg = dict(
    rpn=dict(
        assigner=dict(
            type='MaxIoUAssigner',
            pos_iou_thr=0.7,
            neg_iou_thr=0.3,
            min_pos_iou=0.3,
            match_low_quality=True,
            ignore_iof_thr=-1),
        sampler=dict(
            type='RandomSampler',
            num=256,
            pos_fraction=0.5,
            neg_pos_ub=-1,
            add_gt_as_proposals=False),
        allowed_border=-1,
        pos_weight=-1,
        debug=False),
    rpn_proposal=dict(
        nms_across_levels=False,
        nms_pre=2000,
        nms_post=1000,
        max_num=1000,
        nms_thr=0.7,
        min_bbox_size=0),
    rcnn=dict(
        assigner=dict(
            type='MaxIoUAssigner',
            pos_iou_thr=0.5,
            neg_iou_thr=0.5,
            min_pos_iou=0.5,
            match_low_quality=False,
            ignore_iof_thr=-1),
        sampler=dict(
            type='RandomSampler',
            num=512,
            pos_fraction=0.25,
            neg_pos_ub=-1,
            add_gt_as_proposals=True),
        pos_weight=-1,
        debug=False))
test_cfg = dict(
    rpn=dict(
        nms_across_levels=False,
        nms_pre=1000,
        nms_post=1000,
        max_num=1000,
        nms_thr=0.7,
        min_bbox_size=0),
    rcnn=dict(
        score_thr=0.05,
        nms=dict(type='nms', iou_threshold=0.5),
        max_per_img=100))
dataset_type = 'CocoDataset'
data_root = 'data/coco/'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(type='Resize', img_scale=(1550, 1550), keep_ratio=True),
    dict(type='RandomFlip', flip_ratio=0.5),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='Pad', size_divisor=32),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(1550, 1550),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=2,
    workers_per_gpu=2,
    train=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_trai.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(type='Resize', img_scale=(1550, 1550), keep_ratio=True),
            dict(type='RandomFlip', flip_ratio=0.5),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
        ]),
    val=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_test.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1550, 1550),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_vals.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1550, 1550),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
evaluation = dict(interval=1, metric='bbox')
optimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0001)
optimizer_config = dict(grad_clip=None)
lr_config = dict(
    policy='step',
    warmup='linear',
    warmup_iters=500,
    warmup_ratio=0.001,
    step=[8, 11])
total_epochs = 4
checkpoint_config = dict(interval=4)
log_config = dict(interval=100, hooks=[dict(type='TextLoggerHook')])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = '/home/admin/.cache/torch/checkpoints/X.pth'
resume_from = None
workflow = [('train', 2), ('val', 1)]
work_dir = '/home/admin/jupyter/SecurityAI_Round5/data/work'
gpu_ids = range(0, 1)

2020-11-18 22:24:51,533 - mmdet - INFO - load model from: torchvision://resnet50
2020-11-18 22:24:59,843 - mmdet - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: fc.weight, fc.bias

2020-11-18 22:25:10,169 - mmdet - INFO - load checkpoint from /home/admin/.cache/torch/checkpoints/X.pth
2020-11-18 22:25:17,022 - mmdet - INFO - Start running, host: admin@fuxilabor_labor0_S4_Odps_S96_dsw_prepaid_cnsh_838_2020111813282, work_dir: /home/admin/jupyter/SecurityAI_Round5/data/work
2020-11-18 22:25:17,022 - mmdet - INFO - workflow: [('train', 2), ('val', 1)], max: 4 epochs
2020-11-18 22:26:34,716 - mmdet - INFO - Epoch [1][100/626]	lr: 1.988e-03, eta: 0:31:02, time: 0.775, data_time: 0.034, memory: 8891, loss_rpn_cls: 0.0043, loss_rpn_bbox: 0.0453, loss_cls: 0.0513, acc: 97.8574, loss_bbox: 0.1112, loss: 0.2121
2020-11-18 22:27:49,649 - mmdet - INFO - Epoch [1][200/626]	lr: 3.986e-03, eta: 0:29:15, time: 0.749, data_time: 0.012, memory: 9993, loss_rpn_cls: 0.0034, loss_rpn_bbox: 0.0393, loss_cls: 0.0464, acc: 98.0498, loss_bbox: 0.0963, loss: 0.1854
2020-11-18 22:29:04,581 - mmdet - INFO - Epoch [1][300/626]	lr: 5.984e-03, eta: 0:27:50, time: 0.749, data_time: 0.012, memory: 10077, loss_rpn_cls: 0.0067, loss_rpn_bbox: 0.0404, loss_cls: 0.0462, acc: 98.1172, loss_bbox: 0.1046, loss: 0.1979
2020-11-18 22:30:19,234 - mmdet - INFO - Epoch [1][400/626]	lr: 7.982e-03, eta: 0:26:28, time: 0.747, data_time: 0.012, memory: 10077, loss_rpn_cls: 0.0034, loss_rpn_bbox: 0.0414, loss_cls: 0.0458, acc: 98.1162, loss_bbox: 0.1043, loss: 0.1950
2020-11-18 22:31:33,973 - mmdet - INFO - Epoch [1][500/626]	lr: 9.980e-03, eta: 0:25:10, time: 0.747, data_time: 0.012, memory: 11885, loss_rpn_cls: 0.0058, loss_rpn_bbox: 0.0435, loss_cls: 0.0508, acc: 97.8721, loss_bbox: 0.1073, loss: 0.2073
2020-11-18 22:32:48,547 - mmdet - INFO - Epoch [1][600/626]	lr: 1.000e-02, eta: 0:23:52, time: 0.746, data_time: 0.012, memory: 11885, loss_rpn_cls: 0.0053, loss_rpn_bbox: 0.0448, loss_cls: 0.0483, acc: 98.0645, loss_bbox: 0.1108, loss: 0.2092
2020-11-18 22:33:33,096 - mmdet - INFO - Evaluating bbox...
2020-11-18 22:33:35,956 - mmdet - INFO - Epoch [1][626/626]	lr: 1.000e-02, bbox_mAP: 0.7630, bbox_mAP_50: 0.8590, bbox_mAP_75: 0.8240, bbox_mAP_s: 0.4750, bbox_mAP_m: 0.7400, bbox_mAP_l: 0.8550, bbox_mAP_copypaste: 0.763 0.859 0.824 0.475 0.740 0.855
2020-11-18 22:34:52,971 - mmdet - INFO - Epoch [2][100/626]	lr: 1.000e-02, eta: 0:21:33, time: 0.768, data_time: 0.033, memory: 11885, loss_rpn_cls: 0.0052, loss_rpn_bbox: 0.0447, loss_cls: 0.0455, acc: 98.1211, loss_bbox: 0.1024, loss: 0.1977
2020-11-18 22:36:07,665 - mmdet - INFO - Epoch [2][200/626]	lr: 1.000e-02, eta: 0:20:24, time: 0.747, data_time: 0.012, memory: 11885, loss_rpn_cls: 0.0042, loss_rpn_bbox: 0.0472, loss_cls: 0.0497, acc: 97.9746, loss_bbox: 0.1115, loss: 0.2126
2020-11-18 22:37:23,226 - mmdet - INFO - Epoch [2][300/626]	lr: 1.000e-02, eta: 0:19:16, time: 0.756, data_time: 0.012, memory: 11885, loss_rpn_cls: 0.0066, loss_rpn_bbox: 0.0517, loss_cls: 0.0590, acc: 97.5732, loss_bbox: 0.1274, loss: 0.2447
2020-11-18 22:38:37,984 - mmdet - INFO - Epoch [2][400/626]	lr: 1.000e-02, eta: 0:18:04, time: 0.748, data_time: 0.012, memory: 11885, loss_rpn_cls: 0.0050, loss_rpn_bbox: 0.0437, loss_cls: 0.0489, acc: 97.9600, loss_bbox: 0.1030, loss: 0.2006
2020-11-18 22:39:52,753 - mmdet - INFO - Epoch [2][500/626]	lr: 1.000e-02, eta: 0:16:53, time: 0.748, data_time: 0.012, memory: 11885, loss_rpn_cls: 0.0041, loss_rpn_bbox: 0.0486, loss_cls: 0.0499, acc: 97.9512, loss_bbox: 0.1146, loss: 0.2172
2020-11-18 22:41:07,618 - mmdet - INFO - Epoch [2][600/626]	lr: 1.000e-02, eta: 0:15:41, time: 0.749, data_time: 0.012, memory: 11911, loss_rpn_cls: 0.0048, loss_rpn_bbox: 0.0442, loss_cls: 0.0506, acc: 97.8535, loss_bbox: 0.1130, loss: 0.2127
2020-11-18 22:41:52,528 - mmdet - INFO - Evaluating bbox...
2020-11-18 22:41:55,656 - mmdet - INFO - Epoch [2][626/626]	lr: 1.000e-02, bbox_mAP: 0.7540, bbox_mAP_50: 0.8530, bbox_mAP_75: 0.8150, bbox_mAP_s: 0.4650, bbox_mAP_m: 0.7370, bbox_mAP_l: 0.8540, bbox_mAP_copypaste: 0.754 0.853 0.815 0.465 0.737 0.854
2020-11-18 22:42:27,546 - mmdet - INFO - Epoch(train) [2][79]	loss_rpn_cls: 0.0064, loss_rpn_bbox: 0.0541, loss_cls: 0.0747, acc: 96.8923, loss_bbox: 0.1387, loss: 0.2739
2020-11-18 22:43:44,620 - mmdet - INFO - Epoch [3][100/626]	lr: 1.000e-02, eta: 0:13:54, time: 0.769, data_time: 0.034, memory: 11911, loss_rpn_cls: 0.0076, loss_rpn_bbox: 0.0476, loss_cls: 0.0554, acc: 97.8105, loss_bbox: 0.1144, loss: 0.2249
2020-11-18 22:44:59,204 - mmdet - INFO - Epoch [3][200/626]	lr: 1.000e-02, eta: 0:12:43, time: 0.746, data_time: 0.012, memory: 11911, loss_rpn_cls: 0.0052, loss_rpn_bbox: 0.0474, loss_cls: 0.0515, acc: 97.8516, loss_bbox: 0.1134, loss: 0.2176
2020-11-18 22:46:14,323 - mmdet - INFO - Epoch [3][300/626]	lr: 1.000e-02, eta: 0:11:32, time: 0.751, data_time: 0.012, memory: 11911, loss_rpn_cls: 0.0068, loss_rpn_bbox: 0.0497, loss_cls: 0.0569, acc: 97.5762, loss_bbox: 0.1187, loss: 0.2321
2020-11-18 22:47:29,720 - mmdet - INFO - Epoch [3][400/626]	lr: 1.000e-02, eta: 0:10:21, time: 0.754, data_time: 0.012, memory: 11911, loss_rpn_cls: 0.0065, loss_rpn_bbox: 0.0470, loss_cls: 0.0488, acc: 98.0322, loss_bbox: 0.1080, loss: 0.2103
2020-11-18 22:48:44,395 - mmdet - INFO - Epoch [3][500/626]	lr: 1.000e-02, eta: 0:09:09, time: 0.747, data_time: 0.012, memory: 11911, loss_rpn_cls: 0.0059, loss_rpn_bbox: 0.0470, loss_cls: 0.0543, acc: 97.7383, loss_bbox: 0.1161, loss: 0.2234
2020-11-18 22:49:59,289 - mmdet - INFO - Epoch [3][600/626]	lr: 1.000e-02, eta: 0:07:56, time: 0.749, data_time: 0.012, memory: 11911, loss_rpn_cls: 0.0043, loss_rpn_bbox: 0.0459, loss_cls: 0.0468, acc: 98.1250, loss_bbox: 0.1151, loss: 0.2121
2020-11-18 22:50:44,027 - mmdet - INFO - Evaluating bbox...
2020-11-18 22:50:46,907 - mmdet - INFO - Epoch [3][626/626]	lr: 1.000e-02, bbox_mAP: 0.7530, bbox_mAP_50: 0.8530, bbox_mAP_75: 0.8110, bbox_mAP_s: 0.4610, bbox_mAP_m: 0.7340, bbox_mAP_l: 0.8450, bbox_mAP_copypaste: 0.753 0.853 0.811 0.461 0.734 0.845
2020-11-18 22:52:04,129 - mmdet - INFO - Epoch [4][100/626]	lr: 1.000e-02, eta: 0:06:20, time: 0.769, data_time: 0.034, memory: 11911, loss_rpn_cls: 0.0029, loss_rpn_bbox: 0.0440, loss_cls: 0.0454, acc: 98.0693, loss_bbox: 0.1106, loss: 0.2029
2020-11-18 22:53:19,021 - mmdet - INFO - Epoch [4][200/626]	lr: 1.000e-02, eta: 0:05:08, time: 0.749, data_time: 0.012, memory: 11911, loss_rpn_cls: 0.0064, loss_rpn_bbox: 0.0486, loss_cls: 0.0542, acc: 97.7861, loss_bbox: 0.1205, loss: 0.2297
2020-11-18 22:54:34,036 - mmdet - INFO - Epoch [4][300/626]	lr: 1.000e-02, eta: 0:03:56, time: 0.750, data_time: 0.012, memory: 11911, loss_rpn_cls: 0.0048, loss_rpn_bbox: 0.0452, loss_cls: 0.0537, acc: 97.7803, loss_bbox: 0.1100, loss: 0.2137
2020-11-18 22:55:48,893 - mmdet - INFO - Epoch [4][400/626]	lr: 1.000e-02, eta: 0:02:44, time: 0.749, data_time: 0.012, memory: 11911, loss_rpn_cls: 0.0092, loss_rpn_bbox: 0.0501, loss_cls: 0.0552, acc: 97.7822, loss_bbox: 0.1172, loss: 0.2317
2020-11-18 22:57:03,742 - mmdet - INFO - Epoch [4][500/626]	lr: 1.000e-02, eta: 0:01:31, time: 0.748, data_time: 0.012, memory: 11911, loss_rpn_cls: 0.0097, loss_rpn_bbox: 0.0516, loss_cls: 0.0592, acc: 97.6250, loss_bbox: 0.1227, loss: 0.2432
2020-11-18 22:58:18,494 - mmdet - INFO - Epoch [4][600/626]	lr: 1.000e-02, eta: 0:00:18, time: 0.748, data_time: 0.012, memory: 11911, loss_rpn_cls: 0.0046, loss_rpn_bbox: 0.0415, loss_cls: 0.0439, acc: 98.2500, loss_bbox: 0.1004, loss: 0.1903
2020-11-18 22:58:37,803 - mmdet - INFO - Saving checkpoint at 4 epochs
2020-11-18 22:59:05,014 - mmdet - INFO - Evaluating bbox...
2020-11-18 22:59:08,030 - mmdet - INFO - Epoch [4][626/626]	lr: 1.000e-02, bbox_mAP: 0.7460, bbox_mAP_50: 0.8480, bbox_mAP_75: 0.8070, bbox_mAP_s: 0.4430, bbox_mAP_m: 0.7200, bbox_mAP_l: 0.8430, bbox_mAP_copypaste: 0.746 0.848 0.807 0.443 0.720 0.843
2020-11-18 22:59:39,907 - mmdet - INFO - Epoch(train) [4][79]	loss_rpn_cls: 0.0065, loss_rpn_bbox: 0.0548, loss_cls: 0.0783, acc: 96.8503, loss_bbox: 0.1437, loss: 0.2832
