2020-11-18 11:20:03,050 - mmdet - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.6.4 |Anaconda, Inc.| (default, Jan 16 2018, 18:10:19) [GCC 7.2.0]
CUDA available: True
CUDA_HOME: /usr/local/cuda
NVCC: Cuda compilation tools, release 10.0, V10.0.130
GPU 0: Tesla P100-PCIE-16GB
GCC: gcc (GCC) 5.3.0
PyTorch: 1.3.1+cu100
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - Intel(R) Math Kernel Library Version 2019.0.4 Product Build 20190411 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.20.5 (Git Hash 0125f28c61c1f822fd48570b4c1066f96fcb9b2e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CUDA Runtime 10.0
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.1
  - Build settings: BLAS=MKL, BUILD_NAMEDTENSOR=OFF, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Wno-stringop-overflow, DISABLE_NUMA=1, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=True, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

TorchVision: 0.4.2+cu100
OpenCV: 4.4.0
MMCV: 1.0.5
MMDetection: 2.3.0+788fa8d
MMDetection Compiler: GCC 7.3
MMDetection CUDA Compiler: 10.0
------------------------------------------------------------

2020-11-18 11:20:03,050 - mmdet - INFO - Distributed training: False
2020-11-18 11:20:03,444 - mmdet - INFO - Config:
model = dict(
    type='FasterRCNN',
    pretrained='torchvision://resnet50',
    backbone=dict(
        type='ResNet',
        depth=50,
        num_stages=4,
        out_indices=(0, 1, 2, 3),
        frozen_stages=1,
        norm_cfg=dict(type='BN', requires_grad=True),
        norm_eval=True,
        style='pytorch'),
    neck=dict(
        type='FPN',
        in_channels=[256, 512, 1024, 2048],
        out_channels=256,
        num_outs=5),
    rpn_head=dict(
        type='RPNHead',
        in_channels=256,
        feat_channels=256,
        anchor_generator=dict(
            type='AnchorGenerator',
            scales=[8],
            ratios=[0.5, 1.0, 2.0],
            strides=[4, 8, 16, 32, 64]),
        bbox_coder=dict(
            type='DeltaXYWHBBoxCoder',
            target_means=[0.0, 0.0, 0.0, 0.0],
            target_stds=[1.0, 1.0, 1.0, 1.0]),
        loss_cls=dict(
            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),
        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),
    roi_head=dict(
        type='StandardRoIHead',
        bbox_roi_extractor=dict(
            type='SingleRoIExtractor',
            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),
            out_channels=256,
            featmap_strides=[4, 8, 16, 32]),
        bbox_head=dict(
            type='Shared2FCBBoxHead',
            in_channels=256,
            fc_out_channels=1024,
            roi_feat_size=7,
            num_classes=2,
            bbox_coder=dict(
                type='DeltaXYWHBBoxCoder',
                target_means=[0.0, 0.0, 0.0, 0.0],
                target_stds=[0.1, 0.1, 0.2, 0.2]),
            reg_class_agnostic=False,
            loss_cls=dict(
                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),
            loss_bbox=dict(type='L1Loss', loss_weight=1.0))))
train_cfg = dict(
    rpn=dict(
        assigner=dict(
            type='MaxIoUAssigner',
            pos_iou_thr=0.7,
            neg_iou_thr=0.3,
            min_pos_iou=0.3,
            match_low_quality=True,
            ignore_iof_thr=-1),
        sampler=dict(
            type='RandomSampler',
            num=256,
            pos_fraction=0.5,
            neg_pos_ub=-1,
            add_gt_as_proposals=False),
        allowed_border=-1,
        pos_weight=-1,
        debug=False),
    rpn_proposal=dict(
        nms_across_levels=False,
        nms_pre=2000,
        nms_post=1000,
        max_num=1000,
        nms_thr=0.7,
        min_bbox_size=0),
    rcnn=dict(
        assigner=dict(
            type='MaxIoUAssigner',
            pos_iou_thr=0.5,
            neg_iou_thr=0.5,
            min_pos_iou=0.5,
            match_low_quality=False,
            ignore_iof_thr=-1),
        sampler=dict(
            type='RandomSampler',
            num=512,
            pos_fraction=0.25,
            neg_pos_ub=-1,
            add_gt_as_proposals=True),
        pos_weight=-1,
        debug=False))
test_cfg = dict(
    rpn=dict(
        nms_across_levels=False,
        nms_pre=1000,
        nms_post=1000,
        max_num=1000,
        nms_thr=0.7,
        min_bbox_size=0),
    rcnn=dict(
        score_thr=0.05,
        nms=dict(type='nms', iou_threshold=0.5),
        max_per_img=100))
dataset_type = 'CocoDataset'
data_root = 'data/coco/'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(type='Resize', img_scale=(1550, 1550), keep_ratio=True),
    dict(type='RandomFlip', flip_ratio=0.5),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='Pad', size_divisor=32),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(1550, 1550),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=2,
    workers_per_gpu=2,
    train=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_trai.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(type='Resize', img_scale=(1550, 1550), keep_ratio=True),
            dict(type='RandomFlip', flip_ratio=0.5),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
        ]),
    val=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_test.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1550, 1550),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_vals.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1550, 1550),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
evaluation = dict(interval=1, metric='bbox')
optimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0001)
optimizer_config = dict(grad_clip=None)
lr_config = dict(
    policy='step',
    warmup='linear',
    warmup_iters=500,
    warmup_ratio=0.001,
    step=[8, 11])
total_epochs = 4
checkpoint_config = dict(interval=4)
log_config = dict(interval=100, hooks=[dict(type='TextLoggerHook')])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = '/home/admin/.cache/torch/checkpoints/X.pth'
resume_from = None
workflow = [('train', 2), ('val', 1)]
work_dir = '/home/admin/jupyter/SecurityAI_Round5/data/work'
gpu_ids = range(0, 1)

2020-11-18 11:20:03,953 - mmdet - INFO - load model from: torchvision://resnet50
2020-11-18 11:20:11,743 - mmdet - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: fc.weight, fc.bias

2020-11-18 11:20:21,976 - mmdet - INFO - load checkpoint from /home/admin/.cache/torch/checkpoints/X.pth
2020-11-18 11:20:28,503 - mmdet - INFO - Start running, host: admin@fuxilabor_labor0_S4_Odps_S95_dsw_prepaid_cnsh_838_2020111802041, work_dir: /home/admin/jupyter/SecurityAI_Round5/data/work
2020-11-18 11:20:28,503 - mmdet - INFO - workflow: [('train', 2), ('val', 1)], max: 4 epochs
2020-11-18 11:21:45,757 - mmdet - INFO - Epoch [1][100/616]	lr: 1.988e-03, eta: 0:30:21, time: 0.771, data_time: 0.033, memory: 9843, loss_rpn_cls: 0.0103, loss_rpn_bbox: 0.0583, loss_cls: 0.0769, acc: 96.8369, loss_bbox: 0.1490, loss: 0.2945
2020-11-18 11:23:00,013 - mmdet - INFO - Epoch [1][200/616]	lr: 3.986e-03, eta: 0:28:32, time: 0.743, data_time: 0.012, memory: 9843, loss_rpn_cls: 0.0102, loss_rpn_bbox: 0.0477, loss_cls: 0.0599, acc: 97.5957, loss_bbox: 0.1253, loss: 0.2432
2020-11-18 11:24:14,574 - mmdet - INFO - Epoch [1][300/616]	lr: 5.984e-03, eta: 0:27:09, time: 0.746, data_time: 0.012, memory: 11883, loss_rpn_cls: 0.0103, loss_rpn_bbox: 0.0448, loss_cls: 0.0561, acc: 97.7422, loss_bbox: 0.1166, loss: 0.2279
2020-11-18 11:25:28,947 - mmdet - INFO - Epoch [1][400/616]	lr: 7.982e-03, eta: 0:25:49, time: 0.744, data_time: 0.012, memory: 11883, loss_rpn_cls: 0.0090, loss_rpn_bbox: 0.0532, loss_cls: 0.0682, acc: 97.1797, loss_bbox: 0.1407, loss: 0.2711
2020-11-18 11:26:43,512 - mmdet - INFO - Epoch [1][500/616]	lr: 9.980e-03, eta: 0:24:32, time: 0.746, data_time: 0.012, memory: 11883, loss_rpn_cls: 0.0126, loss_rpn_bbox: 0.0582, loss_cls: 0.0710, acc: 96.9980, loss_bbox: 0.1448, loss: 0.2866
2020-11-18 11:27:57,971 - mmdet - INFO - Epoch [1][600/616]	lr: 1.000e-02, eta: 0:23:15, time: 0.745, data_time: 0.012, memory: 11883, loss_rpn_cls: 0.0148, loss_rpn_bbox: 0.0580, loss_cls: 0.0711, acc: 97.1924, loss_bbox: 0.1413, loss: 0.2852
2020-11-18 11:28:37,086 - mmdet - INFO - Evaluating bbox...
2020-11-18 11:28:41,615 - mmdet - INFO - Epoch [1][616/616]	lr: 1.000e-02, bbox_mAP: 0.6670, bbox_mAP_50: 0.7760, bbox_mAP_75: 0.7160, bbox_mAP_s: 0.3080, bbox_mAP_m: 0.6150, bbox_mAP_l: 0.7710, bbox_mAP_copypaste: 0.667 0.776 0.716 0.308 0.615 0.771
2020-11-18 11:29:58,457 - mmdet - INFO - Epoch [2][100/616]	lr: 1.000e-02, eta: 0:21:23, time: 0.766, data_time: 0.033, memory: 11883, loss_rpn_cls: 0.0110, loss_rpn_bbox: 0.0608, loss_cls: 0.0829, acc: 96.5830, loss_bbox: 0.1559, loss: 0.3107
2020-11-18 11:31:12,739 - mmdet - INFO - Epoch [2][200/616]	lr: 1.000e-02, eta: 0:20:12, time: 0.743, data_time: 0.012, memory: 11883, loss_rpn_cls: 0.0097, loss_rpn_bbox: 0.0540, loss_cls: 0.0595, acc: 97.6719, loss_bbox: 0.1220, loss: 0.2453
2020-11-18 11:32:27,403 - mmdet - INFO - Epoch [2][300/616]	lr: 1.000e-02, eta: 0:19:00, time: 0.747, data_time: 0.012, memory: 11883, loss_rpn_cls: 0.0069, loss_rpn_bbox: 0.0580, loss_cls: 0.0736, acc: 96.8945, loss_bbox: 0.1510, loss: 0.2895
2020-11-18 11:33:42,069 - mmdet - INFO - Epoch [2][400/616]	lr: 1.000e-02, eta: 0:17:48, time: 0.747, data_time: 0.012, memory: 11883, loss_rpn_cls: 0.0141, loss_rpn_bbox: 0.0620, loss_cls: 0.0723, acc: 97.1113, loss_bbox: 0.1396, loss: 0.2880
2020-11-18 11:34:56,706 - mmdet - INFO - Epoch [2][500/616]	lr: 1.000e-02, eta: 0:16:35, time: 0.746, data_time: 0.012, memory: 11909, loss_rpn_cls: 0.0089, loss_rpn_bbox: 0.0541, loss_cls: 0.0665, acc: 97.3369, loss_bbox: 0.1383, loss: 0.2679
2020-11-18 11:36:11,039 - mmdet - INFO - Epoch [2][600/616]	lr: 1.000e-02, eta: 0:15:22, time: 0.743, data_time: 0.012, memory: 11909, loss_rpn_cls: 0.0155, loss_rpn_bbox: 0.0633, loss_cls: 0.0857, acc: 96.5488, loss_bbox: 0.1667, loss: 0.3312
2020-11-18 11:36:50,097 - mmdet - INFO - Evaluating bbox...
2020-11-18 11:36:53,734 - mmdet - INFO - Epoch [2][616/616]	lr: 1.000e-02, bbox_mAP: 0.7080, bbox_mAP_50: 0.8180, bbox_mAP_75: 0.7660, bbox_mAP_s: 0.3520, bbox_mAP_m: 0.6490, bbox_mAP_l: 0.8150, bbox_mAP_copypaste: 0.708 0.818 0.766 0.352 0.649 0.815
2020-11-18 11:37:27,737 - mmdet - INFO - Epoch(train) [2][85]	loss_rpn_cls: 0.0125, loss_rpn_bbox: 0.0636, loss_cls: 0.1019, acc: 95.9754, loss_bbox: 0.1623, loss: 0.3402
2020-11-18 11:38:44,570 - mmdet - INFO - Epoch [3][100/616]	lr: 1.000e-02, eta: 0:13:48, time: 0.766, data_time: 0.034, memory: 11909, loss_rpn_cls: 0.0058, loss_rpn_bbox: 0.0521, loss_cls: 0.0728, acc: 96.9414, loss_bbox: 0.1548, loss: 0.2855
2020-11-18 11:39:59,148 - mmdet - INFO - Epoch [3][200/616]	lr: 1.000e-02, eta: 0:12:36, time: 0.746, data_time: 0.012, memory: 11909, loss_rpn_cls: 0.0097, loss_rpn_bbox: 0.0572, loss_cls: 0.0638, acc: 97.3691, loss_bbox: 0.1363, loss: 0.2671
2020-11-18 11:41:13,283 - mmdet - INFO - Epoch [3][300/616]	lr: 1.000e-02, eta: 0:11:23, time: 0.741, data_time: 0.012, memory: 11909, loss_rpn_cls: 0.0150, loss_rpn_bbox: 0.0580, loss_cls: 0.0732, acc: 97.1855, loss_bbox: 0.1395, loss: 0.2857
2020-11-18 11:42:27,761 - mmdet - INFO - Epoch [3][400/616]	lr: 1.000e-02, eta: 0:10:10, time: 0.745, data_time: 0.012, memory: 11909, loss_rpn_cls: 0.0096, loss_rpn_bbox: 0.0605, loss_cls: 0.0710, acc: 97.0645, loss_bbox: 0.1455, loss: 0.2866
2020-11-18 11:43:42,147 - mmdet - INFO - Epoch [3][500/616]	lr: 1.000e-02, eta: 0:08:57, time: 0.744, data_time: 0.012, memory: 11909, loss_rpn_cls: 0.0119, loss_rpn_bbox: 0.0593, loss_cls: 0.0790, acc: 96.7061, loss_bbox: 0.1562, loss: 0.3064
2020-11-18 11:44:56,633 - mmdet - INFO - Epoch [3][600/616]	lr: 1.000e-02, eta: 0:07:44, time: 0.745, data_time: 0.012, memory: 11909, loss_rpn_cls: 0.0161, loss_rpn_bbox: 0.0616, loss_cls: 0.0770, acc: 96.8887, loss_bbox: 0.1479, loss: 0.3027
2020-11-18 11:45:35,720 - mmdet - INFO - Evaluating bbox...
2020-11-18 11:45:39,623 - mmdet - INFO - Epoch [3][616/616]	lr: 1.000e-02, bbox_mAP: 0.7060, bbox_mAP_50: 0.8200, bbox_mAP_75: 0.7600, bbox_mAP_s: 0.3600, bbox_mAP_m: 0.6460, bbox_mAP_l: 0.8060, bbox_mAP_copypaste: 0.706 0.820 0.760 0.360 0.646 0.806
2020-11-18 11:46:56,396 - mmdet - INFO - Epoch [4][100/616]	lr: 1.000e-02, eta: 0:06:17, time: 0.766, data_time: 0.033, memory: 11909, loss_rpn_cls: 0.0063, loss_rpn_bbox: 0.0509, loss_cls: 0.0595, acc: 97.6182, loss_bbox: 0.1335, loss: 0.2502
2020-11-18 11:48:11,050 - mmdet - INFO - Epoch [4][200/616]	lr: 1.000e-02, eta: 0:05:04, time: 0.747, data_time: 0.012, memory: 11909, loss_rpn_cls: 0.0079, loss_rpn_bbox: 0.0556, loss_cls: 0.0643, acc: 97.4785, loss_bbox: 0.1329, loss: 0.2608
2020-11-18 11:49:25,777 - mmdet - INFO - Epoch [4][300/616]	lr: 1.000e-02, eta: 0:03:51, time: 0.747, data_time: 0.012, memory: 11909, loss_rpn_cls: 0.0090, loss_rpn_bbox: 0.0555, loss_cls: 0.0729, acc: 97.0029, loss_bbox: 0.1456, loss: 0.2830
2020-11-18 11:50:40,489 - mmdet - INFO - Epoch [4][400/616]	lr: 1.000e-02, eta: 0:02:38, time: 0.747, data_time: 0.012, memory: 11909, loss_rpn_cls: 0.0135, loss_rpn_bbox: 0.0639, loss_cls: 0.0893, acc: 96.3213, loss_bbox: 0.1674, loss: 0.3341
2020-11-18 11:51:55,215 - mmdet - INFO - Epoch [4][500/616]	lr: 1.000e-02, eta: 0:01:25, time: 0.747, data_time: 0.012, memory: 11909, loss_rpn_cls: 0.0117, loss_rpn_bbox: 0.0593, loss_cls: 0.0709, acc: 97.0459, loss_bbox: 0.1419, loss: 0.2837
2020-11-18 11:53:09,700 - mmdet - INFO - Epoch [4][600/616]	lr: 1.000e-02, eta: 0:00:11, time: 0.745, data_time: 0.012, memory: 11909, loss_rpn_cls: 0.0086, loss_rpn_bbox: 0.0541, loss_cls: 0.0657, acc: 97.3252, loss_bbox: 0.1424, loss: 0.2708
2020-11-18 11:53:21,526 - mmdet - INFO - Saving checkpoint at 4 epochs
2020-11-18 11:53:50,610 - mmdet - INFO - Evaluating bbox...
2020-11-18 11:53:54,637 - mmdet - INFO - Epoch [4][616/616]	lr: 1.000e-02, bbox_mAP: 0.7100, bbox_mAP_50: 0.8230, bbox_mAP_75: 0.7580, bbox_mAP_s: 0.3610, bbox_mAP_m: 0.6470, bbox_mAP_l: 0.8100, bbox_mAP_copypaste: 0.710 0.823 0.758 0.361 0.647 0.810
2020-11-18 11:54:28,610 - mmdet - INFO - Epoch(train) [4][85]	loss_rpn_cls: 0.0090, loss_rpn_bbox: 0.0603, loss_cls: 0.0829, acc: 96.6452, loss_bbox: 0.1653, loss: 0.3175
