2020-11-19 10:37:59,684 - mmdet - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.6.4 |Anaconda, Inc.| (default, Jan 16 2018, 18:10:19) [GCC 7.2.0]
CUDA available: True
CUDA_HOME: /usr/local/cuda
NVCC: Cuda compilation tools, release 10.0, V10.0.130
GPU 0: Tesla P100-PCIE-16GB
GCC: gcc (GCC) 5.3.0
PyTorch: 1.3.1+cu100
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - Intel(R) Math Kernel Library Version 2019.0.4 Product Build 20190411 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.20.5 (Git Hash 0125f28c61c1f822fd48570b4c1066f96fcb9b2e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CUDA Runtime 10.0
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.1
  - Build settings: BLAS=MKL, BUILD_NAMEDTENSOR=OFF, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Wno-stringop-overflow, DISABLE_NUMA=1, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=True, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

TorchVision: 0.4.2+cu100
OpenCV: 4.4.0
MMCV: 1.0.5
MMDetection: 2.3.0+788fa8d
MMDetection Compiler: GCC 7.3
MMDetection CUDA Compiler: 10.0
------------------------------------------------------------

2020-11-19 10:37:59,685 - mmdet - INFO - Distributed training: False
2020-11-19 10:38:00,152 - mmdet - INFO - Config:
model = dict(
    type='FasterRCNN',
    pretrained='torchvision://resnet50',
    backbone=dict(
        type='ResNet',
        depth=50,
        num_stages=4,
        out_indices=(0, 1, 2, 3),
        frozen_stages=1,
        norm_cfg=dict(type='BN', requires_grad=True),
        norm_eval=True,
        style='pytorch'),
    neck=dict(
        type='FPN',
        in_channels=[256, 512, 1024, 2048],
        out_channels=256,
        num_outs=5),
    rpn_head=dict(
        type='RPNHead',
        in_channels=256,
        feat_channels=256,
        anchor_generator=dict(
            type='AnchorGenerator',
            scales=[8],
            ratios=[0.5, 1.0, 2.0],
            strides=[4, 8, 16, 32, 64]),
        bbox_coder=dict(
            type='DeltaXYWHBBoxCoder',
            target_means=[0.0, 0.0, 0.0, 0.0],
            target_stds=[1.0, 1.0, 1.0, 1.0]),
        loss_cls=dict(
            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),
        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),
    roi_head=dict(
        type='StandardRoIHead',
        bbox_roi_extractor=dict(
            type='SingleRoIExtractor',
            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),
            out_channels=256,
            featmap_strides=[4, 8, 16, 32]),
        bbox_head=dict(
            type='Shared2FCBBoxHead',
            in_channels=256,
            fc_out_channels=1024,
            roi_feat_size=7,
            num_classes=2,
            bbox_coder=dict(
                type='DeltaXYWHBBoxCoder',
                target_means=[0.0, 0.0, 0.0, 0.0],
                target_stds=[0.1, 0.1, 0.2, 0.2]),
            reg_class_agnostic=False,
            loss_cls=dict(
                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),
            loss_bbox=dict(type='L1Loss', loss_weight=1.0))))
train_cfg = dict(
    rpn=dict(
        assigner=dict(
            type='MaxIoUAssigner',
            pos_iou_thr=0.7,
            neg_iou_thr=0.3,
            min_pos_iou=0.3,
            match_low_quality=True,
            ignore_iof_thr=-1),
        sampler=dict(
            type='RandomSampler',
            num=256,
            pos_fraction=0.5,
            neg_pos_ub=-1,
            add_gt_as_proposals=False),
        allowed_border=-1,
        pos_weight=-1,
        debug=False),
    rpn_proposal=dict(
        nms_across_levels=False,
        nms_pre=2000,
        nms_post=1000,
        max_num=1000,
        nms_thr=0.7,
        min_bbox_size=0),
    rcnn=dict(
        assigner=dict(
            type='MaxIoUAssigner',
            pos_iou_thr=0.5,
            neg_iou_thr=0.5,
            min_pos_iou=0.5,
            match_low_quality=False,
            ignore_iof_thr=-1),
        sampler=dict(
            type='RandomSampler',
            num=512,
            pos_fraction=0.25,
            neg_pos_ub=-1,
            add_gt_as_proposals=True),
        pos_weight=-1,
        debug=False))
test_cfg = dict(
    rpn=dict(
        nms_across_levels=False,
        nms_pre=1000,
        nms_post=1000,
        max_num=1000,
        nms_thr=0.7,
        min_bbox_size=0),
    rcnn=dict(
        score_thr=0.05,
        nms=dict(type='nms', iou_threshold=0.5),
        max_per_img=100))
dataset_type = 'CocoDataset'
data_root = 'data/coco/'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(type='Resize', img_scale=(1550, 1550), keep_ratio=True),
    dict(type='RandomFlip', flip_ratio=0.5),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='Pad', size_divisor=32),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(1550, 1550),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=2,
    workers_per_gpu=2,
    train=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_trai.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(type='Resize', img_scale=(1550, 1550), keep_ratio=True),
            dict(type='RandomFlip', flip_ratio=0.5),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
        ]),
    val=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_test.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1550, 1550),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_vals.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1550, 1550),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
evaluation = dict(interval=1, metric='bbox')
optimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0001)
optimizer_config = dict(grad_clip=None)
lr_config = dict(
    policy='step',
    warmup='linear',
    warmup_iters=500,
    warmup_ratio=0.001,
    step=[8, 11])
total_epochs = 4
checkpoint_config = dict(interval=4)
log_config = dict(interval=100, hooks=[dict(type='TextLoggerHook')])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = '/home/admin/.cache/torch/checkpoints/X.pth'
resume_from = None
workflow = [('train', 2), ('val', 1)]
work_dir = '/home/admin/jupyter/SecurityAI_Round5/data/work'
gpu_ids = range(0, 1)

2020-11-19 10:38:00,688 - mmdet - INFO - load model from: torchvision://resnet50
2020-11-19 10:38:08,857 - mmdet - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: fc.weight, fc.bias

2020-11-19 10:38:19,180 - mmdet - INFO - load checkpoint from /home/admin/.cache/torch/checkpoints/X.pth
2020-11-19 10:38:25,868 - mmdet - INFO - Start running, host: admin@fuxilabor_labor0_S4_Odps_S96_dsw_prepaid_cnsh_838_2020111823124, work_dir: /home/admin/jupyter/SecurityAI_Round5/data/work
2020-11-19 10:38:25,868 - mmdet - INFO - workflow: [('train', 2), ('val', 1)], max: 4 epochs
2020-11-19 10:39:43,644 - mmdet - INFO - Epoch [1][100/627]	lr: 1.988e-03, eta: 0:31:08, time: 0.776, data_time: 0.034, memory: 8025, loss_rpn_cls: 0.0033, loss_rpn_bbox: 0.0357, loss_cls: 0.0388, acc: 98.3828, loss_bbox: 0.0889, loss: 0.1666
2020-11-19 10:40:58,914 - mmdet - INFO - Epoch [1][200/627]	lr: 3.986e-03, eta: 0:29:23, time: 0.753, data_time: 0.012, memory: 8661, loss_rpn_cls: 0.0038, loss_rpn_bbox: 0.0356, loss_cls: 0.0409, acc: 98.3584, loss_bbox: 0.0933, loss: 0.1736
2020-11-19 10:42:14,016 - mmdet - INFO - Epoch [1][300/627]	lr: 5.984e-03, eta: 0:27:57, time: 0.751, data_time: 0.012, memory: 10052, loss_rpn_cls: 0.0049, loss_rpn_bbox: 0.0357, loss_cls: 0.0442, acc: 98.2285, loss_bbox: 0.0897, loss: 0.1745
2020-11-19 10:43:29,644 - mmdet - INFO - Epoch [1][400/627]	lr: 7.982e-03, eta: 0:26:39, time: 0.756, data_time: 0.013, memory: 11913, loss_rpn_cls: 0.0040, loss_rpn_bbox: 0.0377, loss_cls: 0.0377, acc: 98.4209, loss_bbox: 0.0889, loss: 0.1684
2020-11-19 10:44:45,456 - mmdet - INFO - Epoch [1][500/627]	lr: 9.980e-03, eta: 0:25:23, time: 0.758, data_time: 0.013, memory: 11913, loss_rpn_cls: 0.0052, loss_rpn_bbox: 0.0416, loss_cls: 0.0446, acc: 98.1787, loss_bbox: 0.1031, loss: 0.1945
2020-11-19 10:46:00,637 - mmdet - INFO - Epoch [1][600/627]	lr: 1.000e-02, eta: 0:24:05, time: 0.752, data_time: 0.013, memory: 11913, loss_rpn_cls: 0.0054, loss_rpn_bbox: 0.0444, loss_cls: 0.0473, acc: 98.0117, loss_bbox: 0.1048, loss: 0.2019
2020-11-19 10:46:45,591 - mmdet - INFO - Evaluating bbox...
2020-11-19 10:46:48,556 - mmdet - INFO - Epoch [1][627/627]	lr: 1.000e-02, bbox_mAP: 0.7500, bbox_mAP_50: 0.8320, bbox_mAP_75: 0.7990, bbox_mAP_s: 0.4150, bbox_mAP_m: 0.7670, bbox_mAP_l: 0.8670, bbox_mAP_copypaste: 0.750 0.832 0.799 0.415 0.767 0.867
2020-11-19 10:48:06,365 - mmdet - INFO - Epoch [2][100/627]	lr: 1.000e-02, eta: 0:21:43, time: 0.776, data_time: 0.034, memory: 11913, loss_rpn_cls: 0.0038, loss_rpn_bbox: 0.0411, loss_cls: 0.0466, acc: 97.9854, loss_bbox: 0.1015, loss: 0.1930
2020-11-19 10:49:21,694 - mmdet - INFO - Epoch [2][200/627]	lr: 1.000e-02, eta: 0:20:34, time: 0.753, data_time: 0.012, memory: 11913, loss_rpn_cls: 0.0036, loss_rpn_bbox: 0.0424, loss_cls: 0.0404, acc: 98.3125, loss_bbox: 0.0987, loss: 0.1851
2020-11-19 10:50:36,970 - mmdet - INFO - Epoch [2][300/627]	lr: 1.000e-02, eta: 0:19:24, time: 0.753, data_time: 0.013, memory: 11913, loss_rpn_cls: 0.0033, loss_rpn_bbox: 0.0393, loss_cls: 0.0408, acc: 98.2656, loss_bbox: 0.1000, loss: 0.1834
2020-11-19 10:51:52,102 - mmdet - INFO - Epoch [2][400/627]	lr: 1.000e-02, eta: 0:18:12, time: 0.751, data_time: 0.012, memory: 11913, loss_rpn_cls: 0.0056, loss_rpn_bbox: 0.0450, loss_cls: 0.0473, acc: 98.1504, loss_bbox: 0.1038, loss: 0.2018
2020-11-19 10:53:07,615 - mmdet - INFO - Epoch [2][500/627]	lr: 1.000e-02, eta: 0:17:01, time: 0.755, data_time: 0.013, memory: 11913, loss_rpn_cls: 0.0039, loss_rpn_bbox: 0.0416, loss_cls: 0.0465, acc: 98.1289, loss_bbox: 0.1037, loss: 0.1958
2020-11-19 10:54:22,830 - mmdet - INFO - Epoch [2][600/627]	lr: 1.000e-02, eta: 0:15:48, time: 0.752, data_time: 0.012, memory: 11913, loss_rpn_cls: 0.0050, loss_rpn_bbox: 0.0464, loss_cls: 0.0500, acc: 97.8926, loss_bbox: 0.1023, loss: 0.2038
2020-11-19 10:55:07,719 - mmdet - INFO - Evaluating bbox...
2020-11-19 10:55:10,745 - mmdet - INFO - Epoch [2][627/627]	lr: 1.000e-02, bbox_mAP: 0.7400, bbox_mAP_50: 0.8220, bbox_mAP_75: 0.7880, bbox_mAP_s: 0.4020, bbox_mAP_m: 0.7490, bbox_mAP_l: 0.8500, bbox_mAP_copypaste: 0.740 0.822 0.788 0.402 0.749 0.850
2020-11-19 10:55:41,971 - mmdet - INFO - Epoch(train) [2][76]	loss_rpn_cls: 0.0066, loss_rpn_bbox: 0.0447, loss_cls: 0.0608, acc: 97.5522, loss_bbox: 0.1115, loss: 0.2236
2020-11-19 10:56:59,723 - mmdet - INFO - Epoch [3][100/627]	lr: 1.000e-02, eta: 0:14:00, time: 0.775, data_time: 0.034, memory: 11913, loss_rpn_cls: 0.0045, loss_rpn_bbox: 0.0427, loss_cls: 0.0456, acc: 98.1484, loss_bbox: 0.1083, loss: 0.2012
2020-11-19 10:58:14,758 - mmdet - INFO - Epoch [3][200/627]	lr: 1.000e-02, eta: 0:12:49, time: 0.750, data_time: 0.012, memory: 11913, loss_rpn_cls: 0.0033, loss_rpn_bbox: 0.0378, loss_cls: 0.0414, acc: 98.3467, loss_bbox: 0.0905, loss: 0.1730
2020-11-19 10:59:30,066 - mmdet - INFO - Epoch [3][300/627]	lr: 1.000e-02, eta: 0:11:37, time: 0.753, data_time: 0.012, memory: 11913, loss_rpn_cls: 0.0031, loss_rpn_bbox: 0.0409, loss_cls: 0.0427, acc: 98.1807, loss_bbox: 0.0978, loss: 0.1847
2020-11-19 11:00:45,207 - mmdet - INFO - Epoch [3][400/627]	lr: 1.000e-02, eta: 0:10:25, time: 0.751, data_time: 0.012, memory: 11913, loss_rpn_cls: 0.0031, loss_rpn_bbox: 0.0415, loss_cls: 0.0449, acc: 98.0889, loss_bbox: 0.1047, loss: 0.1942
2020-11-19 11:02:00,726 - mmdet - INFO - Epoch [3][500/627]	lr: 1.000e-02, eta: 0:09:13, time: 0.755, data_time: 0.013, memory: 11913, loss_rpn_cls: 0.0038, loss_rpn_bbox: 0.0456, loss_cls: 0.0519, acc: 97.7861, loss_bbox: 0.1136, loss: 0.2149
2020-11-19 11:03:16,099 - mmdet - INFO - Epoch [3][600/627]	lr: 1.000e-02, eta: 0:08:00, time: 0.754, data_time: 0.013, memory: 11913, loss_rpn_cls: 0.0053, loss_rpn_bbox: 0.0443, loss_cls: 0.0504, acc: 97.8721, loss_bbox: 0.1101, loss: 0.2101
2020-11-19 11:04:01,193 - mmdet - INFO - Evaluating bbox...
2020-11-19 11:04:04,294 - mmdet - INFO - Epoch [3][627/627]	lr: 1.000e-02, bbox_mAP: 0.7290, bbox_mAP_50: 0.8120, bbox_mAP_75: 0.7830, bbox_mAP_s: 0.3930, bbox_mAP_m: 0.7460, bbox_mAP_l: 0.8450, bbox_mAP_copypaste: 0.729 0.812 0.783 0.393 0.746 0.845
2020-11-19 11:05:22,051 - mmdet - INFO - Epoch [4][100/627]	lr: 1.000e-02, eta: 0:06:23, time: 0.776, data_time: 0.034, memory: 11913, loss_rpn_cls: 0.0057, loss_rpn_bbox: 0.0469, loss_cls: 0.0493, acc: 97.9727, loss_bbox: 0.1056, loss: 0.2075
2020-11-19 11:06:37,374 - mmdet - INFO - Epoch [4][200/627]	lr: 1.000e-02, eta: 0:05:10, time: 0.753, data_time: 0.013, memory: 11913, loss_rpn_cls: 0.0035, loss_rpn_bbox: 0.0388, loss_cls: 0.0404, acc: 98.2881, loss_bbox: 0.0944, loss: 0.1770
2020-11-19 11:07:52,899 - mmdet - INFO - Epoch [4][300/627]	lr: 1.000e-02, eta: 0:03:58, time: 0.755, data_time: 0.013, memory: 11913, loss_rpn_cls: 0.0028, loss_rpn_bbox: 0.0379, loss_cls: 0.0427, acc: 98.2422, loss_bbox: 0.0993, loss: 0.1828
2020-11-19 11:09:08,164 - mmdet - INFO - Epoch [4][400/627]	lr: 1.000e-02, eta: 0:02:45, time: 0.753, data_time: 0.012, memory: 11913, loss_rpn_cls: 0.0035, loss_rpn_bbox: 0.0428, loss_cls: 0.0509, acc: 97.8223, loss_bbox: 0.1111, loss: 0.2082
2020-11-19 11:10:23,419 - mmdet - INFO - Epoch [4][500/627]	lr: 1.000e-02, eta: 0:01:32, time: 0.753, data_time: 0.013, memory: 11913, loss_rpn_cls: 0.0034, loss_rpn_bbox: 0.0417, loss_cls: 0.0424, acc: 98.2207, loss_bbox: 0.0966, loss: 0.1840
2020-11-19 11:11:38,934 - mmdet - INFO - Epoch [4][600/627]	lr: 1.000e-02, eta: 0:00:19, time: 0.755, data_time: 0.013, memory: 11913, loss_rpn_cls: 0.0032, loss_rpn_bbox: 0.0410, loss_cls: 0.0456, acc: 98.0410, loss_bbox: 0.0983, loss: 0.1880
2020-11-19 11:11:59,201 - mmdet - INFO - Saving checkpoint at 4 epochs
2020-11-19 11:12:26,152 - mmdet - INFO - Evaluating bbox...
2020-11-19 11:12:29,200 - mmdet - INFO - Epoch [4][627/627]	lr: 1.000e-02, bbox_mAP: 0.7300, bbox_mAP_50: 0.8180, bbox_mAP_75: 0.7850, bbox_mAP_s: 0.3920, bbox_mAP_m: 0.7390, bbox_mAP_l: 0.8390, bbox_mAP_copypaste: 0.730 0.818 0.785 0.392 0.739 0.839
2020-11-19 11:13:00,314 - mmdet - INFO - Epoch(train) [4][76]	loss_rpn_cls: 0.0090, loss_rpn_bbox: 0.0428, loss_cls: 0.0609, acc: 97.5278, loss_bbox: 0.1141, loss: 0.2267
