2020-11-22 13:49:00,911 - mmdet - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.6.4 |Anaconda, Inc.| (default, Jan 16 2018, 18:10:19) [GCC 7.2.0]
CUDA available: True
CUDA_HOME: /usr/local/cuda
NVCC: Cuda compilation tools, release 10.0, V10.0.130
GPU 0: Tesla P100-PCIE-16GB
GCC: gcc (GCC) 5.3.0
PyTorch: 1.3.1+cu100
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - Intel(R) Math Kernel Library Version 2019.0.4 Product Build 20190411 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.20.5 (Git Hash 0125f28c61c1f822fd48570b4c1066f96fcb9b2e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CUDA Runtime 10.0
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.1
  - Build settings: BLAS=MKL, BUILD_NAMEDTENSOR=OFF, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Wno-stringop-overflow, DISABLE_NUMA=1, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=True, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

TorchVision: 0.4.2+cu100
OpenCV: 4.4.0
MMCV: 1.0.5
MMDetection: 2.3.0+788fa8d
MMDetection Compiler: GCC 7.3
MMDetection CUDA Compiler: 10.0
------------------------------------------------------------

2020-11-22 13:49:00,912 - mmdet - INFO - Distributed training: False
2020-11-22 13:49:01,303 - mmdet - INFO - Config:
model = dict(
    type='FasterRCNN',
    pretrained='torchvision://resnet50',
    backbone=dict(
        type='ResNet',
        depth=50,
        num_stages=4,
        out_indices=(0, 1, 2, 3),
        frozen_stages=1,
        norm_cfg=dict(type='BN', requires_grad=True),
        norm_eval=True,
        style='pytorch'),
    neck=dict(
        type='FPN',
        in_channels=[256, 512, 1024, 2048],
        out_channels=256,
        num_outs=5),
    rpn_head=dict(
        type='RPNHead',
        in_channels=256,
        feat_channels=256,
        anchor_generator=dict(
            type='AnchorGenerator',
            scales=[8],
            ratios=[0.5, 1.0, 2.0],
            strides=[4, 8, 16, 32, 64]),
        bbox_coder=dict(
            type='DeltaXYWHBBoxCoder',
            target_means=[0.0, 0.0, 0.0, 0.0],
            target_stds=[1.0, 1.0, 1.0, 1.0]),
        loss_cls=dict(
            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),
        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),
    roi_head=dict(
        type='StandardRoIHead',
        bbox_roi_extractor=dict(
            type='SingleRoIExtractor',
            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),
            out_channels=256,
            featmap_strides=[4, 8, 16, 32]),
        bbox_head=dict(
            type='Shared2FCBBoxHead',
            in_channels=256,
            fc_out_channels=1024,
            roi_feat_size=7,
            num_classes=2,
            bbox_coder=dict(
                type='DeltaXYWHBBoxCoder',
                target_means=[0.0, 0.0, 0.0, 0.0],
                target_stds=[0.1, 0.1, 0.2, 0.2]),
            reg_class_agnostic=False,
            loss_cls=dict(
                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),
            loss_bbox=dict(type='L1Loss', loss_weight=1.0))))
train_cfg = dict(
    rpn=dict(
        assigner=dict(
            type='MaxIoUAssigner',
            pos_iou_thr=0.7,
            neg_iou_thr=0.3,
            min_pos_iou=0.3,
            match_low_quality=True,
            ignore_iof_thr=-1),
        sampler=dict(
            type='RandomSampler',
            num=256,
            pos_fraction=0.5,
            neg_pos_ub=-1,
            add_gt_as_proposals=False),
        allowed_border=-1,
        pos_weight=-1,
        debug=False),
    rpn_proposal=dict(
        nms_across_levels=False,
        nms_pre=2000,
        nms_post=1000,
        max_num=1000,
        nms_thr=0.7,
        min_bbox_size=0),
    rcnn=dict(
        assigner=dict(
            type='MaxIoUAssigner',
            pos_iou_thr=0.5,
            neg_iou_thr=0.5,
            min_pos_iou=0.5,
            match_low_quality=False,
            ignore_iof_thr=-1),
        sampler=dict(
            type='RandomSampler',
            num=512,
            pos_fraction=0.25,
            neg_pos_ub=-1,
            add_gt_as_proposals=True),
        pos_weight=-1,
        debug=False))
test_cfg = dict(
    rpn=dict(
        nms_across_levels=False,
        nms_pre=1000,
        nms_post=1000,
        max_num=1000,
        nms_thr=0.7,
        min_bbox_size=0),
    rcnn=dict(
        score_thr=0.05,
        nms=dict(type='nms', iou_threshold=0.5),
        max_per_img=100))
dataset_type = 'CocoDataset'
data_root = 'data/coco/'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(type='Resize', img_scale=(1550, 1550), keep_ratio=True),
    dict(type='RandomFlip', flip_ratio=0.5),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='Pad', size_divisor=32),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(1550, 1550),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=2,
    workers_per_gpu=2,
    train=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_trai.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(type='Resize', img_scale=(1550, 1550), keep_ratio=True),
            dict(type='RandomFlip', flip_ratio=0.5),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
        ]),
    val=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_test.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1550, 1550),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_vals.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1550, 1550),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
evaluation = dict(interval=1, metric='bbox')
optimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0001)
optimizer_config = dict(grad_clip=None)
lr_config = dict(
    policy='step',
    warmup='linear',
    warmup_iters=500,
    warmup_ratio=0.001,
    step=[8, 11])
total_epochs = 4
checkpoint_config = dict(interval=4)
log_config = dict(interval=100, hooks=[dict(type='TextLoggerHook')])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = '/home/admin/.cache/torch/checkpoints/X.pth'
resume_from = None
workflow = [('train', 2), ('val', 1)]
work_dir = '/home/admin/jupyter/SecurityAI_Round5/data/work'
gpu_ids = range(0, 1)

2020-11-22 13:49:01,798 - mmdet - INFO - load model from: torchvision://resnet50
2020-11-22 13:49:09,656 - mmdet - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: fc.weight, fc.bias

2020-11-22 13:49:19,851 - mmdet - INFO - load checkpoint from /home/admin/.cache/torch/checkpoints/X.pth
2020-11-22 13:49:26,640 - mmdet - INFO - Start running, host: admin@fuxilabor_labor0_S4_Odps_S96_dsw_prepaid_cnsh_838_2020112201080, work_dir: /home/admin/jupyter/SecurityAI_Round5/data/work
2020-11-22 13:49:26,640 - mmdet - INFO - workflow: [('train', 2), ('val', 1)], max: 4 epochs
2020-11-22 13:50:44,122 - mmdet - INFO - Epoch [1][100/633]	lr: 1.988e-03, eta: 0:31:19, time: 0.773, data_time: 0.034, memory: 8808, loss_rpn_cls: 0.0029, loss_rpn_bbox: 0.0292, loss_cls: 0.0372, acc: 98.4385, loss_bbox: 0.0782, loss: 0.1476
2020-11-22 13:51:59,260 - mmdet - INFO - Epoch [1][200/633]	lr: 3.986e-03, eta: 0:29:37, time: 0.751, data_time: 0.012, memory: 11913, loss_rpn_cls: 0.0027, loss_rpn_bbox: 0.0290, loss_cls: 0.0340, acc: 98.5947, loss_bbox: 0.0764, loss: 0.1421
2020-11-22 13:53:14,260 - mmdet - INFO - Epoch [1][300/633]	lr: 5.984e-03, eta: 0:28:12, time: 0.750, data_time: 0.012, memory: 11913, loss_rpn_cls: 0.0021, loss_rpn_bbox: 0.0262, loss_cls: 0.0300, acc: 98.7646, loss_bbox: 0.0648, loss: 0.1232
2020-11-22 13:54:29,092 - mmdet - INFO - Epoch [1][400/633]	lr: 7.982e-03, eta: 0:26:51, time: 0.748, data_time: 0.012, memory: 11913, loss_rpn_cls: 0.0021, loss_rpn_bbox: 0.0253, loss_cls: 0.0258, acc: 98.8887, loss_bbox: 0.0661, loss: 0.1193
2020-11-22 13:55:43,740 - mmdet - INFO - Epoch [1][500/633]	lr: 9.980e-03, eta: 0:25:31, time: 0.746, data_time: 0.012, memory: 11913, loss_rpn_cls: 0.0022, loss_rpn_bbox: 0.0273, loss_cls: 0.0280, acc: 98.8594, loss_bbox: 0.0694, loss: 0.1269
2020-11-22 13:56:58,711 - mmdet - INFO - Epoch [1][600/633]	lr: 1.000e-02, eta: 0:24:15, time: 0.750, data_time: 0.012, memory: 11913, loss_rpn_cls: 0.0028, loss_rpn_bbox: 0.0342, loss_cls: 0.0398, acc: 98.2217, loss_bbox: 0.0801, loss: 0.1570
2020-11-22 13:57:47,254 - mmdet - INFO - Evaluating bbox...
2020-11-22 13:57:48,993 - mmdet - INFO - Epoch [1][633/633]	lr: 1.000e-02, bbox_mAP: 0.8400, bbox_mAP_50: 0.8940, bbox_mAP_75: 0.8830, bbox_mAP_s: 0.5740, bbox_mAP_m: 0.8830, bbox_mAP_l: 0.8990, bbox_mAP_copypaste: 0.840 0.894 0.883 0.574 0.883 0.899
2020-11-22 13:59:06,385 - mmdet - INFO - Epoch [2][100/633]	lr: 1.000e-02, eta: 0:21:38, time: 0.772, data_time: 0.033, memory: 11913, loss_rpn_cls: 0.0032, loss_rpn_bbox: 0.0311, loss_cls: 0.0304, acc: 98.7520, loss_bbox: 0.0713, loss: 0.1361
2020-11-22 14:00:21,193 - mmdet - INFO - Epoch [2][200/633]	lr: 1.000e-02, eta: 0:20:31, time: 0.748, data_time: 0.012, memory: 11913, loss_rpn_cls: 0.0029, loss_rpn_bbox: 0.0329, loss_cls: 0.0342, acc: 98.5361, loss_bbox: 0.0762, loss: 0.1462
2020-11-22 14:01:36,262 - mmdet - INFO - Epoch [2][300/633]	lr: 1.000e-02, eta: 0:19:23, time: 0.751, data_time: 0.012, memory: 11913, loss_rpn_cls: 0.0041, loss_rpn_bbox: 0.0347, loss_cls: 0.0378, acc: 98.4111, loss_bbox: 0.0788, loss: 0.1554
2020-11-22 14:02:50,964 - mmdet - INFO - Epoch [2][400/633]	lr: 1.000e-02, eta: 0:18:13, time: 0.747, data_time: 0.012, memory: 11913, loss_rpn_cls: 0.0045, loss_rpn_bbox: 0.0343, loss_cls: 0.0361, acc: 98.4912, loss_bbox: 0.0814, loss: 0.1562
2020-11-22 14:04:05,832 - mmdet - INFO - Epoch [2][500/633]	lr: 1.000e-02, eta: 0:17:03, time: 0.749, data_time: 0.012, memory: 11913, loss_rpn_cls: 0.0037, loss_rpn_bbox: 0.0308, loss_cls: 0.0315, acc: 98.6865, loss_bbox: 0.0714, loss: 0.1375
2020-11-22 14:05:20,649 - mmdet - INFO - Epoch [2][600/633]	lr: 1.000e-02, eta: 0:15:51, time: 0.748, data_time: 0.012, memory: 11913, loss_rpn_cls: 0.0033, loss_rpn_bbox: 0.0333, loss_cls: 0.0324, acc: 98.6445, loss_bbox: 0.0776, loss: 0.1466
2020-11-22 14:06:09,318 - mmdet - INFO - Evaluating bbox...
2020-11-22 14:06:11,074 - mmdet - INFO - Epoch [2][633/633]	lr: 1.000e-02, bbox_mAP: 0.8370, bbox_mAP_50: 0.8930, bbox_mAP_75: 0.8840, bbox_mAP_s: 0.5510, bbox_mAP_m: 0.8760, bbox_mAP_l: 0.8920, bbox_mAP_copypaste: 0.837 0.893 0.884 0.551 0.876 0.892
2020-11-22 14:06:41,300 - mmdet - INFO - Epoch(train) [2][75]	loss_rpn_cls: 0.0038, loss_rpn_bbox: 0.0299, loss_cls: 0.0343, acc: 98.6016, loss_bbox: 0.0742, loss: 0.1422
2020-11-22 14:07:58,401 - mmdet - INFO - Epoch [3][100/633]	lr: 1.000e-02, eta: 0:13:56, time: 0.769, data_time: 0.033, memory: 11913, loss_rpn_cls: 0.0034, loss_rpn_bbox: 0.0336, loss_cls: 0.0339, acc: 98.6123, loss_bbox: 0.0822, loss: 0.1530
2020-11-22 14:09:13,235 - mmdet - INFO - Epoch [3][200/633]	lr: 1.000e-02, eta: 0:12:47, time: 0.748, data_time: 0.012, memory: 11913, loss_rpn_cls: 0.0026, loss_rpn_bbox: 0.0342, loss_cls: 0.0345, acc: 98.5557, loss_bbox: 0.0842, loss: 0.1556
2020-11-22 14:10:28,355 - mmdet - INFO - Epoch [3][300/633]	lr: 1.000e-02, eta: 0:11:37, time: 0.751, data_time: 0.012, memory: 11913, loss_rpn_cls: 0.0028, loss_rpn_bbox: 0.0320, loss_cls: 0.0323, acc: 98.6543, loss_bbox: 0.0794, loss: 0.1464
2020-11-22 14:11:43,201 - mmdet - INFO - Epoch [3][400/633]	lr: 1.000e-02, eta: 0:10:26, time: 0.748, data_time: 0.012, memory: 11913, loss_rpn_cls: 0.0027, loss_rpn_bbox: 0.0328, loss_cls: 0.0383, acc: 98.3213, loss_bbox: 0.0851, loss: 0.1588
2020-11-22 14:12:57,939 - mmdet - INFO - Epoch [3][500/633]	lr: 1.000e-02, eta: 0:09:15, time: 0.747, data_time: 0.012, memory: 11913, loss_rpn_cls: 0.0041, loss_rpn_bbox: 0.0316, loss_cls: 0.0360, acc: 98.5693, loss_bbox: 0.0755, loss: 0.1473
2020-11-22 14:14:14,379 - mmdet - INFO - Epoch [3][600/633]	lr: 1.000e-02, eta: 0:08:04, time: 0.764, data_time: 0.028, memory: 11913, loss_rpn_cls: 0.0042, loss_rpn_bbox: 0.0328, loss_cls: 0.0409, acc: 98.2539, loss_bbox: 0.0886, loss: 0.1665
2020-11-22 14:15:03,085 - mmdet - INFO - Evaluating bbox...
2020-11-22 14:15:05,021 - mmdet - INFO - Epoch [3][633/633]	lr: 1.000e-02, bbox_mAP: 0.8140, bbox_mAP_50: 0.8810, bbox_mAP_75: 0.8680, bbox_mAP_s: 0.5290, bbox_mAP_m: 0.8290, bbox_mAP_l: 0.8730, bbox_mAP_copypaste: 0.814 0.881 0.868 0.529 0.829 0.873
2020-11-22 14:16:22,157 - mmdet - INFO - Epoch [4][100/633]	lr: 1.000e-02, eta: 0:06:22, time: 0.769, data_time: 0.033, memory: 11913, loss_rpn_cls: 0.0049, loss_rpn_bbox: 0.0389, loss_cls: 0.0421, acc: 98.3418, loss_bbox: 0.0918, loss: 0.1776
2020-11-22 14:17:36,763 - mmdet - INFO - Epoch [4][200/633]	lr: 1.000e-02, eta: 0:05:11, time: 0.746, data_time: 0.012, memory: 11913, loss_rpn_cls: 0.0041, loss_rpn_bbox: 0.0364, loss_cls: 0.0418, acc: 98.2910, loss_bbox: 0.0891, loss: 0.1714
2020-11-22 14:18:51,645 - mmdet - INFO - Epoch [4][300/633]	lr: 1.000e-02, eta: 0:03:59, time: 0.749, data_time: 0.012, memory: 11913, loss_rpn_cls: 0.0045, loss_rpn_bbox: 0.0343, loss_cls: 0.0381, acc: 98.3955, loss_bbox: 0.0863, loss: 0.1632
2020-11-22 14:20:06,433 - mmdet - INFO - Epoch [4][400/633]	lr: 1.000e-02, eta: 0:02:47, time: 0.748, data_time: 0.012, memory: 11913, loss_rpn_cls: 0.0116, loss_rpn_bbox: 0.0380, loss_cls: 0.0486, acc: 98.0947, loss_bbox: 0.0864, loss: 0.1846
2020-11-22 14:21:21,108 - mmdet - INFO - Epoch [4][500/633]	lr: 1.000e-02, eta: 0:01:36, time: 0.747, data_time: 0.012, memory: 11913, loss_rpn_cls: 0.0354, loss_rpn_bbox: 0.0521, loss_cls: 0.0874, acc: 96.7900, loss_bbox: 0.1072, loss: 0.2820
2020-11-22 14:22:35,792 - mmdet - INFO - Epoch [4][600/633]	lr: 1.000e-02, eta: 0:00:23, time: 0.747, data_time: 0.012, memory: 11913, loss_rpn_cls: 0.0225, loss_rpn_bbox: 0.0507, loss_cls: 0.0971, acc: 96.4727, loss_bbox: 0.1225, loss: 0.2927
2020-11-22 14:23:00,214 - mmdet - INFO - Saving checkpoint at 4 epochs
2020-11-22 14:23:26,299 - mmdet - INFO - Evaluating bbox...
2020-11-22 14:23:28,166 - mmdet - INFO - Epoch [4][633/633]	lr: 1.000e-02, bbox_mAP: 0.7680, bbox_mAP_50: 0.8500, bbox_mAP_75: 0.8300, bbox_mAP_s: 0.4340, bbox_mAP_m: 0.7660, bbox_mAP_l: 0.8190, bbox_mAP_copypaste: 0.768 0.850 0.830 0.434 0.766 0.819
2020-11-22 14:23:58,573 - mmdet - INFO - Epoch(train) [4][75]	loss_rpn_cls: 0.0229, loss_rpn_bbox: 0.0463, loss_cls: 0.0631, acc: 97.7461, loss_bbox: 0.1040, loss: 0.2363
