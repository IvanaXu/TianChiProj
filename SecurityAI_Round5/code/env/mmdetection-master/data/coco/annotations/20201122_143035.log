2020-11-22 14:30:35,987 - mmdet - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.6.4 |Anaconda, Inc.| (default, Jan 16 2018, 18:10:19) [GCC 7.2.0]
CUDA available: True
CUDA_HOME: /usr/local/cuda
NVCC: Cuda compilation tools, release 10.0, V10.0.130
GPU 0: Tesla P100-PCIE-16GB
GCC: gcc (GCC) 5.3.0
PyTorch: 1.3.1+cu100
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - Intel(R) Math Kernel Library Version 2019.0.4 Product Build 20190411 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.20.5 (Git Hash 0125f28c61c1f822fd48570b4c1066f96fcb9b2e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CUDA Runtime 10.0
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.1
  - Build settings: BLAS=MKL, BUILD_NAMEDTENSOR=OFF, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Wno-stringop-overflow, DISABLE_NUMA=1, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=True, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

TorchVision: 0.4.2+cu100
OpenCV: 4.4.0
MMCV: 1.0.5
MMDetection: 2.3.0+788fa8d
MMDetection Compiler: GCC 7.3
MMDetection CUDA Compiler: 10.0
------------------------------------------------------------

2020-11-22 14:30:35,987 - mmdet - INFO - Distributed training: False
2020-11-22 14:30:36,464 - mmdet - INFO - Config:
model = dict(
    type='FasterRCNN',
    pretrained='torchvision://resnet50',
    backbone=dict(
        type='ResNet',
        depth=50,
        num_stages=4,
        out_indices=(0, 1, 2, 3),
        frozen_stages=1,
        norm_cfg=dict(type='BN', requires_grad=True),
        norm_eval=True,
        style='pytorch'),
    neck=dict(
        type='FPN',
        in_channels=[256, 512, 1024, 2048],
        out_channels=256,
        num_outs=5),
    rpn_head=dict(
        type='RPNHead',
        in_channels=256,
        feat_channels=256,
        anchor_generator=dict(
            type='AnchorGenerator',
            scales=[8],
            ratios=[0.5, 1.0, 2.0],
            strides=[4, 8, 16, 32, 64]),
        bbox_coder=dict(
            type='DeltaXYWHBBoxCoder',
            target_means=[0.0, 0.0, 0.0, 0.0],
            target_stds=[1.0, 1.0, 1.0, 1.0]),
        loss_cls=dict(
            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),
        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),
    roi_head=dict(
        type='StandardRoIHead',
        bbox_roi_extractor=dict(
            type='SingleRoIExtractor',
            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),
            out_channels=256,
            featmap_strides=[4, 8, 16, 32]),
        bbox_head=dict(
            type='Shared2FCBBoxHead',
            in_channels=256,
            fc_out_channels=1024,
            roi_feat_size=7,
            num_classes=2,
            bbox_coder=dict(
                type='DeltaXYWHBBoxCoder',
                target_means=[0.0, 0.0, 0.0, 0.0],
                target_stds=[0.1, 0.1, 0.2, 0.2]),
            reg_class_agnostic=False,
            loss_cls=dict(
                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),
            loss_bbox=dict(type='L1Loss', loss_weight=1.0))))
train_cfg = dict(
    rpn=dict(
        assigner=dict(
            type='MaxIoUAssigner',
            pos_iou_thr=0.7,
            neg_iou_thr=0.3,
            min_pos_iou=0.3,
            match_low_quality=True,
            ignore_iof_thr=-1),
        sampler=dict(
            type='RandomSampler',
            num=256,
            pos_fraction=0.5,
            neg_pos_ub=-1,
            add_gt_as_proposals=False),
        allowed_border=-1,
        pos_weight=-1,
        debug=False),
    rpn_proposal=dict(
        nms_across_levels=False,
        nms_pre=2000,
        nms_post=1000,
        max_num=1000,
        nms_thr=0.7,
        min_bbox_size=0),
    rcnn=dict(
        assigner=dict(
            type='MaxIoUAssigner',
            pos_iou_thr=0.5,
            neg_iou_thr=0.5,
            min_pos_iou=0.5,
            match_low_quality=False,
            ignore_iof_thr=-1),
        sampler=dict(
            type='RandomSampler',
            num=512,
            pos_fraction=0.25,
            neg_pos_ub=-1,
            add_gt_as_proposals=True),
        pos_weight=-1,
        debug=False))
test_cfg = dict(
    rpn=dict(
        nms_across_levels=False,
        nms_pre=1000,
        nms_post=1000,
        max_num=1000,
        nms_thr=0.7,
        min_bbox_size=0),
    rcnn=dict(
        score_thr=0.05,
        nms=dict(type='nms', iou_threshold=0.5),
        max_per_img=100))
dataset_type = 'CocoDataset'
data_root = 'data/coco/'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(type='Resize', img_scale=(1550, 1550), keep_ratio=True),
    dict(type='RandomFlip', flip_ratio=0.5),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='Pad', size_divisor=32),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(1550, 1550),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=2,
    workers_per_gpu=2,
    train=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_trai.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(type='Resize', img_scale=(1550, 1550), keep_ratio=True),
            dict(type='RandomFlip', flip_ratio=0.5),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
        ]),
    val=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_test.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1550, 1550),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_vals.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1550, 1550),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
evaluation = dict(interval=1, metric='bbox')
optimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0001)
optimizer_config = dict(grad_clip=None)
lr_config = dict(
    policy='step',
    warmup='linear',
    warmup_iters=500,
    warmup_ratio=0.001,
    step=[8, 11])
total_epochs = 4
checkpoint_config = dict(interval=4)
log_config = dict(interval=100, hooks=[dict(type='TextLoggerHook')])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = '/home/admin/.cache/torch/checkpoints/X.pth'
resume_from = None
workflow = [('train', 2), ('val', 1)]
work_dir = '/home/admin/jupyter/SecurityAI_Round5/data/work'
gpu_ids = range(0, 1)

2020-11-22 14:30:36,976 - mmdet - INFO - load model from: torchvision://resnet50
2020-11-22 14:30:44,924 - mmdet - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: fc.weight, fc.bias

2020-11-22 14:30:55,534 - mmdet - INFO - load checkpoint from /home/admin/.cache/torch/checkpoints/X.pth
2020-11-22 14:31:02,459 - mmdet - INFO - Start running, host: admin@fuxilabor_labor0_S4_Odps_S96_dsw_prepaid_cnsh_838_2020112201080, work_dir: /home/admin/jupyter/SecurityAI_Round5/data/work
2020-11-22 14:31:02,460 - mmdet - INFO - workflow: [('train', 2), ('val', 1)], max: 4 epochs
2020-11-22 14:32:20,237 - mmdet - INFO - Epoch [1][100/622]	lr: 1.988e-03, eta: 0:30:52, time: 0.776, data_time: 0.034, memory: 9527, loss_rpn_cls: 0.0097, loss_rpn_bbox: 0.0407, loss_cls: 0.0535, acc: 97.9229, loss_bbox: 0.1001, loss: 0.2040
2020-11-22 14:33:35,218 - mmdet - INFO - Epoch [1][200/622]	lr: 3.986e-03, eta: 0:29:05, time: 0.750, data_time: 0.012, memory: 9527, loss_rpn_cls: 0.0046, loss_rpn_bbox: 0.0331, loss_cls: 0.0425, acc: 98.3115, loss_bbox: 0.0852, loss: 0.1655
2020-11-22 14:34:50,205 - mmdet - INFO - Epoch [1][300/622]	lr: 5.984e-03, eta: 0:27:39, time: 0.750, data_time: 0.012, memory: 9991, loss_rpn_cls: 0.0047, loss_rpn_bbox: 0.0330, loss_cls: 0.0354, acc: 98.6279, loss_bbox: 0.0815, loss: 0.1545
2020-11-22 14:36:05,538 - mmdet - INFO - Epoch [1][400/622]	lr: 7.982e-03, eta: 0:26:21, time: 0.753, data_time: 0.012, memory: 9991, loss_rpn_cls: 0.0033, loss_rpn_bbox: 0.0349, loss_cls: 0.0345, acc: 98.5791, loss_bbox: 0.0843, loss: 0.1569
2020-11-22 14:37:20,371 - mmdet - INFO - Epoch [1][500/622]	lr: 9.980e-03, eta: 0:25:01, time: 0.748, data_time: 0.012, memory: 11910, loss_rpn_cls: 0.0037, loss_rpn_bbox: 0.0313, loss_cls: 0.0397, acc: 98.3350, loss_bbox: 0.0817, loss: 0.1564
2020-11-22 14:38:34,969 - mmdet - INFO - Epoch [1][600/622]	lr: 1.000e-02, eta: 0:23:43, time: 0.746, data_time: 0.012, memory: 11910, loss_rpn_cls: 0.0034, loss_rpn_bbox: 0.0337, loss_cls: 0.0386, acc: 98.3281, loss_bbox: 0.0836, loss: 0.1593
2020-11-22 14:39:17,177 - mmdet - INFO - Evaluating bbox...
2020-11-22 14:39:19,590 - mmdet - INFO - Epoch [1][622/622]	lr: 1.000e-02, bbox_mAP: 0.7960, bbox_mAP_50: 0.8700, bbox_mAP_75: 0.8580, bbox_mAP_s: 0.5410, bbox_mAP_m: 0.8570, bbox_mAP_l: 0.8810, bbox_mAP_copypaste: 0.796 0.870 0.858 0.541 0.857 0.881
2020-11-22 14:40:36,674 - mmdet - INFO - Epoch [2][100/622]	lr: 1.000e-02, eta: 0:21:34, time: 0.769, data_time: 0.033, memory: 11910, loss_rpn_cls: 0.0043, loss_rpn_bbox: 0.0359, loss_cls: 0.0406, acc: 98.2871, loss_bbox: 0.0908, loss: 0.1716
2020-11-22 14:41:51,470 - mmdet - INFO - Epoch [2][200/622]	lr: 1.000e-02, eta: 0:20:24, time: 0.748, data_time: 0.012, memory: 11910, loss_rpn_cls: 0.0036, loss_rpn_bbox: 0.0348, loss_cls: 0.0363, acc: 98.4736, loss_bbox: 0.0875, loss: 0.1622
2020-11-22 14:43:06,386 - mmdet - INFO - Epoch [2][300/622]	lr: 1.000e-02, eta: 0:19:13, time: 0.749, data_time: 0.012, memory: 11910, loss_rpn_cls: 0.0027, loss_rpn_bbox: 0.0340, loss_cls: 0.0301, acc: 98.7510, loss_bbox: 0.0775, loss: 0.1444
2020-11-22 14:44:21,217 - mmdet - INFO - Epoch [2][400/622]	lr: 1.000e-02, eta: 0:18:01, time: 0.748, data_time: 0.012, memory: 11910, loss_rpn_cls: 0.0034, loss_rpn_bbox: 0.0364, loss_cls: 0.0396, acc: 98.3398, loss_bbox: 0.0904, loss: 0.1699
2020-11-22 14:45:35,875 - mmdet - INFO - Epoch [2][500/622]	lr: 1.000e-02, eta: 0:16:48, time: 0.747, data_time: 0.012, memory: 11910, loss_rpn_cls: 0.0040, loss_rpn_bbox: 0.0361, loss_cls: 0.0395, acc: 98.3936, loss_bbox: 0.0863, loss: 0.1659
2020-11-22 14:46:50,582 - mmdet - INFO - Epoch [2][600/622]	lr: 1.000e-02, eta: 0:15:35, time: 0.747, data_time: 0.012, memory: 11910, loss_rpn_cls: 0.0039, loss_rpn_bbox: 0.0335, loss_cls: 0.0414, acc: 98.2705, loss_bbox: 0.0887, loss: 0.1674
2020-11-22 14:47:32,772 - mmdet - INFO - Evaluating bbox...
2020-11-22 14:47:35,328 - mmdet - INFO - Epoch [2][622/622]	lr: 1.000e-02, bbox_mAP: 0.7990, bbox_mAP_50: 0.8740, bbox_mAP_75: 0.8600, bbox_mAP_s: 0.5420, bbox_mAP_m: 0.8540, bbox_mAP_l: 0.8790, bbox_mAP_copypaste: 0.799 0.874 0.860 0.542 0.854 0.879
2020-11-22 14:48:07,354 - mmdet - INFO - Epoch(train) [2][80]	loss_rpn_cls: 0.0035, loss_rpn_bbox: 0.0341, loss_cls: 0.0336, acc: 98.6548, loss_bbox: 0.0831, loss: 0.1544
2020-11-22 14:49:24,500 - mmdet - INFO - Epoch [3][100/622]	lr: 1.000e-02, eta: 0:13:54, time: 0.769, data_time: 0.033, memory: 11910, loss_rpn_cls: 0.0037, loss_rpn_bbox: 0.0329, loss_cls: 0.0390, acc: 98.4072, loss_bbox: 0.0829, loss: 0.1586
2020-11-22 14:50:39,275 - mmdet - INFO - Epoch [3][200/622]	lr: 1.000e-02, eta: 0:12:42, time: 0.748, data_time: 0.012, memory: 11910, loss_rpn_cls: 0.0029, loss_rpn_bbox: 0.0327, loss_cls: 0.0353, acc: 98.5605, loss_bbox: 0.0844, loss: 0.1553
2020-11-22 14:51:54,090 - mmdet - INFO - Epoch [3][300/622]	lr: 1.000e-02, eta: 0:11:30, time: 0.748, data_time: 0.012, memory: 11910, loss_rpn_cls: 0.0025, loss_rpn_bbox: 0.0363, loss_cls: 0.0362, acc: 98.5049, loss_bbox: 0.0869, loss: 0.1619
2020-11-22 14:53:09,424 - mmdet - INFO - Epoch [3][400/622]	lr: 1.000e-02, eta: 0:10:18, time: 0.753, data_time: 0.012, memory: 11910, loss_rpn_cls: 0.0049, loss_rpn_bbox: 0.0362, loss_cls: 0.0418, acc: 98.1416, loss_bbox: 0.0872, loss: 0.1701
2020-11-22 14:54:24,374 - mmdet - INFO - Epoch [3][500/622]	lr: 1.000e-02, eta: 0:09:06, time: 0.749, data_time: 0.012, memory: 11910, loss_rpn_cls: 0.0034, loss_rpn_bbox: 0.0354, loss_cls: 0.0337, acc: 98.6221, loss_bbox: 0.0811, loss: 0.1536
2020-11-22 14:55:39,457 - mmdet - INFO - Epoch [3][600/622]	lr: 1.000e-02, eta: 0:07:53, time: 0.751, data_time: 0.012, memory: 11910, loss_rpn_cls: 0.0034, loss_rpn_bbox: 0.0363, loss_cls: 0.0361, acc: 98.4590, loss_bbox: 0.0886, loss: 0.1644
2020-11-22 14:56:21,606 - mmdet - INFO - Evaluating bbox...
2020-11-22 14:56:23,957 - mmdet - INFO - Epoch [3][622/622]	lr: 1.000e-02, bbox_mAP: 0.8020, bbox_mAP_50: 0.8700, bbox_mAP_75: 0.8600, bbox_mAP_s: 0.5470, bbox_mAP_m: 0.8690, bbox_mAP_l: 0.8810, bbox_mAP_copypaste: 0.802 0.870 0.860 0.547 0.869 0.881
2020-11-22 14:57:41,310 - mmdet - INFO - Epoch [4][100/622]	lr: 1.000e-02, eta: 0:06:20, time: 0.772, data_time: 0.033, memory: 11910, loss_rpn_cls: 0.0027, loss_rpn_bbox: 0.0328, loss_cls: 0.0353, acc: 98.5674, loss_bbox: 0.0863, loss: 0.1571
2020-11-22 14:58:56,197 - mmdet - INFO - Epoch [4][200/622]	lr: 1.000e-02, eta: 0:05:07, time: 0.749, data_time: 0.012, memory: 11910, loss_rpn_cls: 0.0029, loss_rpn_bbox: 0.0358, loss_cls: 0.0372, acc: 98.4043, loss_bbox: 0.0860, loss: 0.1620
2020-11-22 15:00:11,109 - mmdet - INFO - Epoch [4][300/622]	lr: 1.000e-02, eta: 0:03:55, time: 0.749, data_time: 0.012, memory: 11910, loss_rpn_cls: 0.0030, loss_rpn_bbox: 0.0376, loss_cls: 0.0364, acc: 98.4561, loss_bbox: 0.0844, loss: 0.1614
2020-11-22 15:01:26,123 - mmdet - INFO - Epoch [4][400/622]	lr: 1.000e-02, eta: 0:02:42, time: 0.750, data_time: 0.012, memory: 11910, loss_rpn_cls: 0.0036, loss_rpn_bbox: 0.0346, loss_cls: 0.0390, acc: 98.3193, loss_bbox: 0.0840, loss: 0.1612
2020-11-22 15:02:40,971 - mmdet - INFO - Epoch [4][500/622]	lr: 1.000e-02, eta: 0:01:29, time: 0.748, data_time: 0.012, memory: 11910, loss_rpn_cls: 0.0030, loss_rpn_bbox: 0.0341, loss_cls: 0.0367, acc: 98.4756, loss_bbox: 0.0834, loss: 0.1572
2020-11-22 15:03:55,816 - mmdet - INFO - Epoch [4][600/622]	lr: 1.000e-02, eta: 0:00:16, time: 0.748, data_time: 0.012, memory: 11910, loss_rpn_cls: 0.0031, loss_rpn_bbox: 0.0327, loss_cls: 0.0341, acc: 98.6338, loss_bbox: 0.0837, loss: 0.1537
2020-11-22 15:04:12,101 - mmdet - INFO - Saving checkpoint at 4 epochs
2020-11-22 15:04:39,676 - mmdet - INFO - Evaluating bbox...
2020-11-22 15:04:42,119 - mmdet - INFO - Epoch [4][622/622]	lr: 1.000e-02, bbox_mAP: 0.8000, bbox_mAP_50: 0.8650, bbox_mAP_75: 0.8550, bbox_mAP_s: 0.5480, bbox_mAP_m: 0.8790, bbox_mAP_l: 0.8830, bbox_mAP_copypaste: 0.800 0.865 0.855 0.548 0.879 0.883
2020-11-22 15:05:14,218 - mmdet - INFO - Epoch(train) [4][80]	loss_rpn_cls: 0.0034, loss_rpn_bbox: 0.0321, loss_cls: 0.0329, acc: 98.6731, loss_bbox: 0.0771, loss: 0.1456
