2020-11-18 01:30:45,318 - mmdet - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.6.4 |Anaconda, Inc.| (default, Jan 16 2018, 18:10:19) [GCC 7.2.0]
CUDA available: True
CUDA_HOME: /usr/local/cuda
NVCC: Cuda compilation tools, release 10.0, V10.0.130
GPU 0: Tesla P100-PCIE-16GB
GCC: gcc (GCC) 5.3.0
PyTorch: 1.3.1+cu100
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - Intel(R) Math Kernel Library Version 2019.0.4 Product Build 20190411 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.20.5 (Git Hash 0125f28c61c1f822fd48570b4c1066f96fcb9b2e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CUDA Runtime 10.0
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.1
  - Build settings: BLAS=MKL, BUILD_NAMEDTENSOR=OFF, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Wno-stringop-overflow, DISABLE_NUMA=1, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=True, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

TorchVision: 0.4.2+cu100
OpenCV: 4.4.0
MMCV: 1.0.5
MMDetection: 2.3.0+788fa8d
MMDetection Compiler: GCC 7.3
MMDetection CUDA Compiler: 10.0
------------------------------------------------------------

2020-11-18 01:30:45,318 - mmdet - INFO - Distributed training: False
2020-11-18 01:30:45,715 - mmdet - INFO - Config:
model = dict(
    type='FasterRCNN',
    pretrained='torchvision://resnet50',
    backbone=dict(
        type='ResNet',
        depth=50,
        num_stages=4,
        out_indices=(0, 1, 2, 3),
        frozen_stages=1,
        norm_cfg=dict(type='BN', requires_grad=True),
        norm_eval=True,
        style='pytorch'),
    neck=dict(
        type='FPN',
        in_channels=[256, 512, 1024, 2048],
        out_channels=256,
        num_outs=5),
    rpn_head=dict(
        type='RPNHead',
        in_channels=256,
        feat_channels=256,
        anchor_generator=dict(
            type='AnchorGenerator',
            scales=[8],
            ratios=[0.5, 1.0, 2.0],
            strides=[4, 8, 16, 32, 64]),
        bbox_coder=dict(
            type='DeltaXYWHBBoxCoder',
            target_means=[0.0, 0.0, 0.0, 0.0],
            target_stds=[1.0, 1.0, 1.0, 1.0]),
        loss_cls=dict(
            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),
        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),
    roi_head=dict(
        type='StandardRoIHead',
        bbox_roi_extractor=dict(
            type='SingleRoIExtractor',
            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),
            out_channels=256,
            featmap_strides=[4, 8, 16, 32]),
        bbox_head=dict(
            type='Shared2FCBBoxHead',
            in_channels=256,
            fc_out_channels=1024,
            roi_feat_size=7,
            num_classes=2,
            bbox_coder=dict(
                type='DeltaXYWHBBoxCoder',
                target_means=[0.0, 0.0, 0.0, 0.0],
                target_stds=[0.1, 0.1, 0.2, 0.2]),
            reg_class_agnostic=False,
            loss_cls=dict(
                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),
            loss_bbox=dict(type='L1Loss', loss_weight=1.0))))
train_cfg = dict(
    rpn=dict(
        assigner=dict(
            type='MaxIoUAssigner',
            pos_iou_thr=0.7,
            neg_iou_thr=0.3,
            min_pos_iou=0.3,
            match_low_quality=True,
            ignore_iof_thr=-1),
        sampler=dict(
            type='RandomSampler',
            num=256,
            pos_fraction=0.5,
            neg_pos_ub=-1,
            add_gt_as_proposals=False),
        allowed_border=-1,
        pos_weight=-1,
        debug=False),
    rpn_proposal=dict(
        nms_across_levels=False,
        nms_pre=2000,
        nms_post=1000,
        max_num=1000,
        nms_thr=0.7,
        min_bbox_size=0),
    rcnn=dict(
        assigner=dict(
            type='MaxIoUAssigner',
            pos_iou_thr=0.5,
            neg_iou_thr=0.5,
            min_pos_iou=0.5,
            match_low_quality=False,
            ignore_iof_thr=-1),
        sampler=dict(
            type='RandomSampler',
            num=512,
            pos_fraction=0.25,
            neg_pos_ub=-1,
            add_gt_as_proposals=True),
        pos_weight=-1,
        debug=False))
test_cfg = dict(
    rpn=dict(
        nms_across_levels=False,
        nms_pre=1000,
        nms_post=1000,
        max_num=1000,
        nms_thr=0.7,
        min_bbox_size=0),
    rcnn=dict(
        score_thr=0.05,
        nms=dict(type='nms', iou_threshold=0.5),
        max_per_img=100))
dataset_type = 'CocoDataset'
data_root = 'data/coco/'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(type='Resize', img_scale=(1550, 1550), keep_ratio=True),
    dict(type='RandomFlip', flip_ratio=0.5),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='Pad', size_divisor=32),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(1550, 1550),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=2,
    workers_per_gpu=2,
    train=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_trai.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(type='Resize', img_scale=(1550, 1550), keep_ratio=True),
            dict(type='RandomFlip', flip_ratio=0.5),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
        ]),
    val=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_test.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1550, 1550),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_vals.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1550, 1550),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
evaluation = dict(interval=1, metric='bbox')
optimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0001)
optimizer_config = dict(grad_clip=None)
lr_config = dict(
    policy='step',
    warmup='linear',
    warmup_iters=500,
    warmup_ratio=0.001,
    step=[8, 11])
total_epochs = 4
checkpoint_config = dict(interval=4)
log_config = dict(interval=100, hooks=[dict(type='TextLoggerHook')])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = '/home/admin/.cache/torch/checkpoints/X.pth'
resume_from = None
workflow = [('train', 2), ('val', 1)]
work_dir = '/home/admin/jupyter/SecurityAI_Round5/data/work'
gpu_ids = range(0, 1)

2020-11-18 01:30:46,220 - mmdet - INFO - load model from: torchvision://resnet50
2020-11-18 01:30:54,665 - mmdet - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: fc.weight, fc.bias

2020-11-18 01:31:05,029 - mmdet - INFO - load checkpoint from /home/admin/.cache/torch/checkpoints/X.pth
2020-11-18 01:31:12,233 - mmdet - INFO - Start running, host: admin@fuxilabor_labor0_S4_Odps_S96_dsw_prepaid_cnsh_838_2020111715115, work_dir: /home/admin/jupyter/SecurityAI_Round5/data/work
2020-11-18 01:31:12,233 - mmdet - INFO - workflow: [('train', 2), ('val', 1)], max: 4 epochs
2020-11-18 01:32:29,473 - mmdet - INFO - Epoch [1][100/625]	lr: 1.988e-03, eta: 0:30:49, time: 0.770, data_time: 0.035, memory: 9960, loss_rpn_cls: 0.0125, loss_rpn_bbox: 0.0663, loss_cls: 0.1005, acc: 95.9521, loss_bbox: 0.1844, loss: 0.3638
2020-11-18 01:33:43,785 - mmdet - INFO - Epoch [1][200/625]	lr: 3.986e-03, eta: 0:29:00, time: 0.743, data_time: 0.012, memory: 9960, loss_rpn_cls: 0.0151, loss_rpn_bbox: 0.0587, loss_cls: 0.0923, acc: 96.4004, loss_bbox: 0.1680, loss: 0.3341
2020-11-18 01:34:58,055 - mmdet - INFO - Epoch [1][300/625]	lr: 5.984e-03, eta: 0:27:34, time: 0.743, data_time: 0.012, memory: 9960, loss_rpn_cls: 0.0130, loss_rpn_bbox: 0.0559, loss_cls: 0.0839, acc: 96.6279, loss_bbox: 0.1560, loss: 0.3088
2020-11-18 01:36:12,573 - mmdet - INFO - Epoch [1][400/625]	lr: 7.982e-03, eta: 0:26:15, time: 0.745, data_time: 0.012, memory: 11905, loss_rpn_cls: 0.0201, loss_rpn_bbox: 0.0695, loss_cls: 0.1005, acc: 95.9248, loss_bbox: 0.1802, loss: 0.3704
2020-11-18 01:37:26,671 - mmdet - INFO - Epoch [1][500/625]	lr: 9.980e-03, eta: 0:24:56, time: 0.741, data_time: 0.012, memory: 11905, loss_rpn_cls: 0.0159, loss_rpn_bbox: 0.0687, loss_cls: 0.1081, acc: 95.6338, loss_bbox: 0.1868, loss: 0.3794
2020-11-18 01:38:40,980 - mmdet - INFO - Epoch [1][600/625]	lr: 1.000e-02, eta: 0:23:40, time: 0.743, data_time: 0.012, memory: 11905, loss_rpn_cls: 0.0134, loss_rpn_bbox: 0.0756, loss_cls: 0.1192, acc: 95.0908, loss_bbox: 0.1998, loss: 0.4080
2020-11-18 01:39:24,897 - mmdet - INFO - Evaluating bbox...
2020-11-18 01:39:29,607 - mmdet - INFO - Epoch [1][625/625]	lr: 1.000e-02, bbox_mAP: 0.6830, bbox_mAP_50: 0.8040, bbox_mAP_75: 0.7220, bbox_mAP_s: 0.2410, bbox_mAP_m: 0.5820, bbox_mAP_l: 0.7790, bbox_mAP_copypaste: 0.683 0.804 0.722 0.241 0.582 0.779
2020-11-18 01:40:46,193 - mmdet - INFO - Epoch [2][100/625]	lr: 1.000e-02, eta: 0:21:25, time: 0.764, data_time: 0.033, memory: 11905, loss_rpn_cls: 0.0175, loss_rpn_bbox: 0.0713, loss_cls: 0.1027, acc: 95.9902, loss_bbox: 0.1790, loss: 0.3705
2020-11-18 01:42:00,501 - mmdet - INFO - Epoch [2][200/625]	lr: 1.000e-02, eta: 0:20:16, time: 0.743, data_time: 0.012, memory: 11905, loss_rpn_cls: 0.0201, loss_rpn_bbox: 0.0723, loss_cls: 0.1101, acc: 95.5449, loss_bbox: 0.1825, loss: 0.3851
2020-11-18 01:43:15,259 - mmdet - INFO - Epoch [2][300/625]	lr: 1.000e-02, eta: 0:19:07, time: 0.748, data_time: 0.012, memory: 11905, loss_rpn_cls: 0.0170, loss_rpn_bbox: 0.0730, loss_cls: 0.1097, acc: 95.6162, loss_bbox: 0.1940, loss: 0.3938
2020-11-18 01:44:29,523 - mmdet - INFO - Epoch [2][400/625]	lr: 1.000e-02, eta: 0:17:56, time: 0.743, data_time: 0.012, memory: 11905, loss_rpn_cls: 0.0166, loss_rpn_bbox: 0.0676, loss_cls: 0.1002, acc: 96.0156, loss_bbox: 0.1861, loss: 0.3706
2020-11-18 01:45:43,711 - mmdet - INFO - Epoch [2][500/625]	lr: 1.000e-02, eta: 0:16:45, time: 0.742, data_time: 0.012, memory: 11905, loss_rpn_cls: 0.0176, loss_rpn_bbox: 0.0707, loss_cls: 0.1070, acc: 95.7188, loss_bbox: 0.1888, loss: 0.3841
2020-11-18 01:46:57,801 - mmdet - INFO - Epoch [2][600/625]	lr: 1.000e-02, eta: 0:15:33, time: 0.741, data_time: 0.012, memory: 11905, loss_rpn_cls: 0.0115, loss_rpn_bbox: 0.0659, loss_cls: 0.0998, acc: 95.9551, loss_bbox: 0.1844, loss: 0.3615
2020-11-18 01:47:41,780 - mmdet - INFO - Evaluating bbox...
2020-11-18 01:47:46,006 - mmdet - INFO - Epoch [2][625/625]	lr: 1.000e-02, bbox_mAP: 0.6930, bbox_mAP_50: 0.8160, bbox_mAP_75: 0.7320, bbox_mAP_s: 0.2540, bbox_mAP_m: 0.5800, bbox_mAP_l: 0.7890, bbox_mAP_copypaste: 0.693 0.816 0.732 0.254 0.580 0.789
2020-11-18 01:48:17,504 - mmdet - INFO - Epoch(train) [2][79]	loss_rpn_cls: 0.0217, loss_rpn_bbox: 0.0752, loss_cls: 0.1073, acc: 95.7612, loss_bbox: 0.1873, loss: 0.3915
2020-11-18 01:49:34,127 - mmdet - INFO - Epoch [3][100/625]	lr: 1.000e-02, eta: 0:13:48, time: 0.764, data_time: 0.034, memory: 11905, loss_rpn_cls: 0.0123, loss_rpn_bbox: 0.0737, loss_cls: 0.1028, acc: 95.8438, loss_bbox: 0.1936, loss: 0.3824
2020-11-18 01:50:48,322 - mmdet - INFO - Epoch [3][200/625]	lr: 1.000e-02, eta: 0:12:38, time: 0.742, data_time: 0.012, memory: 11905, loss_rpn_cls: 0.0202, loss_rpn_bbox: 0.0689, loss_cls: 0.1025, acc: 95.8838, loss_bbox: 0.1832, loss: 0.3749
2020-11-18 01:52:02,525 - mmdet - INFO - Epoch [3][300/625]	lr: 1.000e-02, eta: 0:11:27, time: 0.742, data_time: 0.012, memory: 11905, loss_rpn_cls: 0.0103, loss_rpn_bbox: 0.0664, loss_cls: 0.1041, acc: 95.7764, loss_bbox: 0.1886, loss: 0.3694
2020-11-18 01:53:16,928 - mmdet - INFO - Epoch [3][400/625]	lr: 1.000e-02, eta: 0:10:16, time: 0.744, data_time: 0.012, memory: 11905, loss_rpn_cls: 0.0170, loss_rpn_bbox: 0.0691, loss_cls: 0.1091, acc: 95.6562, loss_bbox: 0.1928, loss: 0.3879
2020-11-18 01:54:31,364 - mmdet - INFO - Epoch [3][500/625]	lr: 1.000e-02, eta: 0:09:04, time: 0.744, data_time: 0.012, memory: 11905, loss_rpn_cls: 0.0143, loss_rpn_bbox: 0.0685, loss_cls: 0.0958, acc: 96.2070, loss_bbox: 0.1765, loss: 0.3551
2020-11-18 01:55:45,663 - mmdet - INFO - Epoch [3][600/625]	lr: 1.000e-02, eta: 0:07:52, time: 0.743, data_time: 0.012, memory: 11905, loss_rpn_cls: 0.0180, loss_rpn_bbox: 0.0720, loss_cls: 0.1111, acc: 95.4883, loss_bbox: 0.1870, loss: 0.3880
2020-11-18 01:56:29,695 - mmdet - INFO - Evaluating bbox...
2020-11-18 01:56:33,381 - mmdet - INFO - Epoch [3][625/625]	lr: 1.000e-02, bbox_mAP: 0.6900, bbox_mAP_50: 0.8130, bbox_mAP_75: 0.7300, bbox_mAP_s: 0.2440, bbox_mAP_m: 0.5780, bbox_mAP_l: 0.7860, bbox_mAP_copypaste: 0.690 0.813 0.730 0.244 0.578 0.786
2020-11-18 01:57:50,140 - mmdet - INFO - Epoch [4][100/625]	lr: 1.000e-02, eta: 0:06:17, time: 0.766, data_time: 0.034, memory: 11905, loss_rpn_cls: 0.0106, loss_rpn_bbox: 0.0706, loss_cls: 0.1021, acc: 95.8555, loss_bbox: 0.1965, loss: 0.3798
2020-11-18 01:59:04,545 - mmdet - INFO - Epoch [4][200/625]	lr: 1.000e-02, eta: 0:05:06, time: 0.744, data_time: 0.012, memory: 11905, loss_rpn_cls: 0.0090, loss_rpn_bbox: 0.0647, loss_cls: 0.0967, acc: 96.0059, loss_bbox: 0.1863, loss: 0.3567
2020-11-18 02:00:18,756 - mmdet - INFO - Epoch [4][300/625]	lr: 1.000e-02, eta: 0:03:54, time: 0.742, data_time: 0.012, memory: 11905, loss_rpn_cls: 0.0162, loss_rpn_bbox: 0.0645, loss_cls: 0.0910, acc: 96.4170, loss_bbox: 0.1631, loss: 0.3348
2020-11-18 02:01:32,836 - mmdet - INFO - Epoch [4][400/625]	lr: 1.000e-02, eta: 0:02:42, time: 0.741, data_time: 0.012, memory: 11905, loss_rpn_cls: 0.0167, loss_rpn_bbox: 0.0715, loss_cls: 0.1119, acc: 95.6494, loss_bbox: 0.1982, loss: 0.3983
2020-11-18 02:02:46,835 - mmdet - INFO - Epoch [4][500/625]	lr: 1.000e-02, eta: 0:01:30, time: 0.740, data_time: 0.012, memory: 11905, loss_rpn_cls: 0.0204, loss_rpn_bbox: 0.0731, loss_cls: 0.1066, acc: 95.8242, loss_bbox: 0.1905, loss: 0.3906
2020-11-18 02:04:00,896 - mmdet - INFO - Epoch [4][600/625]	lr: 1.000e-02, eta: 0:00:18, time: 0.741, data_time: 0.012, memory: 11905, loss_rpn_cls: 0.0170, loss_rpn_bbox: 0.0713, loss_cls: 0.0953, acc: 96.2666, loss_bbox: 0.1725, loss: 0.3561
2020-11-18 02:04:19,430 - mmdet - INFO - Saving checkpoint at 4 epochs
2020-11-18 02:04:46,716 - mmdet - INFO - Evaluating bbox...
2020-11-18 02:04:50,599 - mmdet - INFO - Epoch [4][625/625]	lr: 1.000e-02, bbox_mAP: 0.6840, bbox_mAP_50: 0.8000, bbox_mAP_75: 0.7160, bbox_mAP_s: 0.2180, bbox_mAP_m: 0.5820, bbox_mAP_l: 0.7880, bbox_mAP_copypaste: 0.684 0.800 0.716 0.218 0.582 0.788
2020-11-18 02:05:22,080 - mmdet - INFO - Epoch(train) [4][79]	loss_rpn_cls: 0.0226, loss_rpn_bbox: 0.0745, loss_cls: 0.1195, acc: 95.4349, loss_bbox: 0.1912, loss: 0.4078
