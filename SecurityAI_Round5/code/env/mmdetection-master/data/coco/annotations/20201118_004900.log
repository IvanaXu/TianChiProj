2020-11-18 00:49:00,921 - mmdet - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.6.4 |Anaconda, Inc.| (default, Jan 16 2018, 18:10:19) [GCC 7.2.0]
CUDA available: True
CUDA_HOME: /usr/local/cuda
NVCC: Cuda compilation tools, release 10.0, V10.0.130
GPU 0: Tesla P100-PCIE-16GB
GCC: gcc (GCC) 5.3.0
PyTorch: 1.3.1+cu100
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - Intel(R) Math Kernel Library Version 2019.0.4 Product Build 20190411 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.20.5 (Git Hash 0125f28c61c1f822fd48570b4c1066f96fcb9b2e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CUDA Runtime 10.0
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.1
  - Build settings: BLAS=MKL, BUILD_NAMEDTENSOR=OFF, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Wno-stringop-overflow, DISABLE_NUMA=1, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=True, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

TorchVision: 0.4.2+cu100
OpenCV: 4.4.0
MMCV: 1.0.5
MMDetection: 2.3.0+788fa8d
MMDetection Compiler: GCC 7.3
MMDetection CUDA Compiler: 10.0
------------------------------------------------------------

2020-11-18 00:49:00,922 - mmdet - INFO - Distributed training: False
2020-11-18 00:49:01,315 - mmdet - INFO - Config:
model = dict(
    type='FasterRCNN',
    pretrained='torchvision://resnet50',
    backbone=dict(
        type='ResNet',
        depth=50,
        num_stages=4,
        out_indices=(0, 1, 2, 3),
        frozen_stages=1,
        norm_cfg=dict(type='BN', requires_grad=True),
        norm_eval=True,
        style='pytorch'),
    neck=dict(
        type='FPN',
        in_channels=[256, 512, 1024, 2048],
        out_channels=256,
        num_outs=5),
    rpn_head=dict(
        type='RPNHead',
        in_channels=256,
        feat_channels=256,
        anchor_generator=dict(
            type='AnchorGenerator',
            scales=[8],
            ratios=[0.5, 1.0, 2.0],
            strides=[4, 8, 16, 32, 64]),
        bbox_coder=dict(
            type='DeltaXYWHBBoxCoder',
            target_means=[0.0, 0.0, 0.0, 0.0],
            target_stds=[1.0, 1.0, 1.0, 1.0]),
        loss_cls=dict(
            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),
        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),
    roi_head=dict(
        type='StandardRoIHead',
        bbox_roi_extractor=dict(
            type='SingleRoIExtractor',
            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),
            out_channels=256,
            featmap_strides=[4, 8, 16, 32]),
        bbox_head=dict(
            type='Shared2FCBBoxHead',
            in_channels=256,
            fc_out_channels=1024,
            roi_feat_size=7,
            num_classes=2,
            bbox_coder=dict(
                type='DeltaXYWHBBoxCoder',
                target_means=[0.0, 0.0, 0.0, 0.0],
                target_stds=[0.1, 0.1, 0.2, 0.2]),
            reg_class_agnostic=False,
            loss_cls=dict(
                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),
            loss_bbox=dict(type='L1Loss', loss_weight=1.0))))
train_cfg = dict(
    rpn=dict(
        assigner=dict(
            type='MaxIoUAssigner',
            pos_iou_thr=0.7,
            neg_iou_thr=0.3,
            min_pos_iou=0.3,
            match_low_quality=True,
            ignore_iof_thr=-1),
        sampler=dict(
            type='RandomSampler',
            num=256,
            pos_fraction=0.5,
            neg_pos_ub=-1,
            add_gt_as_proposals=False),
        allowed_border=-1,
        pos_weight=-1,
        debug=False),
    rpn_proposal=dict(
        nms_across_levels=False,
        nms_pre=2000,
        nms_post=1000,
        max_num=1000,
        nms_thr=0.7,
        min_bbox_size=0),
    rcnn=dict(
        assigner=dict(
            type='MaxIoUAssigner',
            pos_iou_thr=0.5,
            neg_iou_thr=0.5,
            min_pos_iou=0.5,
            match_low_quality=False,
            ignore_iof_thr=-1),
        sampler=dict(
            type='RandomSampler',
            num=512,
            pos_fraction=0.25,
            neg_pos_ub=-1,
            add_gt_as_proposals=True),
        pos_weight=-1,
        debug=False))
test_cfg = dict(
    rpn=dict(
        nms_across_levels=False,
        nms_pre=1000,
        nms_post=1000,
        max_num=1000,
        nms_thr=0.7,
        min_bbox_size=0),
    rcnn=dict(
        score_thr=0.05,
        nms=dict(type='nms', iou_threshold=0.5),
        max_per_img=100))
dataset_type = 'CocoDataset'
data_root = 'data/coco/'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(type='Resize', img_scale=(1550, 1550), keep_ratio=True),
    dict(type='RandomFlip', flip_ratio=0.5),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='Pad', size_divisor=32),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(1550, 1550),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=2,
    workers_per_gpu=2,
    train=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_trai.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(type='Resize', img_scale=(1550, 1550), keep_ratio=True),
            dict(type='RandomFlip', flip_ratio=0.5),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
        ]),
    val=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_test.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1550, 1550),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_vals.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1550, 1550),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
evaluation = dict(interval=1, metric='bbox')
optimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0001)
optimizer_config = dict(grad_clip=None)
lr_config = dict(
    policy='step',
    warmup='linear',
    warmup_iters=500,
    warmup_ratio=0.001,
    step=[8, 11])
total_epochs = 4
checkpoint_config = dict(interval=4)
log_config = dict(interval=100, hooks=[dict(type='TextLoggerHook')])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = '/home/admin/.cache/torch/checkpoints/X.pth'
resume_from = None
workflow = [('train', 2), ('val', 1)]
work_dir = '/home/admin/jupyter/SecurityAI_Round5/data/work'
gpu_ids = range(0, 1)

2020-11-18 00:49:01,826 - mmdet - INFO - load model from: torchvision://resnet50
2020-11-18 00:49:10,316 - mmdet - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: fc.weight, fc.bias

2020-11-18 00:49:21,075 - mmdet - INFO - load checkpoint from /home/admin/.cache/torch/checkpoints/X.pth
2020-11-18 00:49:28,123 - mmdet - INFO - Start running, host: admin@fuxilabor_labor0_S4_Odps_S96_dsw_prepaid_cnsh_838_2020111715115, work_dir: /home/admin/jupyter/SecurityAI_Round5/data/work
2020-11-18 00:49:28,123 - mmdet - INFO - workflow: [('train', 2), ('val', 1)], max: 4 epochs
2020-11-18 00:50:45,153 - mmdet - INFO - Epoch [1][100/633]	lr: 1.988e-03, eta: 0:31:08, time: 0.768, data_time: 0.034, memory: 9229, loss_rpn_cls: 0.0171, loss_rpn_bbox: 0.0683, loss_cls: 0.1016, acc: 95.9268, loss_bbox: 0.1802, loss: 0.3673
2020-11-18 00:52:00,092 - mmdet - INFO - Epoch [1][200/633]	lr: 3.986e-03, eta: 0:29:29, time: 0.749, data_time: 0.012, memory: 10077, loss_rpn_cls: 0.0187, loss_rpn_bbox: 0.0697, loss_cls: 0.1094, acc: 95.6611, loss_bbox: 0.1907, loss: 0.3885
2020-11-18 00:53:14,572 - mmdet - INFO - Epoch [1][300/633]	lr: 5.984e-03, eta: 0:28:03, time: 0.745, data_time: 0.012, memory: 10077, loss_rpn_cls: 0.0157, loss_rpn_bbox: 0.0633, loss_cls: 0.1064, acc: 95.7373, loss_bbox: 0.1858, loss: 0.3712
2020-11-18 00:54:28,759 - mmdet - INFO - Epoch [1][400/633]	lr: 7.982e-03, eta: 0:26:41, time: 0.742, data_time: 0.012, memory: 10077, loss_rpn_cls: 0.0109, loss_rpn_bbox: 0.0623, loss_cls: 0.0999, acc: 96.1621, loss_bbox: 0.1850, loss: 0.3582
2020-11-18 00:55:43,082 - mmdet - INFO - Epoch [1][500/633]	lr: 9.980e-03, eta: 0:25:23, time: 0.743, data_time: 0.012, memory: 11886, loss_rpn_cls: 0.0191, loss_rpn_bbox: 0.0632, loss_cls: 0.0978, acc: 96.1367, loss_bbox: 0.1745, loss: 0.3546
2020-11-18 00:56:57,518 - mmdet - INFO - Epoch [1][600/633]	lr: 1.000e-02, eta: 0:24:06, time: 0.744, data_time: 0.013, memory: 11886, loss_rpn_cls: 0.0162, loss_rpn_bbox: 0.0752, loss_cls: 0.1135, acc: 95.3750, loss_bbox: 0.2004, loss: 0.4054
2020-11-18 00:57:43,682 - mmdet - INFO - Evaluating bbox...
2020-11-18 00:57:46,408 - mmdet - INFO - Epoch [1][633/633]	lr: 1.000e-02, bbox_mAP: 0.7080, bbox_mAP_50: 0.8270, bbox_mAP_75: 0.7440, bbox_mAP_s: 0.2520, bbox_mAP_m: 0.6090, bbox_mAP_l: 0.8170, bbox_mAP_copypaste: 0.708 0.827 0.744 0.252 0.609 0.817
2020-11-18 00:59:03,170 - mmdet - INFO - Epoch [2][100/633]	lr: 1.000e-02, eta: 0:21:30, time: 0.766, data_time: 0.034, memory: 11886, loss_rpn_cls: 0.0146, loss_rpn_bbox: 0.0704, loss_cls: 0.1025, acc: 95.8301, loss_bbox: 0.1897, loss: 0.3772
2020-11-18 01:00:17,586 - mmdet - INFO - Epoch [2][200/633]	lr: 1.000e-02, eta: 0:20:24, time: 0.744, data_time: 0.012, memory: 11886, loss_rpn_cls: 0.0178, loss_rpn_bbox: 0.0734, loss_cls: 0.1177, acc: 95.4062, loss_bbox: 0.1976, loss: 0.4065
2020-11-18 01:01:31,906 - mmdet - INFO - Epoch [2][300/633]	lr: 1.000e-02, eta: 0:19:15, time: 0.743, data_time: 0.012, memory: 11886, loss_rpn_cls: 0.0156, loss_rpn_bbox: 0.0734, loss_cls: 0.1151, acc: 95.4570, loss_bbox: 0.2087, loss: 0.4128
2020-11-18 01:02:46,229 - mmdet - INFO - Epoch [2][400/633]	lr: 1.000e-02, eta: 0:18:06, time: 0.743, data_time: 0.012, memory: 11886, loss_rpn_cls: 0.0165, loss_rpn_bbox: 0.0709, loss_cls: 0.1058, acc: 95.8281, loss_bbox: 0.1901, loss: 0.3833
2020-11-18 01:04:00,646 - mmdet - INFO - Epoch [2][500/633]	lr: 1.000e-02, eta: 0:16:56, time: 0.744, data_time: 0.012, memory: 11886, loss_rpn_cls: 0.0172, loss_rpn_bbox: 0.0739, loss_cls: 0.1071, acc: 95.6504, loss_bbox: 0.1876, loss: 0.3858
2020-11-18 01:05:14,963 - mmdet - INFO - Epoch [2][600/633]	lr: 1.000e-02, eta: 0:15:45, time: 0.743, data_time: 0.012, memory: 11886, loss_rpn_cls: 0.0192, loss_rpn_bbox: 0.0715, loss_cls: 0.1106, acc: 95.5371, loss_bbox: 0.1942, loss: 0.3956
2020-11-18 01:06:01,179 - mmdet - INFO - Evaluating bbox...
2020-11-18 01:06:04,988 - mmdet - INFO - Epoch [2][633/633]	lr: 1.000e-02, bbox_mAP: 0.6830, bbox_mAP_50: 0.8160, bbox_mAP_75: 0.7200, bbox_mAP_s: 0.2220, bbox_mAP_m: 0.5610, bbox_mAP_l: 0.7960, bbox_mAP_copypaste: 0.683 0.816 0.720 0.222 0.561 0.796
2020-11-18 01:06:32,066 - mmdet - INFO - Epoch(train) [2][67]	loss_rpn_cls: 0.0305, loss_rpn_bbox: 0.0820, loss_cls: 0.1352, acc: 94.6843, loss_bbox: 0.2164, loss: 0.4642
2020-11-18 01:07:48,635 - mmdet - INFO - Epoch [3][100/633]	lr: 1.000e-02, eta: 0:13:51, time: 0.764, data_time: 0.033, memory: 11886, loss_rpn_cls: 0.0417, loss_rpn_bbox: 0.0758, loss_cls: 0.1201, acc: 95.4355, loss_bbox: 0.1869, loss: 0.4246
2020-11-18 01:09:02,883 - mmdet - INFO - Epoch [3][200/633]	lr: 1.000e-02, eta: 0:12:42, time: 0.742, data_time: 0.012, memory: 11886, loss_rpn_cls: 0.0252, loss_rpn_bbox: 0.0723, loss_cls: 0.1107, acc: 95.8320, loss_bbox: 0.1714, loss: 0.3796
2020-11-18 01:10:17,231 - mmdet - INFO - Epoch [3][300/633]	lr: 1.000e-02, eta: 0:11:32, time: 0.743, data_time: 0.012, memory: 11886, loss_rpn_cls: 0.0218, loss_rpn_bbox: 0.0814, loss_cls: 0.1233, acc: 95.1113, loss_bbox: 0.2074, loss: 0.4338
2020-11-18 01:11:31,520 - mmdet - INFO - Epoch [3][400/633]	lr: 1.000e-02, eta: 0:10:22, time: 0.743, data_time: 0.012, memory: 11886, loss_rpn_cls: 0.0186, loss_rpn_bbox: 0.0765, loss_cls: 0.1184, acc: 95.1914, loss_bbox: 0.2132, loss: 0.4267
2020-11-18 01:12:45,772 - mmdet - INFO - Epoch [3][500/633]	lr: 1.000e-02, eta: 0:09:11, time: 0.743, data_time: 0.012, memory: 11886, loss_rpn_cls: 0.0179, loss_rpn_bbox: 0.0694, loss_cls: 0.1071, acc: 95.8320, loss_bbox: 0.1955, loss: 0.3899
2020-11-18 01:13:59,848 - mmdet - INFO - Epoch [3][600/633]	lr: 1.000e-02, eta: 0:08:00, time: 0.741, data_time: 0.012, memory: 11886, loss_rpn_cls: 0.0119, loss_rpn_bbox: 0.0630, loss_cls: 0.0942, acc: 96.2188, loss_bbox: 0.1726, loss: 0.3418
2020-11-18 01:14:45,959 - mmdet - INFO - Evaluating bbox...
2020-11-18 01:14:49,052 - mmdet - INFO - Epoch [3][633/633]	lr: 1.000e-02, bbox_mAP: 0.6790, bbox_mAP_50: 0.8100, bbox_mAP_75: 0.7120, bbox_mAP_s: 0.2320, bbox_mAP_m: 0.5760, bbox_mAP_l: 0.7870, bbox_mAP_copypaste: 0.679 0.810 0.712 0.232 0.576 0.787
2020-11-18 01:16:06,162 - mmdet - INFO - Epoch [4][100/633]	lr: 1.000e-02, eta: 0:06:19, time: 0.769, data_time: 0.034, memory: 11886, loss_rpn_cls: 0.0151, loss_rpn_bbox: 0.0733, loss_cls: 0.1097, acc: 95.6025, loss_bbox: 0.2044, loss: 0.4025
2020-11-18 01:17:20,226 - mmdet - INFO - Epoch [4][200/633]	lr: 1.000e-02, eta: 0:05:08, time: 0.741, data_time: 0.012, memory: 11886, loss_rpn_cls: 0.0142, loss_rpn_bbox: 0.0718, loss_cls: 0.1035, acc: 95.9463, loss_bbox: 0.1992, loss: 0.3887
2020-11-18 01:18:34,520 - mmdet - INFO - Epoch [4][300/633]	lr: 1.000e-02, eta: 0:03:57, time: 0.743, data_time: 0.012, memory: 11886, loss_rpn_cls: 0.0452, loss_rpn_bbox: 0.0762, loss_cls: 0.1195, acc: 95.4150, loss_bbox: 0.1803, loss: 0.4212
2020-11-18 01:19:48,564 - mmdet - INFO - Epoch [4][400/633]	lr: 1.000e-02, eta: 0:02:46, time: 0.740, data_time: 0.012, memory: 11886, loss_rpn_cls: 0.0369, loss_rpn_bbox: 0.0808, loss_cls: 0.1312, acc: 95.0342, loss_bbox: 0.2042, loss: 0.4532
2020-11-18 01:21:03,052 - mmdet - INFO - Epoch [4][500/633]	lr: 1.000e-02, eta: 0:01:35, time: 0.745, data_time: 0.012, memory: 11886, loss_rpn_cls: 0.0215, loss_rpn_bbox: 0.0744, loss_cls: 0.1196, acc: 95.2070, loss_bbox: 0.1969, loss: 0.4124
2020-11-18 01:22:17,272 - mmdet - INFO - Epoch [4][600/633]	lr: 1.000e-02, eta: 0:00:23, time: 0.742, data_time: 0.012, memory: 11886, loss_rpn_cls: 0.0282, loss_rpn_bbox: 0.0727, loss_cls: 0.1023, acc: 96.1045, loss_bbox: 0.1696, loss: 0.3729
2020-11-18 01:22:41,710 - mmdet - INFO - Saving checkpoint at 4 epochs
2020-11-18 01:23:05,093 - mmdet - INFO - Evaluating bbox...
2020-11-18 01:23:08,293 - mmdet - INFO - Epoch [4][633/633]	lr: 1.000e-02, bbox_mAP: 0.6540, bbox_mAP_50: 0.7860, bbox_mAP_75: 0.6900, bbox_mAP_s: 0.2050, bbox_mAP_m: 0.5460, bbox_mAP_l: 0.7660, bbox_mAP_copypaste: 0.654 0.786 0.690 0.205 0.546 0.766
2020-11-18 01:23:35,572 - mmdet - INFO - Epoch(train) [4][67]	loss_rpn_cls: 0.0261, loss_rpn_bbox: 0.0854, loss_cls: 0.1335, acc: 94.7295, loss_bbox: 0.2218, loss: 0.4668
