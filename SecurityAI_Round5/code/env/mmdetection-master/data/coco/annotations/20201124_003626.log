2020-11-24 00:36:26,548 - mmdet - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.6.4 |Anaconda, Inc.| (default, Jan 16 2018, 18:10:19) [GCC 7.2.0]
CUDA available: True
CUDA_HOME: /usr/local/cuda
NVCC: Cuda compilation tools, release 10.0, V10.0.130
GPU 0: Tesla P100-PCIE-16GB
GCC: gcc (GCC) 5.3.0
PyTorch: 1.3.1+cu100
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - Intel(R) Math Kernel Library Version 2019.0.4 Product Build 20190411 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.20.5 (Git Hash 0125f28c61c1f822fd48570b4c1066f96fcb9b2e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CUDA Runtime 10.0
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.1
  - Build settings: BLAS=MKL, BUILD_NAMEDTENSOR=OFF, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Wno-stringop-overflow, DISABLE_NUMA=1, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=True, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

TorchVision: 0.4.2+cu100
OpenCV: 4.4.0
MMCV: 1.0.5
MMDetection: 2.3.0+788fa8d
MMDetection Compiler: GCC 7.3
MMDetection CUDA Compiler: 10.0
------------------------------------------------------------

2020-11-24 00:36:26,548 - mmdet - INFO - Distributed training: False
2020-11-24 00:36:26,934 - mmdet - INFO - Config:
model = dict(
    type='FasterRCNN',
    pretrained='torchvision://resnet50',
    backbone=dict(
        type='ResNet',
        depth=50,
        num_stages=4,
        out_indices=(0, 1, 2, 3),
        frozen_stages=1,
        norm_cfg=dict(type='BN', requires_grad=True),
        norm_eval=True,
        style='pytorch'),
    neck=dict(
        type='FPN',
        in_channels=[256, 512, 1024, 2048],
        out_channels=256,
        num_outs=5),
    rpn_head=dict(
        type='RPNHead',
        in_channels=256,
        feat_channels=256,
        anchor_generator=dict(
            type='AnchorGenerator',
            scales=[8],
            ratios=[0.5, 1.0, 2.0],
            strides=[4, 8, 16, 32, 64]),
        bbox_coder=dict(
            type='DeltaXYWHBBoxCoder',
            target_means=[0.0, 0.0, 0.0, 0.0],
            target_stds=[1.0, 1.0, 1.0, 1.0]),
        loss_cls=dict(
            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),
        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),
    roi_head=dict(
        type='StandardRoIHead',
        bbox_roi_extractor=dict(
            type='SingleRoIExtractor',
            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),
            out_channels=256,
            featmap_strides=[4, 8, 16, 32]),
        bbox_head=dict(
            type='Shared2FCBBoxHead',
            in_channels=256,
            fc_out_channels=1024,
            roi_feat_size=7,
            num_classes=2,
            bbox_coder=dict(
                type='DeltaXYWHBBoxCoder',
                target_means=[0.0, 0.0, 0.0, 0.0],
                target_stds=[0.1, 0.1, 0.2, 0.2]),
            reg_class_agnostic=False,
            loss_cls=dict(
                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),
            loss_bbox=dict(type='L1Loss', loss_weight=1.0))))
train_cfg = dict(
    rpn=dict(
        assigner=dict(
            type='MaxIoUAssigner',
            pos_iou_thr=0.7,
            neg_iou_thr=0.3,
            min_pos_iou=0.3,
            match_low_quality=True,
            ignore_iof_thr=-1),
        sampler=dict(
            type='RandomSampler',
            num=256,
            pos_fraction=0.5,
            neg_pos_ub=-1,
            add_gt_as_proposals=False),
        allowed_border=-1,
        pos_weight=-1,
        debug=False),
    rpn_proposal=dict(
        nms_across_levels=False,
        nms_pre=2000,
        nms_post=1000,
        max_num=1000,
        nms_thr=0.7,
        min_bbox_size=0),
    rcnn=dict(
        assigner=dict(
            type='MaxIoUAssigner',
            pos_iou_thr=0.5,
            neg_iou_thr=0.5,
            min_pos_iou=0.5,
            match_low_quality=False,
            ignore_iof_thr=-1),
        sampler=dict(
            type='RandomSampler',
            num=512,
            pos_fraction=0.25,
            neg_pos_ub=-1,
            add_gt_as_proposals=True),
        pos_weight=-1,
        debug=False))
test_cfg = dict(
    rpn=dict(
        nms_across_levels=False,
        nms_pre=1000,
        nms_post=1000,
        max_num=1000,
        nms_thr=0.7,
        min_bbox_size=0),
    rcnn=dict(
        score_thr=0.05,
        nms=dict(type='nms', iou_threshold=0.5),
        max_per_img=100))
dataset_type = 'CocoDataset'
data_root = 'data/coco/'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(type='Resize', img_scale=(1550, 1550), keep_ratio=True),
    dict(type='RandomFlip', flip_ratio=0.5),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='Pad', size_divisor=32),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(1550, 1550),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=2,
    workers_per_gpu=2,
    train=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_trai.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(type='Resize', img_scale=(1550, 1550), keep_ratio=True),
            dict(type='RandomFlip', flip_ratio=0.5),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
        ]),
    val=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_test.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1550, 1550),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_vals.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1550, 1550),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
evaluation = dict(interval=1, metric='bbox')
optimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0001)
optimizer_config = dict(grad_clip=None)
lr_config = dict(
    policy='step',
    warmup='linear',
    warmup_iters=500,
    warmup_ratio=0.001,
    step=[8, 11])
total_epochs = 4
checkpoint_config = dict(interval=4)
log_config = dict(interval=100, hooks=[dict(type='TextLoggerHook')])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = '/home/admin/.cache/torch/checkpoints/X.pth'
resume_from = None
workflow = [('train', 2), ('val', 1)]
work_dir = '/home/admin/jupyter/SecurityAI_Round5/data/work'
gpu_ids = range(0, 1)

2020-11-24 00:36:27,430 - mmdet - INFO - load model from: torchvision://resnet50
2020-11-24 00:36:35,425 - mmdet - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: fc.weight, fc.bias

2020-11-24 00:36:45,575 - mmdet - INFO - load checkpoint from /home/admin/.cache/torch/checkpoints/X.pth
2020-11-24 00:36:52,364 - mmdet - INFO - Start running, host: admin@fuxilabor_labor0_S4_Odps_S96_dsw_prepaid_cnsh_838_2020112313382, work_dir: /home/admin/jupyter/SecurityAI_Round5/data/work
2020-11-24 00:36:52,364 - mmdet - INFO - workflow: [('train', 2), ('val', 1)], max: 4 epochs
2020-11-24 00:38:09,730 - mmdet - INFO - Epoch [1][100/633]	lr: 1.988e-03, eta: 0:31:16, time: 0.772, data_time: 0.034, memory: 9989, loss_rpn_cls: 0.0040, loss_rpn_bbox: 0.0308, loss_cls: 0.0423, acc: 98.3027, loss_bbox: 0.0810, loss: 0.1581
2020-11-24 00:39:24,376 - mmdet - INFO - Epoch [1][200/633]	lr: 3.986e-03, eta: 0:29:30, time: 0.746, data_time: 0.012, memory: 9989, loss_rpn_cls: 0.0034, loss_rpn_bbox: 0.0303, loss_cls: 0.0370, acc: 98.4727, loss_bbox: 0.0815, loss: 0.1522
2020-11-24 00:40:38,898 - mmdet - INFO - Epoch [1][300/633]	lr: 5.984e-03, eta: 0:28:03, time: 0.745, data_time: 0.012, memory: 9989, loss_rpn_cls: 0.0020, loss_rpn_bbox: 0.0259, loss_cls: 0.0312, acc: 98.7158, loss_bbox: 0.0724, loss: 0.1315
2020-11-24 00:41:53,811 - mmdet - INFO - Epoch [1][400/633]	lr: 7.982e-03, eta: 0:26:45, time: 0.749, data_time: 0.012, memory: 11908, loss_rpn_cls: 0.0059, loss_rpn_bbox: 0.0306, loss_cls: 0.0339, acc: 98.6670, loss_bbox: 0.0762, loss: 0.1466
2020-11-24 00:43:08,299 - mmdet - INFO - Epoch [1][500/633]	lr: 9.980e-03, eta: 0:25:27, time: 0.745, data_time: 0.012, memory: 11908, loss_rpn_cls: 0.0031, loss_rpn_bbox: 0.0305, loss_cls: 0.0309, acc: 98.7275, loss_bbox: 0.0747, loss: 0.1393
2020-11-24 00:44:22,790 - mmdet - INFO - Epoch [1][600/633]	lr: 1.000e-02, eta: 0:24:09, time: 0.745, data_time: 0.012, memory: 11908, loss_rpn_cls: 0.0033, loss_rpn_bbox: 0.0368, loss_cls: 0.0416, acc: 98.2598, loss_bbox: 0.0847, loss: 0.1665
2020-11-24 00:45:09,884 - mmdet - INFO - Evaluating bbox...
2020-11-24 00:45:11,337 - mmdet - INFO - Epoch [1][633/633]	lr: 1.000e-02, bbox_mAP: 0.8460, bbox_mAP_50: 0.9100, bbox_mAP_75: 0.9050, bbox_mAP_s: 0.5950, bbox_mAP_m: 0.8760, bbox_mAP_l: 0.9110, bbox_mAP_copypaste: 0.846 0.910 0.905 0.595 0.876 0.911
2020-11-24 00:46:28,908 - mmdet - INFO - Epoch [2][100/633]	lr: 1.000e-02, eta: 0:21:34, time: 0.774, data_time: 0.034, memory: 11908, loss_rpn_cls: 0.0048, loss_rpn_bbox: 0.0370, loss_cls: 0.0435, acc: 98.2715, loss_bbox: 0.0860, loss: 0.1713
2020-11-24 00:47:43,336 - mmdet - INFO - Epoch [2][200/633]	lr: 1.000e-02, eta: 0:20:27, time: 0.744, data_time: 0.012, memory: 11908, loss_rpn_cls: 0.0051, loss_rpn_bbox: 0.0365, loss_cls: 0.0448, acc: 98.1377, loss_bbox: 0.0904, loss: 0.1768
2020-11-24 00:48:58,079 - mmdet - INFO - Epoch [2][300/633]	lr: 1.000e-02, eta: 0:19:19, time: 0.747, data_time: 0.012, memory: 11908, loss_rpn_cls: 0.0055, loss_rpn_bbox: 0.0374, loss_cls: 0.0437, acc: 98.1631, loss_bbox: 0.0857, loss: 0.1723
2020-11-24 00:50:12,674 - mmdet - INFO - Epoch [2][400/633]	lr: 1.000e-02, eta: 0:18:10, time: 0.746, data_time: 0.012, memory: 11908, loss_rpn_cls: 0.0036, loss_rpn_bbox: 0.0329, loss_cls: 0.0394, acc: 98.4502, loss_bbox: 0.0842, loss: 0.1601
2020-11-24 00:51:27,381 - mmdet - INFO - Epoch [2][500/633]	lr: 1.000e-02, eta: 0:17:00, time: 0.747, data_time: 0.012, memory: 11908, loss_rpn_cls: 0.0078, loss_rpn_bbox: 0.0379, loss_cls: 0.0502, acc: 97.9766, loss_bbox: 0.0883, loss: 0.1842
2020-11-24 00:52:41,884 - mmdet - INFO - Epoch [2][600/633]	lr: 1.000e-02, eta: 0:15:48, time: 0.745, data_time: 0.012, memory: 11908, loss_rpn_cls: 0.0171, loss_rpn_bbox: 0.0478, loss_cls: 0.0754, acc: 97.0635, loss_bbox: 0.1145, loss: 0.2548
2020-11-24 00:53:29,112 - mmdet - INFO - Evaluating bbox...
2020-11-24 00:53:31,605 - mmdet - INFO - Epoch [2][633/633]	lr: 1.000e-02, bbox_mAP: 0.7250, bbox_mAP_50: 0.8110, bbox_mAP_75: 0.7930, bbox_mAP_s: 0.4530, bbox_mAP_m: 0.7480, bbox_mAP_l: 0.7800, bbox_mAP_copypaste: 0.725 0.811 0.793 0.453 0.748 0.780
2020-11-24 00:53:59,652 - mmdet - INFO - Epoch(train) [2][70]	loss_rpn_cls: 0.0187, loss_rpn_bbox: 0.0467, loss_cls: 0.0737, acc: 97.3577, loss_bbox: 0.1111, loss: 0.2501
2020-11-24 00:55:16,958 - mmdet - INFO - Epoch [3][100/633]	lr: 1.000e-02, eta: 0:13:54, time: 0.770, data_time: 0.034, memory: 11908, loss_rpn_cls: 0.0095, loss_rpn_bbox: 0.0419, loss_cls: 0.0551, acc: 97.8701, loss_bbox: 0.0977, loss: 0.2042
2020-11-24 00:56:31,659 - mmdet - INFO - Epoch [3][200/633]	lr: 1.000e-02, eta: 0:12:45, time: 0.747, data_time: 0.012, memory: 11908, loss_rpn_cls: 0.0062, loss_rpn_bbox: 0.0392, loss_cls: 0.0513, acc: 97.8896, loss_bbox: 0.0999, loss: 0.1965
2020-11-24 00:57:46,293 - mmdet - INFO - Epoch [3][300/633]	lr: 1.000e-02, eta: 0:11:35, time: 0.746, data_time: 0.012, memory: 11908, loss_rpn_cls: 0.0080, loss_rpn_bbox: 0.0411, loss_cls: 0.0529, acc: 97.9883, loss_bbox: 0.1039, loss: 0.2059
2020-11-24 00:59:00,745 - mmdet - INFO - Epoch [3][400/633]	lr: 1.000e-02, eta: 0:10:24, time: 0.745, data_time: 0.012, memory: 11908, loss_rpn_cls: 0.0086, loss_rpn_bbox: 0.0429, loss_cls: 0.0540, acc: 97.7949, loss_bbox: 0.1040, loss: 0.2096
2020-11-24 01:00:15,862 - mmdet - INFO - Epoch [3][500/633]	lr: 1.000e-02, eta: 0:09:13, time: 0.751, data_time: 0.012, memory: 11908, loss_rpn_cls: 0.0161, loss_rpn_bbox: 0.0448, loss_cls: 0.0640, acc: 97.5459, loss_bbox: 0.1068, loss: 0.2316
2020-11-24 01:01:30,277 - mmdet - INFO - Epoch [3][600/633]	lr: 1.000e-02, eta: 0:08:02, time: 0.744, data_time: 0.012, memory: 11908, loss_rpn_cls: 0.0067, loss_rpn_bbox: 0.0401, loss_cls: 0.0484, acc: 98.0029, loss_bbox: 0.0961, loss: 0.1912
2020-11-24 01:02:17,279 - mmdet - INFO - Evaluating bbox...
2020-11-24 01:02:18,930 - mmdet - INFO - Epoch [3][633/633]	lr: 1.000e-02, bbox_mAP: 0.7690, bbox_mAP_50: 0.8490, bbox_mAP_75: 0.8330, bbox_mAP_s: 0.5090, bbox_mAP_m: 0.8200, bbox_mAP_l: 0.8380, bbox_mAP_copypaste: 0.769 0.849 0.833 0.509 0.820 0.838
2020-11-24 01:03:35,888 - mmdet - INFO - Epoch [4][100/633]	lr: 1.000e-02, eta: 0:06:20, time: 0.768, data_time: 0.034, memory: 11908, loss_rpn_cls: 0.0064, loss_rpn_bbox: 0.0407, loss_cls: 0.0459, acc: 98.1455, loss_bbox: 0.0929, loss: 0.1859
2020-11-24 01:04:50,204 - mmdet - INFO - Epoch [4][200/633]	lr: 1.000e-02, eta: 0:05:09, time: 0.743, data_time: 0.012, memory: 11908, loss_rpn_cls: 0.0049, loss_rpn_bbox: 0.0374, loss_cls: 0.0508, acc: 98.0430, loss_bbox: 0.0951, loss: 0.1882
2020-11-24 01:06:04,782 - mmdet - INFO - Epoch [4][300/633]	lr: 1.000e-02, eta: 0:03:58, time: 0.746, data_time: 0.012, memory: 11908, loss_rpn_cls: 0.0054, loss_rpn_bbox: 0.0386, loss_cls: 0.0543, acc: 97.8447, loss_bbox: 0.0991, loss: 0.1974
2020-11-24 01:07:19,664 - mmdet - INFO - Epoch [4][400/633]	lr: 1.000e-02, eta: 0:02:47, time: 0.749, data_time: 0.013, memory: 11908, loss_rpn_cls: 0.0057, loss_rpn_bbox: 0.0394, loss_cls: 0.0495, acc: 97.9844, loss_bbox: 0.1015, loss: 0.1961
2020-11-24 01:08:34,285 - mmdet - INFO - Epoch [4][500/633]	lr: 1.000e-02, eta: 0:01:35, time: 0.746, data_time: 0.012, memory: 11908, loss_rpn_cls: 0.0038, loss_rpn_bbox: 0.0382, loss_cls: 0.0430, acc: 98.1895, loss_bbox: 0.0925, loss: 0.1775
2020-11-24 01:09:48,839 - mmdet - INFO - Epoch [4][600/633]	lr: 1.000e-02, eta: 0:00:23, time: 0.746, data_time: 0.012, memory: 11908, loss_rpn_cls: 0.0055, loss_rpn_bbox: 0.0354, loss_cls: 0.0410, acc: 98.2783, loss_bbox: 0.0898, loss: 0.1717
2020-11-24 01:10:13,190 - mmdet - INFO - Saving checkpoint at 4 epochs
2020-11-24 01:10:37,330 - mmdet - INFO - Evaluating bbox...
2020-11-24 01:10:38,847 - mmdet - INFO - Epoch [4][633/633]	lr: 1.000e-02, bbox_mAP: 0.8280, bbox_mAP_50: 0.8980, bbox_mAP_75: 0.8870, bbox_mAP_s: 0.5480, bbox_mAP_m: 0.8630, bbox_mAP_l: 0.8960, bbox_mAP_copypaste: 0.828 0.898 0.887 0.548 0.863 0.896
2020-11-24 01:11:07,831 - mmdet - INFO - Epoch(train) [4][70]	loss_rpn_cls: 0.0051, loss_rpn_bbox: 0.0381, loss_cls: 0.0394, acc: 98.3831, loss_bbox: 0.0856, loss: 0.1682
