2020-11-19 01:10:36,775 - mmdet - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.6.4 |Anaconda, Inc.| (default, Jan 16 2018, 18:10:19) [GCC 7.2.0]
CUDA available: True
CUDA_HOME: /usr/local/cuda
NVCC: Cuda compilation tools, release 10.0, V10.0.130
GPU 0: Tesla P100-PCIE-16GB
GCC: gcc (GCC) 5.3.0
PyTorch: 1.3.1+cu100
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - Intel(R) Math Kernel Library Version 2019.0.4 Product Build 20190411 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.20.5 (Git Hash 0125f28c61c1f822fd48570b4c1066f96fcb9b2e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CUDA Runtime 10.0
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.1
  - Build settings: BLAS=MKL, BUILD_NAMEDTENSOR=OFF, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Wno-stringop-overflow, DISABLE_NUMA=1, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=True, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

TorchVision: 0.4.2+cu100
OpenCV: 4.4.0
MMCV: 1.0.5
MMDetection: 2.3.0+788fa8d
MMDetection Compiler: GCC 7.3
MMDetection CUDA Compiler: 10.0
------------------------------------------------------------

2020-11-19 01:10:36,776 - mmdet - INFO - Distributed training: False
2020-11-19 01:10:37,165 - mmdet - INFO - Config:
model = dict(
    type='FasterRCNN',
    pretrained='torchvision://resnet50',
    backbone=dict(
        type='ResNet',
        depth=50,
        num_stages=4,
        out_indices=(0, 1, 2, 3),
        frozen_stages=1,
        norm_cfg=dict(type='BN', requires_grad=True),
        norm_eval=True,
        style='pytorch'),
    neck=dict(
        type='FPN',
        in_channels=[256, 512, 1024, 2048],
        out_channels=256,
        num_outs=5),
    rpn_head=dict(
        type='RPNHead',
        in_channels=256,
        feat_channels=256,
        anchor_generator=dict(
            type='AnchorGenerator',
            scales=[8],
            ratios=[0.5, 1.0, 2.0],
            strides=[4, 8, 16, 32, 64]),
        bbox_coder=dict(
            type='DeltaXYWHBBoxCoder',
            target_means=[0.0, 0.0, 0.0, 0.0],
            target_stds=[1.0, 1.0, 1.0, 1.0]),
        loss_cls=dict(
            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),
        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),
    roi_head=dict(
        type='StandardRoIHead',
        bbox_roi_extractor=dict(
            type='SingleRoIExtractor',
            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),
            out_channels=256,
            featmap_strides=[4, 8, 16, 32]),
        bbox_head=dict(
            type='Shared2FCBBoxHead',
            in_channels=256,
            fc_out_channels=1024,
            roi_feat_size=7,
            num_classes=2,
            bbox_coder=dict(
                type='DeltaXYWHBBoxCoder',
                target_means=[0.0, 0.0, 0.0, 0.0],
                target_stds=[0.1, 0.1, 0.2, 0.2]),
            reg_class_agnostic=False,
            loss_cls=dict(
                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),
            loss_bbox=dict(type='L1Loss', loss_weight=1.0))))
train_cfg = dict(
    rpn=dict(
        assigner=dict(
            type='MaxIoUAssigner',
            pos_iou_thr=0.7,
            neg_iou_thr=0.3,
            min_pos_iou=0.3,
            match_low_quality=True,
            ignore_iof_thr=-1),
        sampler=dict(
            type='RandomSampler',
            num=256,
            pos_fraction=0.5,
            neg_pos_ub=-1,
            add_gt_as_proposals=False),
        allowed_border=-1,
        pos_weight=-1,
        debug=False),
    rpn_proposal=dict(
        nms_across_levels=False,
        nms_pre=2000,
        nms_post=1000,
        max_num=1000,
        nms_thr=0.7,
        min_bbox_size=0),
    rcnn=dict(
        assigner=dict(
            type='MaxIoUAssigner',
            pos_iou_thr=0.5,
            neg_iou_thr=0.5,
            min_pos_iou=0.5,
            match_low_quality=False,
            ignore_iof_thr=-1),
        sampler=dict(
            type='RandomSampler',
            num=512,
            pos_fraction=0.25,
            neg_pos_ub=-1,
            add_gt_as_proposals=True),
        pos_weight=-1,
        debug=False))
test_cfg = dict(
    rpn=dict(
        nms_across_levels=False,
        nms_pre=1000,
        nms_post=1000,
        max_num=1000,
        nms_thr=0.7,
        min_bbox_size=0),
    rcnn=dict(
        score_thr=0.05,
        nms=dict(type='nms', iou_threshold=0.5),
        max_per_img=100))
dataset_type = 'CocoDataset'
data_root = 'data/coco/'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(type='Resize', img_scale=(1550, 1550), keep_ratio=True),
    dict(type='RandomFlip', flip_ratio=0.5),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='Pad', size_divisor=32),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(1550, 1550),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=2,
    workers_per_gpu=2,
    train=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_trai.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(type='Resize', img_scale=(1550, 1550), keep_ratio=True),
            dict(type='RandomFlip', flip_ratio=0.5),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
        ]),
    val=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_test.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1550, 1550),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_vals.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1550, 1550),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
evaluation = dict(interval=1, metric='bbox')
optimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0001)
optimizer_config = dict(grad_clip=None)
lr_config = dict(
    policy='step',
    warmup='linear',
    warmup_iters=500,
    warmup_ratio=0.001,
    step=[8, 11])
total_epochs = 4
checkpoint_config = dict(interval=4)
log_config = dict(interval=100, hooks=[dict(type='TextLoggerHook')])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = '/home/admin/.cache/torch/checkpoints/X.pth'
resume_from = None
workflow = [('train', 2), ('val', 1)]
work_dir = '/home/admin/jupyter/SecurityAI_Round5/data/work'
gpu_ids = range(0, 1)

2020-11-19 01:10:37,663 - mmdet - INFO - load model from: torchvision://resnet50
2020-11-19 01:10:45,562 - mmdet - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: fc.weight, fc.bias

2020-11-19 01:10:55,901 - mmdet - INFO - load checkpoint from /home/admin/.cache/torch/checkpoints/X.pth
2020-11-19 01:11:02,647 - mmdet - INFO - Start running, host: admin@fuxilabor_labor0_S4_Odps_S96_dsw_prepaid_cnsh_838_2020111813282, work_dir: /home/admin/jupyter/SecurityAI_Round5/data/work
2020-11-19 01:11:02,647 - mmdet - INFO - workflow: [('train', 2), ('val', 1)], max: 4 epochs
2020-11-19 01:12:20,217 - mmdet - INFO - Epoch [1][100/622]	lr: 1.988e-03, eta: 0:30:47, time: 0.774, data_time: 0.033, memory: 9961, loss_rpn_cls: 0.0041, loss_rpn_bbox: 0.0417, loss_cls: 0.0493, acc: 97.9297, loss_bbox: 0.1122, loss: 0.2073
2020-11-19 01:13:35,162 - mmdet - INFO - Epoch [1][200/622]	lr: 3.986e-03, eta: 0:29:02, time: 0.749, data_time: 0.012, memory: 9961, loss_rpn_cls: 0.0036, loss_rpn_bbox: 0.0393, loss_cls: 0.0440, acc: 98.1855, loss_bbox: 0.0975, loss: 0.1844
2020-11-19 01:14:50,951 - mmdet - INFO - Epoch [1][300/622]	lr: 5.984e-03, eta: 0:27:43, time: 0.758, data_time: 0.012, memory: 9961, loss_rpn_cls: 0.0030, loss_rpn_bbox: 0.0390, loss_cls: 0.0479, acc: 98.0166, loss_bbox: 0.1070, loss: 0.1969
2020-11-19 01:16:05,750 - mmdet - INFO - Epoch [1][400/622]	lr: 7.982e-03, eta: 0:26:21, time: 0.748, data_time: 0.012, memory: 9961, loss_rpn_cls: 0.0048, loss_rpn_bbox: 0.0387, loss_cls: 0.0393, acc: 98.3682, loss_bbox: 0.0944, loss: 0.1773
2020-11-19 01:17:20,783 - mmdet - INFO - Epoch [1][500/622]	lr: 9.980e-03, eta: 0:25:02, time: 0.750, data_time: 0.012, memory: 11906, loss_rpn_cls: 0.0038, loss_rpn_bbox: 0.0413, loss_cls: 0.0458, acc: 98.1270, loss_bbox: 0.0961, loss: 0.1870
2020-11-19 01:18:35,588 - mmdet - INFO - Epoch [1][600/622]	lr: 1.000e-02, eta: 0:23:44, time: 0.748, data_time: 0.012, memory: 11906, loss_rpn_cls: 0.0065, loss_rpn_bbox: 0.0457, loss_cls: 0.0529, acc: 97.8145, loss_bbox: 0.1099, loss: 0.2151
2020-11-19 01:19:14,988 - mmdet - INFO - Evaluating bbox...
2020-11-19 01:19:16,384 - mmdet - INFO - Epoch [1][622/622]	lr: 1.000e-02, bbox_mAP: 0.8270, bbox_mAP_50: 0.9060, bbox_mAP_75: 0.8890, bbox_mAP_s: 0.5830, bbox_mAP_m: 0.8510, bbox_mAP_l: 0.8760, bbox_mAP_copypaste: 0.827 0.906 0.889 0.583 0.851 0.876
2020-11-19 01:20:33,728 - mmdet - INFO - Epoch [2][100/622]	lr: 1.000e-02, eta: 0:21:36, time: 0.771, data_time: 0.034, memory: 11906, loss_rpn_cls: 0.0046, loss_rpn_bbox: 0.0482, loss_cls: 0.0459, acc: 98.0586, loss_bbox: 0.1122, loss: 0.2109
2020-11-19 01:21:48,645 - mmdet - INFO - Epoch [2][200/622]	lr: 1.000e-02, eta: 0:20:25, time: 0.749, data_time: 0.012, memory: 11906, loss_rpn_cls: 0.0032, loss_rpn_bbox: 0.0456, loss_cls: 0.0456, acc: 98.1064, loss_bbox: 0.1051, loss: 0.1995
2020-11-19 01:23:03,754 - mmdet - INFO - Epoch [2][300/622]	lr: 1.000e-02, eta: 0:19:14, time: 0.751, data_time: 0.012, memory: 11906, loss_rpn_cls: 0.0058, loss_rpn_bbox: 0.0475, loss_cls: 0.0561, acc: 97.7021, loss_bbox: 0.1177, loss: 0.2271
2020-11-19 01:24:18,462 - mmdet - INFO - Epoch [2][400/622]	lr: 1.000e-02, eta: 0:18:02, time: 0.747, data_time: 0.012, memory: 11906, loss_rpn_cls: 0.0069, loss_rpn_bbox: 0.0425, loss_cls: 0.0528, acc: 97.9014, loss_bbox: 0.1079, loss: 0.2101
2020-11-19 01:25:33,478 - mmdet - INFO - Epoch [2][500/622]	lr: 1.000e-02, eta: 0:16:50, time: 0.750, data_time: 0.012, memory: 11906, loss_rpn_cls: 0.0052, loss_rpn_bbox: 0.0464, loss_cls: 0.0556, acc: 97.6680, loss_bbox: 0.1127, loss: 0.2199
2020-11-19 01:26:48,493 - mmdet - INFO - Epoch [2][600/622]	lr: 1.000e-02, eta: 0:15:37, time: 0.750, data_time: 0.012, memory: 11906, loss_rpn_cls: 0.0062, loss_rpn_bbox: 0.0489, loss_cls: 0.0573, acc: 97.6221, loss_bbox: 0.1199, loss: 0.2323
2020-11-19 01:27:28,061 - mmdet - INFO - Evaluating bbox...
2020-11-19 01:27:29,377 - mmdet - INFO - Epoch [2][622/622]	lr: 1.000e-02, bbox_mAP: 0.8210, bbox_mAP_50: 0.9100, bbox_mAP_75: 0.8870, bbox_mAP_s: 0.5670, bbox_mAP_m: 0.8370, bbox_mAP_l: 0.8670, bbox_mAP_copypaste: 0.821 0.910 0.887 0.567 0.837 0.867
2020-11-19 01:27:58,555 - mmdet - INFO - Epoch(train) [2][72]	loss_rpn_cls: 0.0048, loss_rpn_bbox: 0.0481, loss_cls: 0.0552, acc: 97.7064, loss_bbox: 0.1169, loss: 0.2250
2020-11-19 01:29:16,294 - mmdet - INFO - Epoch [3][100/622]	lr: 1.000e-02, eta: 0:13:55, time: 0.773, data_time: 0.033, memory: 11906, loss_rpn_cls: 0.0043, loss_rpn_bbox: 0.0436, loss_cls: 0.0451, acc: 98.1113, loss_bbox: 0.1028, loss: 0.1958
2020-11-19 01:30:31,300 - mmdet - INFO - Epoch [3][200/622]	lr: 1.000e-02, eta: 0:12:44, time: 0.750, data_time: 0.012, memory: 11906, loss_rpn_cls: 0.0038, loss_rpn_bbox: 0.0465, loss_cls: 0.0519, acc: 97.8262, loss_bbox: 0.1141, loss: 0.2163
2020-11-19 01:31:46,242 - mmdet - INFO - Epoch [3][300/622]	lr: 1.000e-02, eta: 0:11:32, time: 0.749, data_time: 0.012, memory: 11906, loss_rpn_cls: 0.0050, loss_rpn_bbox: 0.0465, loss_cls: 0.0509, acc: 97.9238, loss_bbox: 0.1131, loss: 0.2154
2020-11-19 01:33:00,913 - mmdet - INFO - Epoch [3][400/622]	lr: 1.000e-02, eta: 0:10:19, time: 0.747, data_time: 0.012, memory: 11906, loss_rpn_cls: 0.0052, loss_rpn_bbox: 0.0474, loss_cls: 0.0526, acc: 97.8467, loss_bbox: 0.1157, loss: 0.2210
2020-11-19 01:34:15,858 - mmdet - INFO - Epoch [3][500/622]	lr: 1.000e-02, eta: 0:09:06, time: 0.749, data_time: 0.012, memory: 11906, loss_rpn_cls: 0.0060, loss_rpn_bbox: 0.0493, loss_cls: 0.0561, acc: 97.7031, loss_bbox: 0.1182, loss: 0.2296
2020-11-19 01:35:30,995 - mmdet - INFO - Epoch [3][600/622]	lr: 1.000e-02, eta: 0:07:53, time: 0.751, data_time: 0.012, memory: 11906, loss_rpn_cls: 0.0053, loss_rpn_bbox: 0.0461, loss_cls: 0.0578, acc: 97.6387, loss_bbox: 0.1201, loss: 0.2293
2020-11-19 01:36:10,618 - mmdet - INFO - Evaluating bbox...
2020-11-19 01:36:12,023 - mmdet - INFO - Epoch [3][622/622]	lr: 1.000e-02, bbox_mAP: 0.8240, bbox_mAP_50: 0.9160, bbox_mAP_75: 0.8970, bbox_mAP_s: 0.5620, bbox_mAP_m: 0.8290, bbox_mAP_l: 0.8820, bbox_mAP_copypaste: 0.824 0.916 0.897 0.562 0.829 0.882
2020-11-19 01:37:29,311 - mmdet - INFO - Epoch [4][100/622]	lr: 1.000e-02, eta: 0:06:20, time: 0.771, data_time: 0.033, memory: 11906, loss_rpn_cls: 0.0068, loss_rpn_bbox: 0.0466, loss_cls: 0.0571, acc: 97.6582, loss_bbox: 0.1224, loss: 0.2328
2020-11-19 01:38:44,125 - mmdet - INFO - Epoch [4][200/622]	lr: 1.000e-02, eta: 0:05:08, time: 0.748, data_time: 0.012, memory: 11906, loss_rpn_cls: 0.0040, loss_rpn_bbox: 0.0457, loss_cls: 0.0470, acc: 98.0420, loss_bbox: 0.1121, loss: 0.2089
2020-11-19 01:39:58,968 - mmdet - INFO - Epoch [4][300/622]	lr: 1.000e-02, eta: 0:03:55, time: 0.748, data_time: 0.012, memory: 11906, loss_rpn_cls: 0.0041, loss_rpn_bbox: 0.0441, loss_cls: 0.0443, acc: 98.1836, loss_bbox: 0.1029, loss: 0.1954
2020-11-19 01:41:14,020 - mmdet - INFO - Epoch [4][400/622]	lr: 1.000e-02, eta: 0:02:42, time: 0.751, data_time: 0.012, memory: 11906, loss_rpn_cls: 0.0097, loss_rpn_bbox: 0.0507, loss_cls: 0.0710, acc: 97.0762, loss_bbox: 0.1322, loss: 0.2636
2020-11-19 01:42:28,779 - mmdet - INFO - Epoch [4][500/622]	lr: 1.000e-02, eta: 0:01:29, time: 0.748, data_time: 0.012, memory: 11906, loss_rpn_cls: 0.0180, loss_rpn_bbox: 0.0518, loss_cls: 0.0725, acc: 97.3320, loss_bbox: 0.1205, loss: 0.2628
2020-11-19 01:43:43,231 - mmdet - INFO - Epoch [4][600/622]	lr: 1.000e-02, eta: 0:00:16, time: 0.745, data_time: 0.012, memory: 11906, loss_rpn_cls: 0.0169, loss_rpn_bbox: 0.0512, loss_cls: 0.0606, acc: 97.6680, loss_bbox: 0.1132, loss: 0.2418
2020-11-19 01:43:59,623 - mmdet - INFO - Saving checkpoint at 4 epochs
2020-11-19 01:44:24,728 - mmdet - INFO - Evaluating bbox...
2020-11-19 01:44:26,358 - mmdet - INFO - Epoch [4][622/622]	lr: 1.000e-02, bbox_mAP: 0.7880, bbox_mAP_50: 0.8900, bbox_mAP_75: 0.8630, bbox_mAP_s: 0.5230, bbox_mAP_m: 0.7860, bbox_mAP_l: 0.8420, bbox_mAP_copypaste: 0.788 0.890 0.863 0.523 0.786 0.842
2020-11-19 01:44:55,518 - mmdet - INFO - Epoch(train) [4][72]	loss_rpn_cls: 0.0087, loss_rpn_bbox: 0.0519, loss_cls: 0.0656, acc: 97.4352, loss_bbox: 0.1200, loss: 0.2462
