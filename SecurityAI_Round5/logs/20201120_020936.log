2020-11-20 02:09:36,502 - mmdet - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.6.4 |Anaconda, Inc.| (default, Jan 16 2018, 18:10:19) [GCC 7.2.0]
CUDA available: True
CUDA_HOME: /usr/local/cuda
NVCC: Cuda compilation tools, release 10.0, V10.0.130
GPU 0: Tesla P100-PCIE-16GB
GCC: gcc (GCC) 5.3.0
PyTorch: 1.3.1+cu100
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - Intel(R) Math Kernel Library Version 2019.0.4 Product Build 20190411 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.20.5 (Git Hash 0125f28c61c1f822fd48570b4c1066f96fcb9b2e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CUDA Runtime 10.0
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.1
  - Build settings: BLAS=MKL, BUILD_NAMEDTENSOR=OFF, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Wno-stringop-overflow, DISABLE_NUMA=1, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=True, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

TorchVision: 0.4.2+cu100
OpenCV: 4.4.0
MMCV: 1.0.5
MMDetection: 2.3.0+788fa8d
MMDetection Compiler: GCC 7.3
MMDetection CUDA Compiler: 10.0
------------------------------------------------------------

2020-11-20 02:09:36,503 - mmdet - INFO - Distributed training: False
2020-11-20 02:09:36,893 - mmdet - INFO - Config:
model = dict(
    type='FasterRCNN',
    pretrained='torchvision://resnet50',
    backbone=dict(
        type='ResNet',
        depth=50,
        num_stages=4,
        out_indices=(0, 1, 2, 3),
        frozen_stages=1,
        norm_cfg=dict(type='BN', requires_grad=True),
        norm_eval=True,
        style='pytorch'),
    neck=dict(
        type='FPN',
        in_channels=[256, 512, 1024, 2048],
        out_channels=256,
        num_outs=5),
    rpn_head=dict(
        type='RPNHead',
        in_channels=256,
        feat_channels=256,
        anchor_generator=dict(
            type='AnchorGenerator',
            scales=[8],
            ratios=[0.5, 1.0, 2.0],
            strides=[4, 8, 16, 32, 64]),
        bbox_coder=dict(
            type='DeltaXYWHBBoxCoder',
            target_means=[0.0, 0.0, 0.0, 0.0],
            target_stds=[1.0, 1.0, 1.0, 1.0]),
        loss_cls=dict(
            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),
        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),
    roi_head=dict(
        type='StandardRoIHead',
        bbox_roi_extractor=dict(
            type='SingleRoIExtractor',
            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),
            out_channels=256,
            featmap_strides=[4, 8, 16, 32]),
        bbox_head=dict(
            type='Shared2FCBBoxHead',
            in_channels=256,
            fc_out_channels=1024,
            roi_feat_size=7,
            num_classes=2,
            bbox_coder=dict(
                type='DeltaXYWHBBoxCoder',
                target_means=[0.0, 0.0, 0.0, 0.0],
                target_stds=[0.1, 0.1, 0.2, 0.2]),
            reg_class_agnostic=False,
            loss_cls=dict(
                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),
            loss_bbox=dict(type='L1Loss', loss_weight=1.0))))
train_cfg = dict(
    rpn=dict(
        assigner=dict(
            type='MaxIoUAssigner',
            pos_iou_thr=0.7,
            neg_iou_thr=0.3,
            min_pos_iou=0.3,
            match_low_quality=True,
            ignore_iof_thr=-1),
        sampler=dict(
            type='RandomSampler',
            num=256,
            pos_fraction=0.5,
            neg_pos_ub=-1,
            add_gt_as_proposals=False),
        allowed_border=-1,
        pos_weight=-1,
        debug=False),
    rpn_proposal=dict(
        nms_across_levels=False,
        nms_pre=2000,
        nms_post=1000,
        max_num=1000,
        nms_thr=0.7,
        min_bbox_size=0),
    rcnn=dict(
        assigner=dict(
            type='MaxIoUAssigner',
            pos_iou_thr=0.5,
            neg_iou_thr=0.5,
            min_pos_iou=0.5,
            match_low_quality=False,
            ignore_iof_thr=-1),
        sampler=dict(
            type='RandomSampler',
            num=512,
            pos_fraction=0.25,
            neg_pos_ub=-1,
            add_gt_as_proposals=True),
        pos_weight=-1,
        debug=False))
test_cfg = dict(
    rpn=dict(
        nms_across_levels=False,
        nms_pre=1000,
        nms_post=1000,
        max_num=1000,
        nms_thr=0.7,
        min_bbox_size=0),
    rcnn=dict(
        score_thr=0.05,
        nms=dict(type='nms', iou_threshold=0.5),
        max_per_img=100))
dataset_type = 'CocoDataset'
data_root = 'data/coco/'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(type='Resize', img_scale=(1550, 1550), keep_ratio=True),
    dict(type='RandomFlip', flip_ratio=0.5),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='Pad', size_divisor=32),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(1550, 1550),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=2,
    workers_per_gpu=2,
    train=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_trai.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(type='Resize', img_scale=(1550, 1550), keep_ratio=True),
            dict(type='RandomFlip', flip_ratio=0.5),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
        ]),
    val=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_test.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1550, 1550),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_vals.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1550, 1550),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
evaluation = dict(interval=1, metric='bbox')
optimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0001)
optimizer_config = dict(grad_clip=None)
lr_config = dict(
    policy='step',
    warmup='linear',
    warmup_iters=500,
    warmup_ratio=0.001,
    step=[8, 11])
total_epochs = 4
checkpoint_config = dict(interval=4)
log_config = dict(interval=100, hooks=[dict(type='TextLoggerHook')])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = '/home/admin/.cache/torch/checkpoints/X.pth'
resume_from = None
workflow = [('train', 2), ('val', 1)]
work_dir = '/home/admin/jupyter/SecurityAI_Round5/data/work'
gpu_ids = range(0, 1)

2020-11-20 02:09:37,424 - mmdet - INFO - load model from: torchvision://resnet50
2020-11-20 02:09:45,307 - mmdet - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: fc.weight, fc.bias

2020-11-20 02:09:55,603 - mmdet - INFO - load checkpoint from /home/admin/.cache/torch/checkpoints/X.pth
2020-11-20 02:10:02,326 - mmdet - INFO - Start running, host: admin@fuxilabor_labor0_S4_Odps_S96_dsw_prepaid_cnsh_838_2020111911384, work_dir: /home/admin/jupyter/SecurityAI_Round5/data/work
2020-11-20 02:10:02,326 - mmdet - INFO - workflow: [('train', 2), ('val', 1)], max: 4 epochs
2020-11-20 02:11:19,861 - mmdet - INFO - Epoch [1][100/621]	lr: 1.988e-03, eta: 0:30:43, time: 0.773, data_time: 0.034, memory: 9844, loss_rpn_cls: 0.0028, loss_rpn_bbox: 0.0336, loss_cls: 0.0318, acc: 98.7041, loss_bbox: 0.0774, loss: 0.1457
2020-11-20 02:12:34,845 - mmdet - INFO - Epoch [1][200/621]	lr: 3.986e-03, eta: 0:28:59, time: 0.750, data_time: 0.013, memory: 11882, loss_rpn_cls: 0.0039, loss_rpn_bbox: 0.0302, loss_cls: 0.0362, acc: 98.5420, loss_bbox: 0.0804, loss: 0.1506
2020-11-20 02:13:49,551 - mmdet - INFO - Epoch [1][300/621]	lr: 5.984e-03, eta: 0:27:32, time: 0.747, data_time: 0.012, memory: 11882, loss_rpn_cls: 0.0032, loss_rpn_bbox: 0.0322, loss_cls: 0.0326, acc: 98.6768, loss_bbox: 0.0761, loss: 0.1441
2020-11-20 02:15:04,099 - mmdet - INFO - Epoch [1][400/621]	lr: 7.982e-03, eta: 0:26:11, time: 0.745, data_time: 0.012, memory: 11882, loss_rpn_cls: 0.0028, loss_rpn_bbox: 0.0303, loss_cls: 0.0326, acc: 98.6592, loss_bbox: 0.0791, loss: 0.1448
2020-11-20 02:16:19,140 - mmdet - INFO - Epoch [1][500/621]	lr: 9.980e-03, eta: 0:24:54, time: 0.750, data_time: 0.012, memory: 11882, loss_rpn_cls: 0.0033, loss_rpn_bbox: 0.0372, loss_cls: 0.0468, acc: 98.0381, loss_bbox: 0.0960, loss: 0.1833
2020-11-20 02:17:33,766 - mmdet - INFO - Epoch [1][600/621]	lr: 1.000e-02, eta: 0:23:36, time: 0.746, data_time: 0.012, memory: 11882, loss_rpn_cls: 0.0037, loss_rpn_bbox: 0.0383, loss_cls: 0.0373, acc: 98.4238, loss_bbox: 0.0923, loss: 0.1715
2020-11-20 02:18:13,510 - mmdet - INFO - Evaluating bbox...
2020-11-20 02:18:16,196 - mmdet - INFO - Epoch [1][621/621]	lr: 1.000e-02, bbox_mAP: 0.7980, bbox_mAP_50: 0.8770, bbox_mAP_75: 0.8570, bbox_mAP_s: 0.4930, bbox_mAP_m: 0.7920, bbox_mAP_l: 0.8800, bbox_mAP_copypaste: 0.798 0.877 0.857 0.493 0.792 0.880
2020-11-20 02:19:33,193 - mmdet - INFO - Epoch [2][100/621]	lr: 1.000e-02, eta: 0:21:31, time: 0.768, data_time: 0.033, memory: 11882, loss_rpn_cls: 0.0030, loss_rpn_bbox: 0.0341, loss_cls: 0.0343, acc: 98.5381, loss_bbox: 0.0828, loss: 0.1542
2020-11-20 02:20:47,779 - mmdet - INFO - Epoch [2][200/621]	lr: 1.000e-02, eta: 0:20:20, time: 0.746, data_time: 0.012, memory: 11882, loss_rpn_cls: 0.0031, loss_rpn_bbox: 0.0344, loss_cls: 0.0352, acc: 98.5000, loss_bbox: 0.0827, loss: 0.1555
2020-11-20 02:22:02,620 - mmdet - INFO - Epoch [2][300/621]	lr: 1.000e-02, eta: 0:19:09, time: 0.748, data_time: 0.012, memory: 11882, loss_rpn_cls: 0.0032, loss_rpn_bbox: 0.0402, loss_cls: 0.0383, acc: 98.4473, loss_bbox: 0.0976, loss: 0.1794
2020-11-20 02:23:17,524 - mmdet - INFO - Epoch [2][400/621]	lr: 1.000e-02, eta: 0:17:58, time: 0.749, data_time: 0.012, memory: 11908, loss_rpn_cls: 0.0040, loss_rpn_bbox: 0.0369, loss_cls: 0.0397, acc: 98.3926, loss_bbox: 0.0870, loss: 0.1675
2020-11-20 02:24:32,512 - mmdet - INFO - Epoch [2][500/621]	lr: 1.000e-02, eta: 0:16:45, time: 0.750, data_time: 0.012, memory: 11908, loss_rpn_cls: 0.0047, loss_rpn_bbox: 0.0410, loss_cls: 0.0473, acc: 98.0879, loss_bbox: 0.0962, loss: 0.1893
2020-11-20 02:25:47,278 - mmdet - INFO - Epoch [2][600/621]	lr: 1.000e-02, eta: 0:15:33, time: 0.748, data_time: 0.012, memory: 11908, loss_rpn_cls: 0.0031, loss_rpn_bbox: 0.0367, loss_cls: 0.0392, acc: 98.4072, loss_bbox: 0.0893, loss: 0.1682
2020-11-20 02:26:27,085 - mmdet - INFO - Evaluating bbox...
2020-11-20 02:26:29,835 - mmdet - INFO - Epoch [2][621/621]	lr: 1.000e-02, bbox_mAP: 0.7910, bbox_mAP_50: 0.8640, bbox_mAP_75: 0.8410, bbox_mAP_s: 0.4820, bbox_mAP_m: 0.7860, bbox_mAP_l: 0.8820, bbox_mAP_copypaste: 0.791 0.864 0.841 0.482 0.786 0.882
2020-11-20 02:27:00,014 - mmdet - INFO - Epoch(train) [2][75]	loss_rpn_cls: 0.0058, loss_rpn_bbox: 0.0397, loss_cls: 0.0497, acc: 97.9349, loss_bbox: 0.0943, loss: 0.1895
2020-11-20 02:28:17,096 - mmdet - INFO - Epoch [3][100/621]	lr: 1.000e-02, eta: 0:13:53, time: 0.769, data_time: 0.034, memory: 11908, loss_rpn_cls: 0.0030, loss_rpn_bbox: 0.0347, loss_cls: 0.0362, acc: 98.4785, loss_bbox: 0.0831, loss: 0.1570
2020-11-20 02:29:31,637 - mmdet - INFO - Epoch [3][200/621]	lr: 1.000e-02, eta: 0:12:41, time: 0.745, data_time: 0.012, memory: 11908, loss_rpn_cls: 0.0033, loss_rpn_bbox: 0.0388, loss_cls: 0.0384, acc: 98.4219, loss_bbox: 0.0955, loss: 0.1760
2020-11-20 02:30:46,363 - mmdet - INFO - Epoch [3][300/621]	lr: 1.000e-02, eta: 0:11:29, time: 0.747, data_time: 0.012, memory: 11908, loss_rpn_cls: 0.0042, loss_rpn_bbox: 0.0392, loss_cls: 0.0397, acc: 98.3730, loss_bbox: 0.0939, loss: 0.1770
2020-11-20 02:32:01,305 - mmdet - INFO - Epoch [3][400/621]	lr: 1.000e-02, eta: 0:10:16, time: 0.749, data_time: 0.013, memory: 11908, loss_rpn_cls: 0.0040, loss_rpn_bbox: 0.0415, loss_cls: 0.0443, acc: 98.1875, loss_bbox: 0.0977, loss: 0.1874
2020-11-20 02:33:16,080 - mmdet - INFO - Epoch [3][500/621]	lr: 1.000e-02, eta: 0:09:04, time: 0.748, data_time: 0.012, memory: 11908, loss_rpn_cls: 0.0050, loss_rpn_bbox: 0.0443, loss_cls: 0.0503, acc: 97.9150, loss_bbox: 0.1107, loss: 0.2103
2020-11-20 02:34:30,986 - mmdet - INFO - Epoch [3][600/621]	lr: 1.000e-02, eta: 0:07:51, time: 0.749, data_time: 0.012, memory: 11908, loss_rpn_cls: 0.0045, loss_rpn_bbox: 0.0362, loss_cls: 0.0383, acc: 98.4717, loss_bbox: 0.0872, loss: 0.1662
2020-11-20 02:35:10,709 - mmdet - INFO - Evaluating bbox...
2020-11-20 02:35:13,461 - mmdet - INFO - Epoch [3][621/621]	lr: 1.000e-02, bbox_mAP: 0.7930, bbox_mAP_50: 0.8660, bbox_mAP_75: 0.8460, bbox_mAP_s: 0.4780, bbox_mAP_m: 0.7920, bbox_mAP_l: 0.8850, bbox_mAP_copypaste: 0.793 0.866 0.846 0.478 0.792 0.885
2020-11-20 02:36:30,719 - mmdet - INFO - Epoch [4][100/621]	lr: 1.000e-02, eta: 0:06:19, time: 0.771, data_time: 0.034, memory: 11908, loss_rpn_cls: 0.0032, loss_rpn_bbox: 0.0373, loss_cls: 0.0384, acc: 98.4551, loss_bbox: 0.0919, loss: 0.1708
2020-11-20 02:37:45,736 - mmdet - INFO - Epoch [4][200/621]	lr: 1.000e-02, eta: 0:05:07, time: 0.750, data_time: 0.012, memory: 11908, loss_rpn_cls: 0.0042, loss_rpn_bbox: 0.0368, loss_cls: 0.0438, acc: 98.1562, loss_bbox: 0.0926, loss: 0.1774
2020-11-20 02:39:00,580 - mmdet - INFO - Epoch [4][300/621]	lr: 1.000e-02, eta: 0:03:54, time: 0.748, data_time: 0.012, memory: 11908, loss_rpn_cls: 0.0035, loss_rpn_bbox: 0.0369, loss_cls: 0.0362, acc: 98.4775, loss_bbox: 0.0907, loss: 0.1672
2020-11-20 02:40:15,441 - mmdet - INFO - Epoch [4][400/621]	lr: 1.000e-02, eta: 0:02:41, time: 0.749, data_time: 0.012, memory: 11908, loss_rpn_cls: 0.0039, loss_rpn_bbox: 0.0426, loss_cls: 0.0482, acc: 98.0508, loss_bbox: 0.0987, loss: 0.1933
2020-11-20 02:41:30,247 - mmdet - INFO - Epoch [4][500/621]	lr: 1.000e-02, eta: 0:01:28, time: 0.748, data_time: 0.013, memory: 11908, loss_rpn_cls: 0.0042, loss_rpn_bbox: 0.0402, loss_cls: 0.0408, acc: 98.3662, loss_bbox: 0.0942, loss: 0.1794
2020-11-20 02:42:45,623 - mmdet - INFO - Epoch [4][600/621]	lr: 1.000e-02, eta: 0:00:15, time: 0.754, data_time: 0.012, memory: 11908, loss_rpn_cls: 0.0048, loss_rpn_bbox: 0.0415, loss_cls: 0.0395, acc: 98.2832, loss_bbox: 0.0930, loss: 0.1788
2020-11-20 02:43:01,226 - mmdet - INFO - Saving checkpoint at 4 epochs
2020-11-20 02:43:27,701 - mmdet - INFO - Evaluating bbox...
2020-11-20 02:43:30,544 - mmdet - INFO - Epoch [4][621/621]	lr: 1.000e-02, bbox_mAP: 0.7930, bbox_mAP_50: 0.8700, bbox_mAP_75: 0.8470, bbox_mAP_s: 0.4770, bbox_mAP_m: 0.7730, bbox_mAP_l: 0.8900, bbox_mAP_copypaste: 0.793 0.870 0.847 0.477 0.773 0.890
2020-11-20 02:44:00,871 - mmdet - INFO - Epoch(train) [4][75]	loss_rpn_cls: 0.0044, loss_rpn_bbox: 0.0371, loss_cls: 0.0487, acc: 97.9740, loss_bbox: 0.0986, loss: 0.1890
