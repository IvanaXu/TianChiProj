2020-11-22 21:42:40,009 - mmdet - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.6.4 |Anaconda, Inc.| (default, Jan 16 2018, 18:10:19) [GCC 7.2.0]
CUDA available: True
CUDA_HOME: /usr/local/cuda
NVCC: Cuda compilation tools, release 10.0, V10.0.130
GPU 0: Tesla P100-PCIE-16GB
GCC: gcc (GCC) 5.3.0
PyTorch: 1.3.1+cu100
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - Intel(R) Math Kernel Library Version 2019.0.4 Product Build 20190411 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.20.5 (Git Hash 0125f28c61c1f822fd48570b4c1066f96fcb9b2e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CUDA Runtime 10.0
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.1
  - Build settings: BLAS=MKL, BUILD_NAMEDTENSOR=OFF, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Wno-stringop-overflow, DISABLE_NUMA=1, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=True, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

TorchVision: 0.4.2+cu100
OpenCV: 4.4.0
MMCV: 1.0.5
MMDetection: 2.3.0+788fa8d
MMDetection Compiler: GCC 7.3
MMDetection CUDA Compiler: 10.0
------------------------------------------------------------

2020-11-22 21:42:40,009 - mmdet - INFO - Distributed training: False
2020-11-22 21:42:40,411 - mmdet - INFO - Config:
model = dict(
    type='FasterRCNN',
    pretrained='torchvision://resnet50',
    backbone=dict(
        type='ResNet',
        depth=50,
        num_stages=4,
        out_indices=(0, 1, 2, 3),
        frozen_stages=1,
        norm_cfg=dict(type='BN', requires_grad=True),
        norm_eval=True,
        style='pytorch'),
    neck=dict(
        type='FPN',
        in_channels=[256, 512, 1024, 2048],
        out_channels=256,
        num_outs=5),
    rpn_head=dict(
        type='RPNHead',
        in_channels=256,
        feat_channels=256,
        anchor_generator=dict(
            type='AnchorGenerator',
            scales=[8],
            ratios=[0.5, 1.0, 2.0],
            strides=[4, 8, 16, 32, 64]),
        bbox_coder=dict(
            type='DeltaXYWHBBoxCoder',
            target_means=[0.0, 0.0, 0.0, 0.0],
            target_stds=[1.0, 1.0, 1.0, 1.0]),
        loss_cls=dict(
            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),
        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),
    roi_head=dict(
        type='StandardRoIHead',
        bbox_roi_extractor=dict(
            type='SingleRoIExtractor',
            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),
            out_channels=256,
            featmap_strides=[4, 8, 16, 32]),
        bbox_head=dict(
            type='Shared2FCBBoxHead',
            in_channels=256,
            fc_out_channels=1024,
            roi_feat_size=7,
            num_classes=2,
            bbox_coder=dict(
                type='DeltaXYWHBBoxCoder',
                target_means=[0.0, 0.0, 0.0, 0.0],
                target_stds=[0.1, 0.1, 0.2, 0.2]),
            reg_class_agnostic=False,
            loss_cls=dict(
                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),
            loss_bbox=dict(type='L1Loss', loss_weight=1.0))))
train_cfg = dict(
    rpn=dict(
        assigner=dict(
            type='MaxIoUAssigner',
            pos_iou_thr=0.7,
            neg_iou_thr=0.3,
            min_pos_iou=0.3,
            match_low_quality=True,
            ignore_iof_thr=-1),
        sampler=dict(
            type='RandomSampler',
            num=256,
            pos_fraction=0.5,
            neg_pos_ub=-1,
            add_gt_as_proposals=False),
        allowed_border=-1,
        pos_weight=-1,
        debug=False),
    rpn_proposal=dict(
        nms_across_levels=False,
        nms_pre=2000,
        nms_post=1000,
        max_num=1000,
        nms_thr=0.7,
        min_bbox_size=0),
    rcnn=dict(
        assigner=dict(
            type='MaxIoUAssigner',
            pos_iou_thr=0.5,
            neg_iou_thr=0.5,
            min_pos_iou=0.5,
            match_low_quality=False,
            ignore_iof_thr=-1),
        sampler=dict(
            type='RandomSampler',
            num=512,
            pos_fraction=0.25,
            neg_pos_ub=-1,
            add_gt_as_proposals=True),
        pos_weight=-1,
        debug=False))
test_cfg = dict(
    rpn=dict(
        nms_across_levels=False,
        nms_pre=1000,
        nms_post=1000,
        max_num=1000,
        nms_thr=0.7,
        min_bbox_size=0),
    rcnn=dict(
        score_thr=0.05,
        nms=dict(type='nms', iou_threshold=0.5),
        max_per_img=100))
dataset_type = 'CocoDataset'
data_root = 'data/coco/'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(type='Resize', img_scale=(1550, 1550), keep_ratio=True),
    dict(type='RandomFlip', flip_ratio=0.5),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='Pad', size_divisor=32),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(1550, 1550),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=2,
    workers_per_gpu=2,
    train=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_trai.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(type='Resize', img_scale=(1550, 1550), keep_ratio=True),
            dict(type='RandomFlip', flip_ratio=0.5),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
        ]),
    val=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_test.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1550, 1550),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_vals.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1550, 1550),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
evaluation = dict(interval=1, metric='bbox')
optimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0001)
optimizer_config = dict(grad_clip=None)
lr_config = dict(
    policy='step',
    warmup='linear',
    warmup_iters=500,
    warmup_ratio=0.001,
    step=[8, 11])
total_epochs = 4
checkpoint_config = dict(interval=4)
log_config = dict(interval=100, hooks=[dict(type='TextLoggerHook')])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = '/home/admin/.cache/torch/checkpoints/X.pth'
resume_from = None
workflow = [('train', 2), ('val', 1)]
work_dir = '/home/admin/jupyter/SecurityAI_Round5/data/work'
gpu_ids = range(0, 1)

2020-11-22 21:42:40,912 - mmdet - INFO - load model from: torchvision://resnet50
2020-11-22 21:42:48,868 - mmdet - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: fc.weight, fc.bias

2020-11-22 21:42:59,335 - mmdet - INFO - load checkpoint from /home/admin/.cache/torch/checkpoints/X.pth
2020-11-22 21:43:06,158 - mmdet - INFO - Start running, host: admin@fuxilabor_labor0_S4_Odps_S96_dsw_prepaid_cnsh_838_2020112209220, work_dir: /home/admin/jupyter/SecurityAI_Round5/data/work
2020-11-22 21:43:06,159 - mmdet - INFO - workflow: [('train', 2), ('val', 1)], max: 4 epochs
2020-11-22 21:44:23,956 - mmdet - INFO - Epoch [1][100/619]	lr: 1.988e-03, eta: 0:30:43, time: 0.776, data_time: 0.033, memory: 10048, loss_rpn_cls: 0.0064, loss_rpn_bbox: 0.0364, loss_cls: 0.0502, acc: 97.9541, loss_bbox: 0.0982, loss: 0.1913
2020-11-22 21:45:38,905 - mmdet - INFO - Epoch [1][200/619]	lr: 3.986e-03, eta: 0:28:56, time: 0.749, data_time: 0.012, memory: 10048, loss_rpn_cls: 0.0048, loss_rpn_bbox: 0.0341, loss_cls: 0.0440, acc: 98.2461, loss_bbox: 0.0890, loss: 0.1720
2020-11-22 21:46:53,638 - mmdet - INFO - Epoch [1][300/619]	lr: 5.984e-03, eta: 0:27:28, time: 0.747, data_time: 0.012, memory: 10048, loss_rpn_cls: 0.0041, loss_rpn_bbox: 0.0358, loss_cls: 0.0423, acc: 98.2881, loss_bbox: 0.0866, loss: 0.1688
2020-11-22 21:48:08,214 - mmdet - INFO - Epoch [1][400/619]	lr: 7.982e-03, eta: 0:26:06, time: 0.746, data_time: 0.012, memory: 10048, loss_rpn_cls: 0.0032, loss_rpn_bbox: 0.0362, loss_cls: 0.0362, acc: 98.4834, loss_bbox: 0.0838, loss: 0.1594
2020-11-22 21:49:22,931 - mmdet - INFO - Epoch [1][500/619]	lr: 9.980e-03, eta: 0:24:48, time: 0.747, data_time: 0.012, memory: 10048, loss_rpn_cls: 0.0044, loss_rpn_bbox: 0.0379, loss_cls: 0.0363, acc: 98.5088, loss_bbox: 0.0858, loss: 0.1644
2020-11-22 21:50:37,986 - mmdet - INFO - Epoch [1][600/619]	lr: 1.000e-02, eta: 0:23:32, time: 0.751, data_time: 0.012, memory: 10048, loss_rpn_cls: 0.0047, loss_rpn_bbox: 0.0407, loss_cls: 0.0468, acc: 98.0811, loss_bbox: 0.1009, loss: 0.1930
2020-11-22 21:51:19,185 - mmdet - INFO - Evaluating bbox...
2020-11-22 21:51:23,020 - mmdet - INFO - Epoch [1][619/619]	lr: 1.000e-02, bbox_mAP: 0.7700, bbox_mAP_50: 0.8520, bbox_mAP_75: 0.8310, bbox_mAP_s: 0.4100, bbox_mAP_m: 0.7840, bbox_mAP_l: 0.8840, bbox_mAP_copypaste: 0.770 0.852 0.831 0.410 0.784 0.884
2020-11-22 21:52:40,065 - mmdet - INFO - Epoch [2][100/619]	lr: 1.000e-02, eta: 0:21:31, time: 0.768, data_time: 0.033, memory: 10048, loss_rpn_cls: 0.0058, loss_rpn_bbox: 0.0410, loss_cls: 0.0416, acc: 98.2891, loss_bbox: 0.0964, loss: 0.1848
2020-11-22 21:53:54,982 - mmdet - INFO - Epoch [2][200/619]	lr: 1.000e-02, eta: 0:20:20, time: 0.749, data_time: 0.012, memory: 10048, loss_rpn_cls: 0.0048, loss_rpn_bbox: 0.0395, loss_cls: 0.0464, acc: 98.0684, loss_bbox: 0.1002, loss: 0.1909
2020-11-22 21:55:09,684 - mmdet - INFO - Epoch [2][300/619]	lr: 1.000e-02, eta: 0:19:08, time: 0.747, data_time: 0.012, memory: 10048, loss_rpn_cls: 0.0034, loss_rpn_bbox: 0.0370, loss_cls: 0.0361, acc: 98.5215, loss_bbox: 0.0882, loss: 0.1647
2020-11-22 21:56:24,601 - mmdet - INFO - Epoch [2][400/619]	lr: 1.000e-02, eta: 0:17:56, time: 0.749, data_time: 0.012, memory: 10048, loss_rpn_cls: 0.0045, loss_rpn_bbox: 0.0417, loss_cls: 0.0416, acc: 98.3467, loss_bbox: 0.0940, loss: 0.1819
2020-11-22 21:57:39,262 - mmdet - INFO - Epoch [2][500/619]	lr: 1.000e-02, eta: 0:16:43, time: 0.747, data_time: 0.012, memory: 10048, loss_rpn_cls: 0.0045, loss_rpn_bbox: 0.0391, loss_cls: 0.0446, acc: 98.1250, loss_bbox: 0.0895, loss: 0.1777
2020-11-22 21:58:53,950 - mmdet - INFO - Epoch [2][600/619]	lr: 1.000e-02, eta: 0:15:30, time: 0.747, data_time: 0.012, memory: 10048, loss_rpn_cls: 0.0090, loss_rpn_bbox: 0.0444, loss_cls: 0.0581, acc: 97.6699, loss_bbox: 0.1045, loss: 0.2160
2020-11-22 21:59:34,991 - mmdet - INFO - Evaluating bbox...
2020-11-22 21:59:38,710 - mmdet - INFO - Epoch [2][619/619]	lr: 1.000e-02, bbox_mAP: 0.7480, bbox_mAP_50: 0.8340, bbox_mAP_75: 0.8030, bbox_mAP_s: 0.3740, bbox_mAP_m: 0.7480, bbox_mAP_l: 0.8610, bbox_mAP_copypaste: 0.748 0.834 0.803 0.374 0.748 0.861
2020-11-22 22:00:12,282 - mmdet - INFO - Epoch(train) [2][84]	loss_rpn_cls: 0.0089, loss_rpn_bbox: 0.0459, loss_cls: 0.0586, acc: 97.5109, loss_bbox: 0.1140, loss: 0.2274
2020-11-22 22:01:29,550 - mmdet - INFO - Epoch [3][100/619]	lr: 1.000e-02, eta: 0:13:53, time: 0.771, data_time: 0.034, memory: 10048, loss_rpn_cls: 0.0054, loss_rpn_bbox: 0.0426, loss_cls: 0.0452, acc: 98.1191, loss_bbox: 0.0940, loss: 0.1872
2020-11-22 22:02:44,605 - mmdet - INFO - Epoch [3][200/619]	lr: 1.000e-02, eta: 0:12:41, time: 0.751, data_time: 0.012, memory: 10048, loss_rpn_cls: 0.0057, loss_rpn_bbox: 0.0416, loss_cls: 0.0452, acc: 98.2188, loss_bbox: 0.1007, loss: 0.1932
2020-11-22 22:03:59,421 - mmdet - INFO - Epoch [3][300/619]	lr: 1.000e-02, eta: 0:11:28, time: 0.748, data_time: 0.012, memory: 10048, loss_rpn_cls: 0.0049, loss_rpn_bbox: 0.0379, loss_cls: 0.0472, acc: 98.0771, loss_bbox: 0.0929, loss: 0.1829
2020-11-22 22:05:14,319 - mmdet - INFO - Epoch [3][400/619]	lr: 1.000e-02, eta: 0:10:16, time: 0.749, data_time: 0.012, memory: 10048, loss_rpn_cls: 0.0083, loss_rpn_bbox: 0.0444, loss_cls: 0.0547, acc: 97.8037, loss_bbox: 0.1078, loss: 0.2151
2020-11-22 22:06:28,988 - mmdet - INFO - Epoch [3][500/619]	lr: 1.000e-02, eta: 0:09:03, time: 0.747, data_time: 0.012, memory: 10048, loss_rpn_cls: 0.0050, loss_rpn_bbox: 0.0407, loss_cls: 0.0429, acc: 98.2539, loss_bbox: 0.0902, loss: 0.1787
2020-11-22 22:07:43,837 - mmdet - INFO - Epoch [3][600/619]	lr: 1.000e-02, eta: 0:07:49, time: 0.748, data_time: 0.012, memory: 10048, loss_rpn_cls: 0.0046, loss_rpn_bbox: 0.0378, loss_cls: 0.0457, acc: 98.1045, loss_bbox: 0.0963, loss: 0.1845
2020-11-22 22:08:24,917 - mmdet - INFO - Evaluating bbox...
2020-11-22 22:08:28,463 - mmdet - INFO - Epoch [3][619/619]	lr: 1.000e-02, bbox_mAP: 0.7500, bbox_mAP_50: 0.8330, bbox_mAP_75: 0.8020, bbox_mAP_s: 0.3620, bbox_mAP_m: 0.7530, bbox_mAP_l: 0.8680, bbox_mAP_copypaste: 0.750 0.833 0.802 0.362 0.753 0.868
2020-11-22 22:09:45,735 - mmdet - INFO - Epoch [4][100/619]	lr: 1.000e-02, eta: 0:06:19, time: 0.771, data_time: 0.033, memory: 10048, loss_rpn_cls: 0.0044, loss_rpn_bbox: 0.0377, loss_cls: 0.0384, acc: 98.3994, loss_bbox: 0.0874, loss: 0.1679
2020-11-22 22:11:00,363 - mmdet - INFO - Epoch [4][200/619]	lr: 1.000e-02, eta: 0:05:06, time: 0.746, data_time: 0.012, memory: 10048, loss_rpn_cls: 0.0032, loss_rpn_bbox: 0.0369, loss_cls: 0.0357, acc: 98.5225, loss_bbox: 0.0910, loss: 0.1667
2020-11-22 22:12:15,457 - mmdet - INFO - Epoch [4][300/619]	lr: 1.000e-02, eta: 0:03:53, time: 0.751, data_time: 0.012, memory: 10074, loss_rpn_cls: 0.0033, loss_rpn_bbox: 0.0382, loss_cls: 0.0434, acc: 98.1465, loss_bbox: 0.0943, loss: 0.1792
2020-11-22 22:13:30,468 - mmdet - INFO - Epoch [4][400/619]	lr: 1.000e-02, eta: 0:02:40, time: 0.750, data_time: 0.012, memory: 10074, loss_rpn_cls: 0.0032, loss_rpn_bbox: 0.0360, loss_cls: 0.0385, acc: 98.4287, loss_bbox: 0.0916, loss: 0.1693
2020-11-22 22:14:45,184 - mmdet - INFO - Epoch [4][500/619]	lr: 1.000e-02, eta: 0:01:27, time: 0.747, data_time: 0.012, memory: 10074, loss_rpn_cls: 0.0032, loss_rpn_bbox: 0.0363, loss_cls: 0.0363, acc: 98.5645, loss_bbox: 0.0809, loss: 0.1567
2020-11-22 22:16:00,094 - mmdet - INFO - Epoch [4][600/619]	lr: 1.000e-02, eta: 0:00:13, time: 0.749, data_time: 0.012, memory: 10074, loss_rpn_cls: 0.0043, loss_rpn_bbox: 0.0396, loss_cls: 0.0477, acc: 97.9756, loss_bbox: 0.0982, loss: 0.1898
2020-11-22 22:16:14,241 - mmdet - INFO - Saving checkpoint at 4 epochs
2020-11-22 22:16:42,994 - mmdet - INFO - Evaluating bbox...
2020-11-22 22:16:46,524 - mmdet - INFO - Epoch [4][619/619]	lr: 1.000e-02, bbox_mAP: 0.7640, bbox_mAP_50: 0.8440, bbox_mAP_75: 0.8100, bbox_mAP_s: 0.3990, bbox_mAP_m: 0.7830, bbox_mAP_l: 0.8820, bbox_mAP_copypaste: 0.764 0.844 0.810 0.399 0.783 0.882
2020-11-22 22:17:20,183 - mmdet - INFO - Epoch(train) [4][84]	loss_rpn_cls: 0.0071, loss_rpn_bbox: 0.0461, loss_cls: 0.0535, acc: 97.7062, loss_bbox: 0.0991, loss: 0.2058
