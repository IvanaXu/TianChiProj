2020-11-22 02:00:33,792 - mmdet - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.6.4 |Anaconda, Inc.| (default, Jan 16 2018, 18:10:19) [GCC 7.2.0]
CUDA available: True
CUDA_HOME: /usr/local/cuda
NVCC: Cuda compilation tools, release 10.0, V10.0.130
GPU 0: Tesla P100-PCIE-16GB
GCC: gcc (GCC) 5.3.0
PyTorch: 1.3.1+cu100
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - Intel(R) Math Kernel Library Version 2019.0.4 Product Build 20190411 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.20.5 (Git Hash 0125f28c61c1f822fd48570b4c1066f96fcb9b2e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CUDA Runtime 10.0
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.1
  - Build settings: BLAS=MKL, BUILD_NAMEDTENSOR=OFF, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Wno-stringop-overflow, DISABLE_NUMA=1, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=True, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

TorchVision: 0.4.2+cu100
OpenCV: 4.4.0
MMCV: 1.0.5
MMDetection: 2.3.0+788fa8d
MMDetection Compiler: GCC 7.3
MMDetection CUDA Compiler: 10.0
------------------------------------------------------------

2020-11-22 02:00:33,792 - mmdet - INFO - Distributed training: False
2020-11-22 02:00:34,186 - mmdet - INFO - Config:
model = dict(
    type='FasterRCNN',
    pretrained='torchvision://resnet50',
    backbone=dict(
        type='ResNet',
        depth=50,
        num_stages=4,
        out_indices=(0, 1, 2, 3),
        frozen_stages=1,
        norm_cfg=dict(type='BN', requires_grad=True),
        norm_eval=True,
        style='pytorch'),
    neck=dict(
        type='FPN',
        in_channels=[256, 512, 1024, 2048],
        out_channels=256,
        num_outs=5),
    rpn_head=dict(
        type='RPNHead',
        in_channels=256,
        feat_channels=256,
        anchor_generator=dict(
            type='AnchorGenerator',
            scales=[8],
            ratios=[0.5, 1.0, 2.0],
            strides=[4, 8, 16, 32, 64]),
        bbox_coder=dict(
            type='DeltaXYWHBBoxCoder',
            target_means=[0.0, 0.0, 0.0, 0.0],
            target_stds=[1.0, 1.0, 1.0, 1.0]),
        loss_cls=dict(
            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),
        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),
    roi_head=dict(
        type='StandardRoIHead',
        bbox_roi_extractor=dict(
            type='SingleRoIExtractor',
            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),
            out_channels=256,
            featmap_strides=[4, 8, 16, 32]),
        bbox_head=dict(
            type='Shared2FCBBoxHead',
            in_channels=256,
            fc_out_channels=1024,
            roi_feat_size=7,
            num_classes=2,
            bbox_coder=dict(
                type='DeltaXYWHBBoxCoder',
                target_means=[0.0, 0.0, 0.0, 0.0],
                target_stds=[0.1, 0.1, 0.2, 0.2]),
            reg_class_agnostic=False,
            loss_cls=dict(
                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),
            loss_bbox=dict(type='L1Loss', loss_weight=1.0))))
train_cfg = dict(
    rpn=dict(
        assigner=dict(
            type='MaxIoUAssigner',
            pos_iou_thr=0.7,
            neg_iou_thr=0.3,
            min_pos_iou=0.3,
            match_low_quality=True,
            ignore_iof_thr=-1),
        sampler=dict(
            type='RandomSampler',
            num=256,
            pos_fraction=0.5,
            neg_pos_ub=-1,
            add_gt_as_proposals=False),
        allowed_border=-1,
        pos_weight=-1,
        debug=False),
    rpn_proposal=dict(
        nms_across_levels=False,
        nms_pre=2000,
        nms_post=1000,
        max_num=1000,
        nms_thr=0.7,
        min_bbox_size=0),
    rcnn=dict(
        assigner=dict(
            type='MaxIoUAssigner',
            pos_iou_thr=0.5,
            neg_iou_thr=0.5,
            min_pos_iou=0.5,
            match_low_quality=False,
            ignore_iof_thr=-1),
        sampler=dict(
            type='RandomSampler',
            num=512,
            pos_fraction=0.25,
            neg_pos_ub=-1,
            add_gt_as_proposals=True),
        pos_weight=-1,
        debug=False))
test_cfg = dict(
    rpn=dict(
        nms_across_levels=False,
        nms_pre=1000,
        nms_post=1000,
        max_num=1000,
        nms_thr=0.7,
        min_bbox_size=0),
    rcnn=dict(
        score_thr=0.05,
        nms=dict(type='nms', iou_threshold=0.5),
        max_per_img=100))
dataset_type = 'CocoDataset'
data_root = 'data/coco/'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(type='Resize', img_scale=(1550, 1550), keep_ratio=True),
    dict(type='RandomFlip', flip_ratio=0.5),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='Pad', size_divisor=32),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(1550, 1550),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=2,
    workers_per_gpu=2,
    train=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_trai.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(type='Resize', img_scale=(1550, 1550), keep_ratio=True),
            dict(type='RandomFlip', flip_ratio=0.5),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
        ]),
    val=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_test.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1550, 1550),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_vals.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1550, 1550),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
evaluation = dict(interval=1, metric='bbox')
optimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0001)
optimizer_config = dict(grad_clip=None)
lr_config = dict(
    policy='step',
    warmup='linear',
    warmup_iters=500,
    warmup_ratio=0.001,
    step=[8, 11])
total_epochs = 4
checkpoint_config = dict(interval=4)
log_config = dict(interval=100, hooks=[dict(type='TextLoggerHook')])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = '/home/admin/.cache/torch/checkpoints/X.pth'
resume_from = None
workflow = [('train', 2), ('val', 1)]
work_dir = '/home/admin/jupyter/SecurityAI_Round5/data/work'
gpu_ids = range(0, 1)

2020-11-22 02:00:34,698 - mmdet - INFO - load model from: torchvision://resnet50
2020-11-22 02:00:42,529 - mmdet - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: fc.weight, fc.bias

2020-11-22 02:00:52,742 - mmdet - INFO - load checkpoint from /home/admin/.cache/torch/checkpoints/X.pth
2020-11-22 02:00:59,592 - mmdet - INFO - Start running, host: admin@fuxilabor_labor0_S4_Odps_S96_dsw_prepaid_cnsh_838_2020112114585, work_dir: /home/admin/jupyter/SecurityAI_Round5/data/work
2020-11-22 02:00:59,592 - mmdet - INFO - workflow: [('train', 2), ('val', 1)], max: 4 epochs
2020-11-22 02:02:16,848 - mmdet - INFO - Epoch [1][100/621]	lr: 1.988e-03, eta: 0:30:37, time: 0.771, data_time: 0.033, memory: 8026, loss_rpn_cls: 0.0031, loss_rpn_bbox: 0.0281, loss_cls: 0.0325, acc: 98.7266, loss_bbox: 0.0657, loss: 0.1294
2020-11-22 02:03:31,554 - mmdet - INFO - Epoch [1][200/621]	lr: 3.986e-03, eta: 0:28:53, time: 0.747, data_time: 0.013, memory: 8834, loss_rpn_cls: 0.0016, loss_rpn_bbox: 0.0233, loss_cls: 0.0265, acc: 98.8867, loss_bbox: 0.0612, loss: 0.1126
2020-11-22 02:04:46,339 - mmdet - INFO - Epoch [1][300/621]	lr: 5.984e-03, eta: 0:27:29, time: 0.748, data_time: 0.012, memory: 11887, loss_rpn_cls: 0.0024, loss_rpn_bbox: 0.0269, loss_cls: 0.0356, acc: 98.4277, loss_bbox: 0.0716, loss: 0.1365
2020-11-22 02:06:01,051 - mmdet - INFO - Epoch [1][400/621]	lr: 7.982e-03, eta: 0:26:09, time: 0.747, data_time: 0.012, memory: 11887, loss_rpn_cls: 0.0025, loss_rpn_bbox: 0.0264, loss_cls: 0.0333, acc: 98.6055, loss_bbox: 0.0728, loss: 0.1349
2020-11-22 02:07:15,898 - mmdet - INFO - Epoch [1][500/621]	lr: 9.980e-03, eta: 0:24:52, time: 0.748, data_time: 0.012, memory: 11887, loss_rpn_cls: 0.0021, loss_rpn_bbox: 0.0294, loss_cls: 0.0350, acc: 98.4395, loss_bbox: 0.0769, loss: 0.1433
2020-11-22 02:08:30,605 - mmdet - INFO - Epoch [1][600/621]	lr: 1.000e-02, eta: 0:23:35, time: 0.747, data_time: 0.012, memory: 11887, loss_rpn_cls: 0.0030, loss_rpn_bbox: 0.0334, loss_cls: 0.0353, acc: 98.5498, loss_bbox: 0.0862, loss: 0.1580
2020-11-22 02:09:11,246 - mmdet - INFO - Evaluating bbox...
2020-11-22 02:09:13,889 - mmdet - INFO - Epoch [1][621/621]	lr: 1.000e-02, bbox_mAP: 0.8120, bbox_mAP_50: 0.8840, bbox_mAP_75: 0.8740, bbox_mAP_s: 0.5540, bbox_mAP_m: 0.8450, bbox_mAP_l: 0.8930, bbox_mAP_copypaste: 0.812 0.884 0.874 0.554 0.845 0.893
2020-11-22 02:10:30,878 - mmdet - INFO - Epoch [2][100/621]	lr: 1.000e-02, eta: 0:21:30, time: 0.768, data_time: 0.033, memory: 11887, loss_rpn_cls: 0.0024, loss_rpn_bbox: 0.0307, loss_cls: 0.0323, acc: 98.6221, loss_bbox: 0.0738, loss: 0.1392
2020-11-22 02:11:45,483 - mmdet - INFO - Epoch [2][200/621]	lr: 1.000e-02, eta: 0:20:19, time: 0.746, data_time: 0.012, memory: 11887, loss_rpn_cls: 0.0032, loss_rpn_bbox: 0.0299, loss_cls: 0.0314, acc: 98.7168, loss_bbox: 0.0747, loss: 0.1393
2020-11-22 02:12:59,989 - mmdet - INFO - Epoch [2][300/621]	lr: 1.000e-02, eta: 0:19:08, time: 0.745, data_time: 0.012, memory: 11887, loss_rpn_cls: 0.0032, loss_rpn_bbox: 0.0284, loss_cls: 0.0326, acc: 98.6797, loss_bbox: 0.0742, loss: 0.1383
2020-11-22 02:14:14,457 - mmdet - INFO - Epoch [2][400/621]	lr: 1.000e-02, eta: 0:17:56, time: 0.745, data_time: 0.012, memory: 11887, loss_rpn_cls: 0.0028, loss_rpn_bbox: 0.0302, loss_cls: 0.0285, acc: 98.7949, loss_bbox: 0.0728, loss: 0.1344
2020-11-22 02:15:29,482 - mmdet - INFO - Epoch [2][500/621]	lr: 1.000e-02, eta: 0:16:44, time: 0.750, data_time: 0.012, memory: 11887, loss_rpn_cls: 0.0054, loss_rpn_bbox: 0.0386, loss_cls: 0.0518, acc: 97.7939, loss_bbox: 0.0955, loss: 0.1913
2020-11-22 02:16:44,011 - mmdet - INFO - Epoch [2][600/621]	lr: 1.000e-02, eta: 0:15:31, time: 0.745, data_time: 0.012, memory: 11887, loss_rpn_cls: 0.0043, loss_rpn_bbox: 0.0354, loss_cls: 0.0386, acc: 98.4385, loss_bbox: 0.0872, loss: 0.1655
2020-11-22 02:17:24,728 - mmdet - INFO - Evaluating bbox...
2020-11-22 02:17:27,432 - mmdet - INFO - Epoch [2][621/621]	lr: 1.000e-02, bbox_mAP: 0.7870, bbox_mAP_50: 0.8630, bbox_mAP_75: 0.8480, bbox_mAP_s: 0.5240, bbox_mAP_m: 0.8180, bbox_mAP_l: 0.8710, bbox_mAP_copypaste: 0.787 0.863 0.848 0.524 0.818 0.871
2020-11-22 02:17:58,588 - mmdet - INFO - Epoch(train) [2][78]	loss_rpn_cls: 0.0047, loss_rpn_bbox: 0.0381, loss_cls: 0.0389, acc: 98.4075, loss_bbox: 0.0884, loss: 0.1701
2020-11-22 02:19:15,578 - mmdet - INFO - Epoch [3][100/621]	lr: 1.000e-02, eta: 0:13:51, time: 0.768, data_time: 0.033, memory: 11912, loss_rpn_cls: 0.0034, loss_rpn_bbox: 0.0372, loss_cls: 0.0387, acc: 98.4102, loss_bbox: 0.0812, loss: 0.1604
2020-11-22 02:20:30,320 - mmdet - INFO - Epoch [3][200/621]	lr: 1.000e-02, eta: 0:12:40, time: 0.747, data_time: 0.012, memory: 11912, loss_rpn_cls: 0.0031, loss_rpn_bbox: 0.0360, loss_cls: 0.0403, acc: 98.2764, loss_bbox: 0.0924, loss: 0.1718
2020-11-22 02:21:45,070 - mmdet - INFO - Epoch [3][300/621]	lr: 1.000e-02, eta: 0:11:28, time: 0.747, data_time: 0.012, memory: 11912, loss_rpn_cls: 0.0035, loss_rpn_bbox: 0.0341, loss_cls: 0.0332, acc: 98.6660, loss_bbox: 0.0829, loss: 0.1536
2020-11-22 02:22:59,540 - mmdet - INFO - Epoch [3][400/621]	lr: 1.000e-02, eta: 0:10:16, time: 0.745, data_time: 0.012, memory: 11912, loss_rpn_cls: 0.0038, loss_rpn_bbox: 0.0335, loss_cls: 0.0374, acc: 98.4199, loss_bbox: 0.0791, loss: 0.1538
2020-11-22 02:24:13,982 - mmdet - INFO - Epoch [3][500/621]	lr: 1.000e-02, eta: 0:09:03, time: 0.744, data_time: 0.012, memory: 11912, loss_rpn_cls: 0.0040, loss_rpn_bbox: 0.0325, loss_cls: 0.0363, acc: 98.5117, loss_bbox: 0.0754, loss: 0.1481
2020-11-22 02:25:28,287 - mmdet - INFO - Epoch [3][600/621]	lr: 1.000e-02, eta: 0:07:50, time: 0.743, data_time: 0.012, memory: 11912, loss_rpn_cls: 0.0033, loss_rpn_bbox: 0.0329, loss_cls: 0.0353, acc: 98.5605, loss_bbox: 0.0807, loss: 0.1522
2020-11-22 02:26:08,956 - mmdet - INFO - Evaluating bbox...
2020-11-22 02:26:11,820 - mmdet - INFO - Epoch [3][621/621]	lr: 1.000e-02, bbox_mAP: 0.7840, bbox_mAP_50: 0.8610, bbox_mAP_75: 0.8410, bbox_mAP_s: 0.5170, bbox_mAP_m: 0.7900, bbox_mAP_l: 0.8710, bbox_mAP_copypaste: 0.784 0.861 0.841 0.517 0.790 0.871
2020-11-22 02:27:28,904 - mmdet - INFO - Epoch [4][100/621]	lr: 1.000e-02, eta: 0:06:18, time: 0.767, data_time: 0.033, memory: 11912, loss_rpn_cls: 0.0103, loss_rpn_bbox: 0.0382, loss_cls: 0.0532, acc: 97.9414, loss_bbox: 0.0923, loss: 0.1940
2020-11-22 02:28:43,483 - mmdet - INFO - Epoch [4][200/621]	lr: 1.000e-02, eta: 0:05:06, time: 0.746, data_time: 0.012, memory: 11912, loss_rpn_cls: 0.0070, loss_rpn_bbox: 0.0374, loss_cls: 0.0451, acc: 98.2197, loss_bbox: 0.0930, loss: 0.1825
2020-11-22 02:29:57,970 - mmdet - INFO - Epoch [4][300/621]	lr: 1.000e-02, eta: 0:03:53, time: 0.745, data_time: 0.012, memory: 11912, loss_rpn_cls: 0.0093, loss_rpn_bbox: 0.0391, loss_cls: 0.0450, acc: 98.2920, loss_bbox: 0.0831, loss: 0.1765
2020-11-22 02:31:12,785 - mmdet - INFO - Epoch [4][400/621]	lr: 1.000e-02, eta: 0:02:41, time: 0.748, data_time: 0.012, memory: 11912, loss_rpn_cls: 0.0846, loss_rpn_bbox: 0.0709, loss_cls: 0.1083, acc: 96.2676, loss_bbox: 0.1118, loss: 0.3756
2020-11-22 02:32:27,648 - mmdet - INFO - Epoch [4][500/621]	lr: 1.000e-02, eta: 0:01:28, time: 0.749, data_time: 0.012, memory: 11912, loss_rpn_cls: 0.0211, loss_rpn_bbox: 0.0549, loss_cls: 0.0796, acc: 96.9346, loss_bbox: 0.1203, loss: 0.2760
2020-11-22 02:33:41,984 - mmdet - INFO - Epoch [4][600/621]	lr: 1.000e-02, eta: 0:00:15, time: 0.743, data_time: 0.012, memory: 11912, loss_rpn_cls: 0.0262, loss_rpn_bbox: 0.0533, loss_cls: 0.0843, acc: 96.7773, loss_bbox: 0.1131, loss: 0.2768
2020-11-22 02:33:57,868 - mmdet - INFO - Saving checkpoint at 4 epochs
2020-11-22 02:34:25,300 - mmdet - INFO - Evaluating bbox...
2020-11-22 02:34:28,574 - mmdet - INFO - Epoch [4][621/621]	lr: 1.000e-02, bbox_mAP: 0.7220, bbox_mAP_50: 0.8200, bbox_mAP_75: 0.7830, bbox_mAP_s: 0.3730, bbox_mAP_m: 0.6670, bbox_mAP_l: 0.8140, bbox_mAP_copypaste: 0.722 0.820 0.783 0.373 0.667 0.814
2020-11-22 02:34:59,775 - mmdet - INFO - Epoch(train) [4][78]	loss_rpn_cls: 0.0325, loss_rpn_bbox: 0.0517, loss_cls: 0.0766, acc: 97.0615, loss_bbox: 0.1181, loss: 0.2788
