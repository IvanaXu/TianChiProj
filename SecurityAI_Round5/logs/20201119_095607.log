2020-11-19 09:56:08,128 - mmdet - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.6.4 |Anaconda, Inc.| (default, Jan 16 2018, 18:10:19) [GCC 7.2.0]
CUDA available: True
CUDA_HOME: /usr/local/cuda
NVCC: Cuda compilation tools, release 10.0, V10.0.130
GPU 0: Tesla P100-PCIE-16GB
GCC: gcc (GCC) 5.3.0
PyTorch: 1.3.1+cu100
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - Intel(R) Math Kernel Library Version 2019.0.4 Product Build 20190411 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.20.5 (Git Hash 0125f28c61c1f822fd48570b4c1066f96fcb9b2e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CUDA Runtime 10.0
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.1
  - Build settings: BLAS=MKL, BUILD_NAMEDTENSOR=OFF, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Wno-stringop-overflow, DISABLE_NUMA=1, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=True, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

TorchVision: 0.4.2+cu100
OpenCV: 4.4.0
MMCV: 1.0.5
MMDetection: 2.3.0+788fa8d
MMDetection Compiler: GCC 7.3
MMDetection CUDA Compiler: 10.0
------------------------------------------------------------

2020-11-19 09:56:08,128 - mmdet - INFO - Distributed training: False
2020-11-19 09:56:08,570 - mmdet - INFO - Config:
model = dict(
    type='FasterRCNN',
    pretrained='torchvision://resnet50',
    backbone=dict(
        type='ResNet',
        depth=50,
        num_stages=4,
        out_indices=(0, 1, 2, 3),
        frozen_stages=1,
        norm_cfg=dict(type='BN', requires_grad=True),
        norm_eval=True,
        style='pytorch'),
    neck=dict(
        type='FPN',
        in_channels=[256, 512, 1024, 2048],
        out_channels=256,
        num_outs=5),
    rpn_head=dict(
        type='RPNHead',
        in_channels=256,
        feat_channels=256,
        anchor_generator=dict(
            type='AnchorGenerator',
            scales=[8],
            ratios=[0.5, 1.0, 2.0],
            strides=[4, 8, 16, 32, 64]),
        bbox_coder=dict(
            type='DeltaXYWHBBoxCoder',
            target_means=[0.0, 0.0, 0.0, 0.0],
            target_stds=[1.0, 1.0, 1.0, 1.0]),
        loss_cls=dict(
            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),
        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),
    roi_head=dict(
        type='StandardRoIHead',
        bbox_roi_extractor=dict(
            type='SingleRoIExtractor',
            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),
            out_channels=256,
            featmap_strides=[4, 8, 16, 32]),
        bbox_head=dict(
            type='Shared2FCBBoxHead',
            in_channels=256,
            fc_out_channels=1024,
            roi_feat_size=7,
            num_classes=2,
            bbox_coder=dict(
                type='DeltaXYWHBBoxCoder',
                target_means=[0.0, 0.0, 0.0, 0.0],
                target_stds=[0.1, 0.1, 0.2, 0.2]),
            reg_class_agnostic=False,
            loss_cls=dict(
                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),
            loss_bbox=dict(type='L1Loss', loss_weight=1.0))))
train_cfg = dict(
    rpn=dict(
        assigner=dict(
            type='MaxIoUAssigner',
            pos_iou_thr=0.7,
            neg_iou_thr=0.3,
            min_pos_iou=0.3,
            match_low_quality=True,
            ignore_iof_thr=-1),
        sampler=dict(
            type='RandomSampler',
            num=256,
            pos_fraction=0.5,
            neg_pos_ub=-1,
            add_gt_as_proposals=False),
        allowed_border=-1,
        pos_weight=-1,
        debug=False),
    rpn_proposal=dict(
        nms_across_levels=False,
        nms_pre=2000,
        nms_post=1000,
        max_num=1000,
        nms_thr=0.7,
        min_bbox_size=0),
    rcnn=dict(
        assigner=dict(
            type='MaxIoUAssigner',
            pos_iou_thr=0.5,
            neg_iou_thr=0.5,
            min_pos_iou=0.5,
            match_low_quality=False,
            ignore_iof_thr=-1),
        sampler=dict(
            type='RandomSampler',
            num=512,
            pos_fraction=0.25,
            neg_pos_ub=-1,
            add_gt_as_proposals=True),
        pos_weight=-1,
        debug=False))
test_cfg = dict(
    rpn=dict(
        nms_across_levels=False,
        nms_pre=1000,
        nms_post=1000,
        max_num=1000,
        nms_thr=0.7,
        min_bbox_size=0),
    rcnn=dict(
        score_thr=0.05,
        nms=dict(type='nms', iou_threshold=0.5),
        max_per_img=100))
dataset_type = 'CocoDataset'
data_root = 'data/coco/'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(type='Resize', img_scale=(1550, 1550), keep_ratio=True),
    dict(type='RandomFlip', flip_ratio=0.5),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='Pad', size_divisor=32),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(1550, 1550),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=2,
    workers_per_gpu=2,
    train=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_trai.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(type='Resize', img_scale=(1550, 1550), keep_ratio=True),
            dict(type='RandomFlip', flip_ratio=0.5),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
        ]),
    val=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_test.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1550, 1550),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_vals.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1550, 1550),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
evaluation = dict(interval=1, metric='bbox')
optimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0001)
optimizer_config = dict(grad_clip=None)
lr_config = dict(
    policy='step',
    warmup='linear',
    warmup_iters=500,
    warmup_ratio=0.001,
    step=[8, 11])
total_epochs = 4
checkpoint_config = dict(interval=4)
log_config = dict(interval=100, hooks=[dict(type='TextLoggerHook')])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = '/home/admin/.cache/torch/checkpoints/X.pth'
resume_from = None
workflow = [('train', 2), ('val', 1)]
work_dir = '/home/admin/jupyter/SecurityAI_Round5/data/work'
gpu_ids = range(0, 1)

2020-11-19 09:56:09,074 - mmdet - INFO - load model from: torchvision://resnet50
2020-11-19 09:56:17,202 - mmdet - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: fc.weight, fc.bias

2020-11-19 09:56:27,894 - mmdet - INFO - load checkpoint from /home/admin/.cache/torch/checkpoints/X.pth
2020-11-19 09:56:34,641 - mmdet - INFO - Start running, host: admin@fuxilabor_labor0_S4_Odps_S96_dsw_prepaid_cnsh_838_2020111823124, work_dir: /home/admin/jupyter/SecurityAI_Round5/data/work
2020-11-19 09:56:34,641 - mmdet - INFO - workflow: [('train', 2), ('val', 1)], max: 4 epochs
2020-11-19 09:57:53,207 - mmdet - INFO - Epoch [1][100/622]	lr: 1.988e-03, eta: 0:31:11, time: 0.784, data_time: 0.034, memory: 8020, loss_rpn_cls: 0.0051, loss_rpn_bbox: 0.0388, loss_cls: 0.0413, acc: 98.2568, loss_bbox: 0.0944, loss: 0.1795
2020-11-19 09:59:09,365 - mmdet - INFO - Epoch [1][200/622]	lr: 3.986e-03, eta: 0:29:27, time: 0.762, data_time: 0.012, memory: 11883, loss_rpn_cls: 0.0063, loss_rpn_bbox: 0.0408, loss_cls: 0.0472, acc: 97.9961, loss_bbox: 0.1003, loss: 0.1946
2020-11-19 10:00:25,164 - mmdet - INFO - Epoch [1][300/622]	lr: 5.984e-03, eta: 0:27:59, time: 0.758, data_time: 0.012, memory: 11883, loss_rpn_cls: 0.0034, loss_rpn_bbox: 0.0337, loss_cls: 0.0336, acc: 98.6377, loss_bbox: 0.0824, loss: 0.1531
2020-11-19 10:01:41,268 - mmdet - INFO - Epoch [1][400/622]	lr: 7.982e-03, eta: 0:26:39, time: 0.761, data_time: 0.012, memory: 11883, loss_rpn_cls: 0.0035, loss_rpn_bbox: 0.0392, loss_cls: 0.0428, acc: 98.1982, loss_bbox: 0.0959, loss: 0.1814
2020-11-19 10:02:57,131 - mmdet - INFO - Epoch [1][500/622]	lr: 9.980e-03, eta: 0:25:20, time: 0.759, data_time: 0.013, memory: 11883, loss_rpn_cls: 0.0039, loss_rpn_bbox: 0.0412, loss_cls: 0.0425, acc: 98.2471, loss_bbox: 0.0976, loss: 0.1852
2020-11-19 10:04:12,744 - mmdet - INFO - Epoch [1][600/622]	lr: 1.000e-02, eta: 0:24:00, time: 0.756, data_time: 0.012, memory: 11883, loss_rpn_cls: 0.0064, loss_rpn_bbox: 0.0473, loss_cls: 0.0513, acc: 97.9648, loss_bbox: 0.1076, loss: 0.2125
2020-11-19 10:04:55,816 - mmdet - INFO - Evaluating bbox...
2020-11-19 10:04:58,525 - mmdet - INFO - Epoch [1][622/622]	lr: 1.000e-02, bbox_mAP: 0.7810, bbox_mAP_50: 0.8730, bbox_mAP_75: 0.8510, bbox_mAP_s: 0.4510, bbox_mAP_m: 0.7950, bbox_mAP_l: 0.8710, bbox_mAP_copypaste: 0.781 0.873 0.851 0.451 0.795 0.871
2020-11-19 10:06:16,370 - mmdet - INFO - Epoch [2][100/622]	lr: 1.000e-02, eta: 0:21:49, time: 0.776, data_time: 0.034, memory: 11883, loss_rpn_cls: 0.0032, loss_rpn_bbox: 0.0409, loss_cls: 0.0436, acc: 98.1562, loss_bbox: 0.1024, loss: 0.1901
2020-11-19 10:07:32,577 - mmdet - INFO - Epoch [2][200/622]	lr: 1.000e-02, eta: 0:20:39, time: 0.762, data_time: 0.013, memory: 11883, loss_rpn_cls: 0.0037, loss_rpn_bbox: 0.0434, loss_cls: 0.0421, acc: 98.2803, loss_bbox: 0.0975, loss: 0.1866
2020-11-19 10:08:48,341 - mmdet - INFO - Epoch [2][300/622]	lr: 1.000e-02, eta: 0:19:27, time: 0.758, data_time: 0.013, memory: 11883, loss_rpn_cls: 0.0056, loss_rpn_bbox: 0.0455, loss_cls: 0.0457, acc: 98.2002, loss_bbox: 0.0983, loss: 0.1950
2020-11-19 10:10:03,933 - mmdet - INFO - Epoch [2][400/622]	lr: 1.000e-02, eta: 0:18:14, time: 0.756, data_time: 0.012, memory: 11883, loss_rpn_cls: 0.0053, loss_rpn_bbox: 0.0443, loss_cls: 0.0529, acc: 97.8662, loss_bbox: 0.1123, loss: 0.2148
2020-11-19 10:11:20,761 - mmdet - INFO - Epoch [2][500/622]	lr: 1.000e-02, eta: 0:17:02, time: 0.768, data_time: 0.012, memory: 11908, loss_rpn_cls: 0.0037, loss_rpn_bbox: 0.0423, loss_cls: 0.0422, acc: 98.2412, loss_bbox: 0.1043, loss: 0.1925
2020-11-19 10:12:36,452 - mmdet - INFO - Epoch [2][600/622]	lr: 1.000e-02, eta: 0:15:48, time: 0.757, data_time: 0.012, memory: 11908, loss_rpn_cls: 0.0068, loss_rpn_bbox: 0.0488, loss_cls: 0.0571, acc: 97.5527, loss_bbox: 0.1138, loss: 0.2265
2020-11-19 10:13:19,628 - mmdet - INFO - Evaluating bbox...
2020-11-19 10:13:22,060 - mmdet - INFO - Epoch [2][622/622]	lr: 1.000e-02, bbox_mAP: 0.7890, bbox_mAP_50: 0.8680, bbox_mAP_75: 0.8470, bbox_mAP_s: 0.4550, bbox_mAP_m: 0.8040, bbox_mAP_l: 0.8750, bbox_mAP_copypaste: 0.789 0.868 0.847 0.455 0.804 0.875
2020-11-19 10:13:54,841 - mmdet - INFO - Epoch(train) [2][81]	loss_rpn_cls: 0.0041, loss_rpn_bbox: 0.0415, loss_cls: 0.0455, acc: 98.1518, loss_bbox: 0.0996, loss: 0.1906
2020-11-19 10:15:13,019 - mmdet - INFO - Epoch [3][100/622]	lr: 1.000e-02, eta: 0:14:05, time: 0.780, data_time: 0.034, memory: 11908, loss_rpn_cls: 0.0044, loss_rpn_bbox: 0.0439, loss_cls: 0.0542, acc: 97.6660, loss_bbox: 0.1158, loss: 0.2183
2020-11-19 10:16:28,747 - mmdet - INFO - Epoch [3][200/622]	lr: 1.000e-02, eta: 0:12:53, time: 0.757, data_time: 0.013, memory: 11908, loss_rpn_cls: 0.0040, loss_rpn_bbox: 0.0431, loss_cls: 0.0401, acc: 98.3066, loss_bbox: 0.0993, loss: 0.1864
2020-11-19 10:17:43,865 - mmdet - INFO - Epoch [3][300/622]	lr: 1.000e-02, eta: 0:11:39, time: 0.751, data_time: 0.012, memory: 11908, loss_rpn_cls: 0.0067, loss_rpn_bbox: 0.0412, loss_cls: 0.0475, acc: 98.0303, loss_bbox: 0.1060, loss: 0.2014
2020-11-19 10:18:59,156 - mmdet - INFO - Epoch [3][400/622]	lr: 1.000e-02, eta: 0:10:26, time: 0.753, data_time: 0.012, memory: 11908, loss_rpn_cls: 0.0044, loss_rpn_bbox: 0.0437, loss_cls: 0.0424, acc: 98.2539, loss_bbox: 0.0983, loss: 0.1887
2020-11-19 10:20:14,533 - mmdet - INFO - Epoch [3][500/622]	lr: 1.000e-02, eta: 0:09:12, time: 0.754, data_time: 0.013, memory: 11908, loss_rpn_cls: 0.0045, loss_rpn_bbox: 0.0435, loss_cls: 0.0447, acc: 98.0645, loss_bbox: 0.1092, loss: 0.2019
2020-11-19 10:21:29,710 - mmdet - INFO - Epoch [3][600/622]	lr: 1.000e-02, eta: 0:07:58, time: 0.752, data_time: 0.013, memory: 11908, loss_rpn_cls: 0.0039, loss_rpn_bbox: 0.0445, loss_cls: 0.0404, acc: 98.3086, loss_bbox: 0.0959, loss: 0.1846
2020-11-19 10:22:13,163 - mmdet - INFO - Evaluating bbox...
2020-11-19 10:22:15,618 - mmdet - INFO - Epoch [3][622/622]	lr: 1.000e-02, bbox_mAP: 0.7890, bbox_mAP_50: 0.8690, bbox_mAP_75: 0.8470, bbox_mAP_s: 0.4440, bbox_mAP_m: 0.8010, bbox_mAP_l: 0.8820, bbox_mAP_copypaste: 0.789 0.869 0.847 0.444 0.801 0.882
2020-11-19 10:23:33,414 - mmdet - INFO - Epoch [4][100/622]	lr: 1.000e-02, eta: 0:06:24, time: 0.776, data_time: 0.035, memory: 11908, loss_rpn_cls: 0.0072, loss_rpn_bbox: 0.0429, loss_cls: 0.0482, acc: 98.0625, loss_bbox: 0.1021, loss: 0.2004
2020-11-19 10:24:48,942 - mmdet - INFO - Epoch [4][200/622]	lr: 1.000e-02, eta: 0:05:11, time: 0.755, data_time: 0.013, memory: 11908, loss_rpn_cls: 0.0049, loss_rpn_bbox: 0.0406, loss_cls: 0.0444, acc: 98.2090, loss_bbox: 0.0999, loss: 0.1898
2020-11-19 10:26:04,021 - mmdet - INFO - Epoch [4][300/622]	lr: 1.000e-02, eta: 0:03:57, time: 0.751, data_time: 0.012, memory: 11908, loss_rpn_cls: 0.0090, loss_rpn_bbox: 0.0482, loss_cls: 0.0521, acc: 97.8467, loss_bbox: 0.1145, loss: 0.2239
2020-11-19 10:27:19,281 - mmdet - INFO - Epoch [4][400/622]	lr: 1.000e-02, eta: 0:02:43, time: 0.753, data_time: 0.012, memory: 11908, loss_rpn_cls: 0.0072, loss_rpn_bbox: 0.0450, loss_cls: 0.0505, acc: 97.8936, loss_bbox: 0.1110, loss: 0.2138
2020-11-19 10:28:34,995 - mmdet - INFO - Epoch [4][500/622]	lr: 1.000e-02, eta: 0:01:30, time: 0.757, data_time: 0.013, memory: 11908, loss_rpn_cls: 0.0054, loss_rpn_bbox: 0.0462, loss_cls: 0.0480, acc: 98.0693, loss_bbox: 0.1067, loss: 0.2062
2020-11-19 10:29:50,233 - mmdet - INFO - Epoch [4][600/622]	lr: 1.000e-02, eta: 0:00:16, time: 0.752, data_time: 0.012, memory: 11908, loss_rpn_cls: 0.0050, loss_rpn_bbox: 0.0423, loss_cls: 0.0455, acc: 98.0547, loss_bbox: 0.1090, loss: 0.2018
2020-11-19 10:30:07,064 - mmdet - INFO - Saving checkpoint at 4 epochs
2020-11-19 10:30:34,866 - mmdet - INFO - Evaluating bbox...
2020-11-19 10:30:37,532 - mmdet - INFO - Epoch [4][622/622]	lr: 1.000e-02, bbox_mAP: 0.7830, bbox_mAP_50: 0.8730, bbox_mAP_75: 0.8420, bbox_mAP_s: 0.4230, bbox_mAP_m: 0.7880, bbox_mAP_l: 0.8730, bbox_mAP_copypaste: 0.783 0.873 0.842 0.423 0.788 0.873
2020-11-19 10:31:10,444 - mmdet - INFO - Epoch(train) [4][81]	loss_rpn_cls: 0.0048, loss_rpn_bbox: 0.0449, loss_cls: 0.0474, acc: 98.0384, loss_bbox: 0.1045, loss: 0.2015
