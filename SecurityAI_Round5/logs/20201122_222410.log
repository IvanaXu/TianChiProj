2020-11-22 22:24:11,005 - mmdet - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.6.4 |Anaconda, Inc.| (default, Jan 16 2018, 18:10:19) [GCC 7.2.0]
CUDA available: True
CUDA_HOME: /usr/local/cuda
NVCC: Cuda compilation tools, release 10.0, V10.0.130
GPU 0: Tesla P100-PCIE-16GB
GCC: gcc (GCC) 5.3.0
PyTorch: 1.3.1+cu100
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - Intel(R) Math Kernel Library Version 2019.0.4 Product Build 20190411 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.20.5 (Git Hash 0125f28c61c1f822fd48570b4c1066f96fcb9b2e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CUDA Runtime 10.0
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.1
  - Build settings: BLAS=MKL, BUILD_NAMEDTENSOR=OFF, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Wno-stringop-overflow, DISABLE_NUMA=1, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=True, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

TorchVision: 0.4.2+cu100
OpenCV: 4.4.0
MMCV: 1.0.5
MMDetection: 2.3.0+788fa8d
MMDetection Compiler: GCC 7.3
MMDetection CUDA Compiler: 10.0
------------------------------------------------------------

2020-11-22 22:24:11,005 - mmdet - INFO - Distributed training: False
2020-11-22 22:24:11,405 - mmdet - INFO - Config:
model = dict(
    type='FasterRCNN',
    pretrained='torchvision://resnet50',
    backbone=dict(
        type='ResNet',
        depth=50,
        num_stages=4,
        out_indices=(0, 1, 2, 3),
        frozen_stages=1,
        norm_cfg=dict(type='BN', requires_grad=True),
        norm_eval=True,
        style='pytorch'),
    neck=dict(
        type='FPN',
        in_channels=[256, 512, 1024, 2048],
        out_channels=256,
        num_outs=5),
    rpn_head=dict(
        type='RPNHead',
        in_channels=256,
        feat_channels=256,
        anchor_generator=dict(
            type='AnchorGenerator',
            scales=[8],
            ratios=[0.5, 1.0, 2.0],
            strides=[4, 8, 16, 32, 64]),
        bbox_coder=dict(
            type='DeltaXYWHBBoxCoder',
            target_means=[0.0, 0.0, 0.0, 0.0],
            target_stds=[1.0, 1.0, 1.0, 1.0]),
        loss_cls=dict(
            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),
        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),
    roi_head=dict(
        type='StandardRoIHead',
        bbox_roi_extractor=dict(
            type='SingleRoIExtractor',
            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),
            out_channels=256,
            featmap_strides=[4, 8, 16, 32]),
        bbox_head=dict(
            type='Shared2FCBBoxHead',
            in_channels=256,
            fc_out_channels=1024,
            roi_feat_size=7,
            num_classes=2,
            bbox_coder=dict(
                type='DeltaXYWHBBoxCoder',
                target_means=[0.0, 0.0, 0.0, 0.0],
                target_stds=[0.1, 0.1, 0.2, 0.2]),
            reg_class_agnostic=False,
            loss_cls=dict(
                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),
            loss_bbox=dict(type='L1Loss', loss_weight=1.0))))
train_cfg = dict(
    rpn=dict(
        assigner=dict(
            type='MaxIoUAssigner',
            pos_iou_thr=0.7,
            neg_iou_thr=0.3,
            min_pos_iou=0.3,
            match_low_quality=True,
            ignore_iof_thr=-1),
        sampler=dict(
            type='RandomSampler',
            num=256,
            pos_fraction=0.5,
            neg_pos_ub=-1,
            add_gt_as_proposals=False),
        allowed_border=-1,
        pos_weight=-1,
        debug=False),
    rpn_proposal=dict(
        nms_across_levels=False,
        nms_pre=2000,
        nms_post=1000,
        max_num=1000,
        nms_thr=0.7,
        min_bbox_size=0),
    rcnn=dict(
        assigner=dict(
            type='MaxIoUAssigner',
            pos_iou_thr=0.5,
            neg_iou_thr=0.5,
            min_pos_iou=0.5,
            match_low_quality=False,
            ignore_iof_thr=-1),
        sampler=dict(
            type='RandomSampler',
            num=512,
            pos_fraction=0.25,
            neg_pos_ub=-1,
            add_gt_as_proposals=True),
        pos_weight=-1,
        debug=False))
test_cfg = dict(
    rpn=dict(
        nms_across_levels=False,
        nms_pre=1000,
        nms_post=1000,
        max_num=1000,
        nms_thr=0.7,
        min_bbox_size=0),
    rcnn=dict(
        score_thr=0.05,
        nms=dict(type='nms', iou_threshold=0.5),
        max_per_img=100))
dataset_type = 'CocoDataset'
data_root = 'data/coco/'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(type='Resize', img_scale=(1550, 1550), keep_ratio=True),
    dict(type='RandomFlip', flip_ratio=0.5),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='Pad', size_divisor=32),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(1550, 1550),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=2,
    workers_per_gpu=2,
    train=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_trai.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(type='Resize', img_scale=(1550, 1550), keep_ratio=True),
            dict(type='RandomFlip', flip_ratio=0.5),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
        ]),
    val=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_test.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1550, 1550),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_vals.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1550, 1550),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
evaluation = dict(interval=1, metric='bbox')
optimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0001)
optimizer_config = dict(grad_clip=None)
lr_config = dict(
    policy='step',
    warmup='linear',
    warmup_iters=500,
    warmup_ratio=0.001,
    step=[8, 11])
total_epochs = 4
checkpoint_config = dict(interval=4)
log_config = dict(interval=100, hooks=[dict(type='TextLoggerHook')])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = '/home/admin/.cache/torch/checkpoints/X.pth'
resume_from = None
workflow = [('train', 2), ('val', 1)]
work_dir = '/home/admin/jupyter/SecurityAI_Round5/data/work'
gpu_ids = range(0, 1)

2020-11-22 22:24:11,923 - mmdet - INFO - load model from: torchvision://resnet50
2020-11-22 22:24:20,111 - mmdet - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: fc.weight, fc.bias

2020-11-22 22:24:30,633 - mmdet - INFO - load checkpoint from /home/admin/.cache/torch/checkpoints/X.pth
2020-11-22 22:24:37,442 - mmdet - INFO - Start running, host: admin@fuxilabor_labor0_S4_Odps_S96_dsw_prepaid_cnsh_838_2020112209220, work_dir: /home/admin/jupyter/SecurityAI_Round5/data/work
2020-11-22 22:24:37,443 - mmdet - INFO - workflow: [('train', 2), ('val', 1)], max: 4 epochs
2020-11-22 22:25:54,824 - mmdet - INFO - Epoch [1][100/634]	lr: 1.988e-03, eta: 0:31:20, time: 0.772, data_time: 0.033, memory: 9992, loss_rpn_cls: 0.0035, loss_rpn_bbox: 0.0338, loss_cls: 0.0429, acc: 98.0781, loss_bbox: 0.0845, loss: 0.1647
2020-11-22 22:27:09,385 - mmdet - INFO - Epoch [1][200/634]	lr: 3.986e-03, eta: 0:29:32, time: 0.746, data_time: 0.012, memory: 9992, loss_rpn_cls: 0.0028, loss_rpn_bbox: 0.0273, loss_cls: 0.0308, acc: 98.7969, loss_bbox: 0.0735, loss: 0.1344
2020-11-22 22:28:24,282 - mmdet - INFO - Epoch [1][300/634]	lr: 5.984e-03, eta: 0:28:09, time: 0.749, data_time: 0.012, memory: 9992, loss_rpn_cls: 0.0024, loss_rpn_bbox: 0.0282, loss_cls: 0.0290, acc: 98.7734, loss_bbox: 0.0725, loss: 0.1321
2020-11-22 22:29:39,186 - mmdet - INFO - Epoch [1][400/634]	lr: 7.982e-03, eta: 0:26:50, time: 0.749, data_time: 0.012, memory: 10076, loss_rpn_cls: 0.0027, loss_rpn_bbox: 0.0337, loss_cls: 0.0318, acc: 98.6973, loss_bbox: 0.0794, loss: 0.1476
2020-11-22 22:30:54,042 - mmdet - INFO - Epoch [1][500/634]	lr: 9.980e-03, eta: 0:25:32, time: 0.749, data_time: 0.012, memory: 10076, loss_rpn_cls: 0.0045, loss_rpn_bbox: 0.0337, loss_cls: 0.0358, acc: 98.4990, loss_bbox: 0.0813, loss: 0.1553
2020-11-22 22:32:08,706 - mmdet - INFO - Epoch [1][600/634]	lr: 1.000e-02, eta: 0:24:15, time: 0.747, data_time: 0.012, memory: 10076, loss_rpn_cls: 0.0045, loss_rpn_bbox: 0.0353, loss_cls: 0.0340, acc: 98.6230, loss_bbox: 0.0846, loss: 0.1584
2020-11-22 22:32:58,468 - mmdet - INFO - Evaluating bbox...
2020-11-22 22:33:01,745 - mmdet - INFO - Epoch [1][634/634]	lr: 1.000e-02, bbox_mAP: 0.7750, bbox_mAP_50: 0.8520, bbox_mAP_75: 0.8320, bbox_mAP_s: 0.4600, bbox_mAP_m: 0.7700, bbox_mAP_l: 0.8870, bbox_mAP_copypaste: 0.775 0.852 0.832 0.460 0.770 0.887
2020-11-22 22:34:19,133 - mmdet - INFO - Epoch [2][100/634]	lr: 1.000e-02, eta: 0:21:36, time: 0.772, data_time: 0.033, memory: 10076, loss_rpn_cls: 0.0035, loss_rpn_bbox: 0.0374, loss_cls: 0.0381, acc: 98.3438, loss_bbox: 0.0877, loss: 0.1667
2020-11-22 22:35:33,760 - mmdet - INFO - Epoch [2][200/634]	lr: 1.000e-02, eta: 0:20:30, time: 0.746, data_time: 0.012, memory: 10076, loss_rpn_cls: 0.0038, loss_rpn_bbox: 0.0328, loss_cls: 0.0333, acc: 98.6211, loss_bbox: 0.0816, loss: 0.1515
2020-11-22 22:36:48,465 - mmdet - INFO - Epoch [2][300/634]	lr: 1.000e-02, eta: 0:19:22, time: 0.747, data_time: 0.012, memory: 10076, loss_rpn_cls: 0.0030, loss_rpn_bbox: 0.0359, loss_cls: 0.0358, acc: 98.4014, loss_bbox: 0.0764, loss: 0.1512
2020-11-22 22:38:03,423 - mmdet - INFO - Epoch [2][400/634]	lr: 1.000e-02, eta: 0:18:13, time: 0.750, data_time: 0.012, memory: 10076, loss_rpn_cls: 0.0031, loss_rpn_bbox: 0.0375, loss_cls: 0.0368, acc: 98.4805, loss_bbox: 0.0821, loss: 0.1595
2020-11-22 22:39:18,030 - mmdet - INFO - Epoch [2][500/634]	lr: 1.000e-02, eta: 0:17:02, time: 0.746, data_time: 0.012, memory: 10076, loss_rpn_cls: 0.0032, loss_rpn_bbox: 0.0314, loss_cls: 0.0280, acc: 98.8545, loss_bbox: 0.0726, loss: 0.1352
2020-11-22 22:40:32,809 - mmdet - INFO - Epoch [2][600/634]	lr: 1.000e-02, eta: 0:15:51, time: 0.748, data_time: 0.012, memory: 10076, loss_rpn_cls: 0.0035, loss_rpn_bbox: 0.0381, loss_cls: 0.0425, acc: 98.2246, loss_bbox: 0.0947, loss: 0.1788
2020-11-22 22:41:22,404 - mmdet - INFO - Evaluating bbox...
2020-11-22 22:41:25,619 - mmdet - INFO - Epoch [2][634/634]	lr: 1.000e-02, bbox_mAP: 0.7760, bbox_mAP_50: 0.8520, bbox_mAP_75: 0.8330, bbox_mAP_s: 0.4770, bbox_mAP_m: 0.7730, bbox_mAP_l: 0.8710, bbox_mAP_copypaste: 0.776 0.852 0.833 0.477 0.773 0.871
2020-11-22 22:41:56,444 - mmdet - INFO - Epoch(train) [2][75]	loss_rpn_cls: 0.0048, loss_rpn_bbox: 0.0414, loss_cls: 0.0509, acc: 97.8529, loss_bbox: 0.1003, loss: 0.1974
2020-11-22 22:43:13,688 - mmdet - INFO - Epoch [3][100/634]	lr: 1.000e-02, eta: 0:13:55, time: 0.770, data_time: 0.033, memory: 10076, loss_rpn_cls: 0.0030, loss_rpn_bbox: 0.0352, loss_cls: 0.0341, acc: 98.5498, loss_bbox: 0.0841, loss: 0.1565
2020-11-22 22:44:28,677 - mmdet - INFO - Epoch [3][200/634]	lr: 1.000e-02, eta: 0:12:46, time: 0.750, data_time: 0.012, memory: 10076, loss_rpn_cls: 0.0038, loss_rpn_bbox: 0.0351, loss_cls: 0.0356, acc: 98.5625, loss_bbox: 0.0780, loss: 0.1524
2020-11-22 22:45:43,688 - mmdet - INFO - Epoch [3][300/634]	lr: 1.000e-02, eta: 0:11:36, time: 0.750, data_time: 0.012, memory: 10076, loss_rpn_cls: 0.0038, loss_rpn_bbox: 0.0385, loss_cls: 0.0395, acc: 98.4023, loss_bbox: 0.0843, loss: 0.1661
2020-11-22 22:46:58,617 - mmdet - INFO - Epoch [3][400/634]	lr: 1.000e-02, eta: 0:10:26, time: 0.749, data_time: 0.012, memory: 10076, loss_rpn_cls: 0.0033, loss_rpn_bbox: 0.0349, loss_cls: 0.0370, acc: 98.4980, loss_bbox: 0.0857, loss: 0.1609
2020-11-22 22:48:13,500 - mmdet - INFO - Epoch [3][500/634]	lr: 1.000e-02, eta: 0:09:15, time: 0.749, data_time: 0.012, memory: 10076, loss_rpn_cls: 0.0040, loss_rpn_bbox: 0.0356, loss_cls: 0.0333, acc: 98.6299, loss_bbox: 0.0824, loss: 0.1553
2020-11-22 22:49:28,458 - mmdet - INFO - Epoch [3][600/634]	lr: 1.000e-02, eta: 0:08:04, time: 0.750, data_time: 0.012, memory: 10076, loss_rpn_cls: 0.0031, loss_rpn_bbox: 0.0387, loss_cls: 0.0375, acc: 98.4404, loss_bbox: 0.0857, loss: 0.1650
2020-11-22 22:50:18,191 - mmdet - INFO - Evaluating bbox...
2020-11-22 22:50:21,529 - mmdet - INFO - Epoch [3][634/634]	lr: 1.000e-02, bbox_mAP: 0.7800, bbox_mAP_50: 0.8520, bbox_mAP_75: 0.8320, bbox_mAP_s: 0.4690, bbox_mAP_m: 0.7780, bbox_mAP_l: 0.8850, bbox_mAP_copypaste: 0.780 0.852 0.832 0.469 0.778 0.885
2020-11-22 22:51:38,909 - mmdet - INFO - Epoch [4][100/634]	lr: 1.000e-02, eta: 0:06:21, time: 0.772, data_time: 0.033, memory: 10076, loss_rpn_cls: 0.0030, loss_rpn_bbox: 0.0380, loss_cls: 0.0377, acc: 98.3535, loss_bbox: 0.0922, loss: 0.1710
2020-11-22 22:52:53,790 - mmdet - INFO - Epoch [4][200/634]	lr: 1.000e-02, eta: 0:05:10, time: 0.749, data_time: 0.012, memory: 10076, loss_rpn_cls: 0.0025, loss_rpn_bbox: 0.0307, loss_cls: 0.0288, acc: 98.8086, loss_bbox: 0.0722, loss: 0.1342
2020-11-22 22:54:08,682 - mmdet - INFO - Epoch [4][300/634]	lr: 1.000e-02, eta: 0:03:59, time: 0.749, data_time: 0.012, memory: 10076, loss_rpn_cls: 0.0029, loss_rpn_bbox: 0.0349, loss_cls: 0.0305, acc: 98.7441, loss_bbox: 0.0770, loss: 0.1453
2020-11-22 22:55:23,572 - mmdet - INFO - Epoch [4][400/634]	lr: 1.000e-02, eta: 0:02:48, time: 0.749, data_time: 0.012, memory: 10076, loss_rpn_cls: 0.0027, loss_rpn_bbox: 0.0317, loss_cls: 0.0313, acc: 98.7119, loss_bbox: 0.0736, loss: 0.1392
2020-11-22 22:56:38,460 - mmdet - INFO - Epoch [4][500/634]	lr: 1.000e-02, eta: 0:01:36, time: 0.749, data_time: 0.012, memory: 10076, loss_rpn_cls: 0.0028, loss_rpn_bbox: 0.0319, loss_cls: 0.0392, acc: 98.3076, loss_bbox: 0.0807, loss: 0.1546
2020-11-22 22:57:53,414 - mmdet - INFO - Epoch [4][600/634]	lr: 1.000e-02, eta: 0:00:24, time: 0.750, data_time: 0.012, memory: 10076, loss_rpn_cls: 0.0028, loss_rpn_bbox: 0.0308, loss_cls: 0.0326, acc: 98.6914, loss_bbox: 0.0790, loss: 0.1452
2020-11-22 22:58:18,877 - mmdet - INFO - Saving checkpoint at 4 epochs
2020-11-22 22:58:44,887 - mmdet - INFO - Evaluating bbox...
2020-11-22 22:58:48,178 - mmdet - INFO - Epoch [4][634/634]	lr: 1.000e-02, bbox_mAP: 0.7800, bbox_mAP_50: 0.8480, bbox_mAP_75: 0.8320, bbox_mAP_s: 0.4630, bbox_mAP_m: 0.7930, bbox_mAP_l: 0.8780, bbox_mAP_copypaste: 0.780 0.848 0.832 0.463 0.793 0.878
2020-11-22 22:59:18,557 - mmdet - INFO - Epoch(train) [4][75]	loss_rpn_cls: 0.0076, loss_rpn_bbox: 0.0419, loss_cls: 0.0522, acc: 97.7773, loss_bbox: 0.0958, loss: 0.1975
