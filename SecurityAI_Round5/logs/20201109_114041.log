2020-11-09 11:40:42,408 - mmdet - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.6.4 |Anaconda, Inc.| (default, Jan 16 2018, 18:10:19) [GCC 7.2.0]
CUDA available: True
CUDA_HOME: /usr/local/cuda
NVCC: Cuda compilation tools, release 10.0, V10.0.130
GPU 0: Tesla P100-PCIE-16GB
GCC: gcc (GCC) 5.3.0
PyTorch: 1.3.1+cu100
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - Intel(R) Math Kernel Library Version 2019.0.4 Product Build 20190411 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.20.5 (Git Hash 0125f28c61c1f822fd48570b4c1066f96fcb9b2e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CUDA Runtime 10.0
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.1
  - Build settings: BLAS=MKL, BUILD_NAMEDTENSOR=OFF, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Wno-stringop-overflow, DISABLE_NUMA=1, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=True, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

TorchVision: 0.4.2+cu100
OpenCV: 4.4.0
MMCV: 1.0.5
MMDetection: 2.3.0+788fa8d
MMDetection Compiler: GCC 7.3
MMDetection CUDA Compiler: 10.0
------------------------------------------------------------

2020-11-09 11:40:42,408 - mmdet - INFO - Distributed training: False
2020-11-09 11:40:42,804 - mmdet - INFO - Config:
model = dict(
    type='FasterRCNN',
    pretrained='torchvision://resnet50',
    backbone=dict(
        type='ResNet',
        depth=50,
        num_stages=4,
        out_indices=(0, 1, 2, 3),
        frozen_stages=1,
        norm_cfg=dict(type='BN', requires_grad=True),
        norm_eval=True,
        style='pytorch'),
    neck=dict(
        type='FPN',
        in_channels=[256, 512, 1024, 2048],
        out_channels=256,
        num_outs=5),
    rpn_head=dict(
        type='RPNHead',
        in_channels=256,
        feat_channels=256,
        anchor_generator=dict(
            type='AnchorGenerator',
            scales=[8],
            ratios=[0.5, 1.0, 2.0],
            strides=[4, 8, 16, 32, 64]),
        bbox_coder=dict(
            type='DeltaXYWHBBoxCoder',
            target_means=[0.0, 0.0, 0.0, 0.0],
            target_stds=[1.0, 1.0, 1.0, 1.0]),
        loss_cls=dict(
            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),
        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),
    roi_head=dict(
        type='StandardRoIHead',
        bbox_roi_extractor=dict(
            type='SingleRoIExtractor',
            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),
            out_channels=256,
            featmap_strides=[4, 8, 16, 32]),
        bbox_head=dict(
            type='Shared2FCBBoxHead',
            in_channels=256,
            fc_out_channels=1024,
            roi_feat_size=7,
            num_classes=2,
            bbox_coder=dict(
                type='DeltaXYWHBBoxCoder',
                target_means=[0.0, 0.0, 0.0, 0.0],
                target_stds=[0.1, 0.1, 0.2, 0.2]),
            reg_class_agnostic=False,
            loss_cls=dict(
                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),
            loss_bbox=dict(type='L1Loss', loss_weight=1.0))))
train_cfg = dict(
    rpn=dict(
        assigner=dict(
            type='MaxIoUAssigner',
            pos_iou_thr=0.7,
            neg_iou_thr=0.3,
            min_pos_iou=0.3,
            match_low_quality=True,
            ignore_iof_thr=-1),
        sampler=dict(
            type='RandomSampler',
            num=256,
            pos_fraction=0.5,
            neg_pos_ub=-1,
            add_gt_as_proposals=False),
        allowed_border=-1,
        pos_weight=-1,
        debug=False),
    rpn_proposal=dict(
        nms_across_levels=False,
        nms_pre=2000,
        nms_post=1000,
        max_num=1000,
        nms_thr=0.7,
        min_bbox_size=0),
    rcnn=dict(
        assigner=dict(
            type='MaxIoUAssigner',
            pos_iou_thr=0.5,
            neg_iou_thr=0.5,
            min_pos_iou=0.5,
            match_low_quality=False,
            ignore_iof_thr=-1),
        sampler=dict(
            type='RandomSampler',
            num=512,
            pos_fraction=0.25,
            neg_pos_ub=-1,
            add_gt_as_proposals=True),
        pos_weight=-1,
        debug=False))
test_cfg = dict(
    rpn=dict(
        nms_across_levels=False,
        nms_pre=1000,
        nms_post=1000,
        max_num=1000,
        nms_thr=0.7,
        min_bbox_size=0),
    rcnn=dict(
        score_thr=0.05,
        nms=dict(type='nms', iou_threshold=0.5),
        max_per_img=100))
dataset_type = 'CocoDataset'
data_root = 'data/coco/'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(type='Resize', img_scale=(310, 310), keep_ratio=True),
    dict(type='RandomFlip', flip_ratio=0.5),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='Pad', size_divisor=32),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(310, 310),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=32,
    workers_per_gpu=32,
    train=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_trai.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(type='Resize', img_scale=(310, 310), keep_ratio=True),
            dict(type='RandomFlip', flip_ratio=0.5),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
        ]),
    val=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_test.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(310, 310),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_vals.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(310, 310),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
evaluation = dict(interval=1, metric='bbox')
optimizer = dict(type='SGD', lr=0.02, momentum=0.9, weight_decay=0.0001)
optimizer_config = dict(grad_clip=None)
lr_config = dict(
    policy='step',
    warmup='linear',
    warmup_iters=500,
    warmup_ratio=0.001,
    step=[8, 11])
total_epochs = 40
checkpoint_config = dict(interval=20)
log_config = dict(interval=2, hooks=[dict(type='TextLoggerHook')])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = None
resume_from = None
workflow = [('train', 2), ('val', 1)]
work_dir = '/home/admin/jupyter/SecurityAI_Round5/data/work'
gpu_ids = range(0, 1)

2020-11-09 11:40:43,308 - mmdet - INFO - load model from: torchvision://resnet50
2020-11-09 11:40:51,687 - mmdet - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: fc.weight, fc.bias

2020-11-09 11:41:03,104 - mmdet - INFO - Start running, host: admin@fuxilabor_labor0_S4_Odps_S96_dsw_prepaid_cnsh_838_2020110900592, work_dir: /home/admin/jupyter/SecurityAI_Round5/data/work
2020-11-09 11:41:03,104 - mmdet - INFO - workflow: [('train', 2), ('val', 1)], max: 40 epochs
2020-11-09 11:41:11,040 - mmdet - INFO - Epoch [1][2/355]	lr: 5.996e-05, eta: 15:24:37, time: 3.907, data_time: 2.423, memory: 5980, loss_rpn_cls: 0.7041, loss_rpn_bbox: 0.1310, loss_cls: 0.9661, acc: 78.8757, loss_bbox: 0.0254, loss: 1.8266
2020-11-09 11:41:13,609 - mmdet - INFO - Epoch [1][4/355]	lr: 1.399e-04, eta: 10:14:15, time: 1.285, data_time: 0.067, memory: 5980, loss_rpn_cls: 0.7027, loss_rpn_bbox: 0.1671, loss_cls: 0.9007, acc: 89.8132, loss_bbox: 0.0264, loss: 1.7969
2020-11-09 11:41:16,356 - mmdet - INFO - Epoch [1][6/355]	lr: 2.198e-04, eta: 8:37:43, time: 1.373, data_time: 0.147, memory: 5980, loss_rpn_cls: 0.7022, loss_rpn_bbox: 0.1628, loss_cls: 0.6801, acc: 96.9696, loss_bbox: 0.0322, loss: 1.5774
2020-11-09 11:41:18,980 - mmdet - INFO - Epoch [1][8/355]	lr: 2.997e-04, eta: 7:45:50, time: 1.312, data_time: 0.065, memory: 5980, loss_rpn_cls: 0.7011, loss_rpn_bbox: 0.1622, loss_cls: 0.3703, acc: 96.9177, loss_bbox: 0.0414, loss: 1.2751
2020-11-09 11:41:21,555 - mmdet - INFO - Epoch [1][10/355]	lr: 3.796e-04, eta: 7:13:30, time: 1.287, data_time: 0.065, memory: 5980, loss_rpn_cls: 0.6980, loss_rpn_bbox: 0.1636, loss_cls: 0.1870, acc: 97.0276, loss_bbox: 0.0358, loss: 1.0845
2020-11-09 11:41:24,235 - mmdet - INFO - Epoch [1][12/355]	lr: 4.596e-04, eta: 6:54:01, time: 1.340, data_time: 0.145, memory: 5980, loss_rpn_cls: 0.6923, loss_rpn_bbox: 0.1329, loss_cls: 0.1981, acc: 96.3593, loss_bbox: 0.0435, loss: 1.0669
2020-11-09 11:41:26,847 - mmdet - INFO - Epoch [1][14/355]	lr: 5.395e-04, eta: 6:38:55, time: 1.306, data_time: 0.080, memory: 5980, loss_rpn_cls: 0.6829, loss_rpn_bbox: 0.1496, loss_cls: 0.2727, acc: 96.0968, loss_bbox: 0.0532, loss: 1.1583
2020-11-09 11:41:29,553 - mmdet - INFO - Epoch [1][16/355]	lr: 6.194e-04, eta: 6:28:59, time: 1.353, data_time: 0.065, memory: 5980, loss_rpn_cls: 0.6643, loss_rpn_bbox: 0.1003, loss_cls: 0.2388, acc: 97.0917, loss_bbox: 0.0461, loss: 1.0495
2020-11-09 11:41:32,230 - mmdet - INFO - Epoch [1][18/355]	lr: 6.993e-04, eta: 6:20:52, time: 1.339, data_time: 0.065, memory: 5980, loss_rpn_cls: 0.6488, loss_rpn_bbox: 0.1367, loss_cls: 0.3070, acc: 96.4752, loss_bbox: 0.0725, loss: 1.1649
2020-11-09 11:41:34,960 - mmdet - INFO - Epoch [1][20/355]	lr: 7.792e-04, eta: 6:15:00, time: 1.365, data_time: 0.065, memory: 5980, loss_rpn_cls: 0.6273, loss_rpn_bbox: 0.1114, loss_cls: 0.3684, acc: 95.5658, loss_bbox: 0.1114, loss: 1.2185
2020-11-09 11:41:37,756 - mmdet - INFO - Epoch [1][22/355]	lr: 8.592e-04, eta: 6:10:53, time: 1.398, data_time: 0.064, memory: 5999, loss_rpn_cls: 0.6135, loss_rpn_bbox: 0.1299, loss_cls: 0.3632, acc: 95.2637, loss_bbox: 0.1347, loss: 1.2414
2020-11-09 11:41:40,868 - mmdet - INFO - Epoch [1][24/355]	lr: 9.391e-04, eta: 6:10:34, time: 1.556, data_time: 0.064, memory: 6015, loss_rpn_cls: 0.6092, loss_rpn_bbox: 0.1416, loss_cls: 0.3182, acc: 95.2728, loss_bbox: 0.1193, loss: 1.1884
2020-11-09 11:41:43,797 - mmdet - INFO - Epoch [1][26/355]	lr: 1.019e-03, eta: 6:08:37, time: 1.465, data_time: 0.064, memory: 6021, loss_rpn_cls: 0.6076, loss_rpn_bbox: 0.1620, loss_cls: 0.3436, acc: 94.0063, loss_bbox: 0.1345, loss: 1.2477
2020-11-09 11:41:46,726 - mmdet - INFO - Epoch [1][28/355]	lr: 1.099e-03, eta: 6:06:57, time: 1.464, data_time: 0.064, memory: 6030, loss_rpn_cls: 0.5985, loss_rpn_bbox: 0.1620, loss_cls: 0.2812, acc: 94.4672, loss_bbox: 0.1294, loss: 1.1710
2020-11-09 11:41:49,652 - mmdet - INFO - Epoch [1][30/355]	lr: 1.179e-03, eta: 6:05:29, time: 1.463, data_time: 0.065, memory: 6035, loss_rpn_cls: 0.5750, loss_rpn_bbox: 0.1046, loss_cls: 0.2002, acc: 95.8954, loss_bbox: 0.1174, loss: 0.9972
2020-11-09 11:41:52,656 - mmdet - INFO - Epoch [1][32/355]	lr: 1.259e-03, eta: 6:04:45, time: 1.502, data_time: 0.065, memory: 6038, loss_rpn_cls: 0.5665, loss_rpn_bbox: 0.1264, loss_cls: 0.2275, acc: 95.2545, loss_bbox: 0.1226, loss: 1.0431
2020-11-09 11:41:56,214 - mmdet - INFO - Epoch [1][34/355]	lr: 1.339e-03, eta: 6:07:57, time: 1.779, data_time: 0.351, memory: 6044, loss_rpn_cls: 0.5450, loss_rpn_bbox: 0.1382, loss_cls: 0.2219, acc: 95.1111, loss_bbox: 0.1237, loss: 1.0289
2020-11-09 11:41:59,157 - mmdet - INFO - Epoch [1][36/355]	lr: 1.419e-03, eta: 6:06:46, time: 1.472, data_time: 0.065, memory: 6047, loss_rpn_cls: 0.5041, loss_rpn_bbox: 0.1087, loss_cls: 0.2171, acc: 94.9097, loss_bbox: 0.1404, loss: 0.9704
2020-11-09 11:42:02,334 - mmdet - INFO - Epoch [1][38/355]	lr: 1.499e-03, eta: 6:07:09, time: 1.588, data_time: 0.152, memory: 6051, loss_rpn_cls: 0.4524, loss_rpn_bbox: 0.0939, loss_cls: 0.1984, acc: 95.4163, loss_bbox: 0.1424, loss: 0.8870
2020-11-09 11:42:05,364 - mmdet - INFO - Epoch [1][40/355]	lr: 1.578e-03, eta: 6:06:37, time: 1.515, data_time: 0.065, memory: 6055, loss_rpn_cls: 0.4373, loss_rpn_bbox: 0.1397, loss_cls: 0.2654, acc: 93.8782, loss_bbox: 0.1415, loss: 0.9839
2020-11-09 11:42:08,421 - mmdet - INFO - Epoch [1][42/355]	lr: 1.658e-03, eta: 6:06:17, time: 1.529, data_time: 0.095, memory: 6058, loss_rpn_cls: 0.3732, loss_rpn_bbox: 0.1246, loss_cls: 0.2219, acc: 94.8395, loss_bbox: 0.1404, loss: 0.8600
2020-11-09 11:42:11,511 - mmdet - INFO - Epoch [1][44/355]	lr: 1.738e-03, eta: 6:06:09, time: 1.545, data_time: 0.144, memory: 6060, loss_rpn_cls: 0.3686, loss_rpn_bbox: 0.1473, loss_cls: 0.2298, acc: 94.7174, loss_bbox: 0.1451, loss: 0.8909
2020-11-09 11:42:14,574 - mmdet - INFO - Epoch [1][46/355]	lr: 1.818e-03, eta: 6:05:53, time: 1.532, data_time: 0.080, memory: 6062, loss_rpn_cls: 0.3416, loss_rpn_bbox: 0.1326, loss_cls: 0.2223, acc: 94.4214, loss_bbox: 0.1587, loss: 0.8551
2020-11-09 11:42:17,553 - mmdet - INFO - Epoch [1][48/355]	lr: 1.898e-03, eta: 6:05:14, time: 1.489, data_time: 0.064, memory: 6062, loss_rpn_cls: 0.2977, loss_rpn_bbox: 0.1100, loss_cls: 0.2115, acc: 94.3695, loss_bbox: 0.1588, loss: 0.7780
2020-11-09 11:42:20,571 - mmdet - INFO - Epoch [1][50/355]	lr: 1.978e-03, eta: 6:04:48, time: 1.509, data_time: 0.065, memory: 6062, loss_rpn_cls: 0.3282, loss_rpn_bbox: 0.1208, loss_cls: 0.2133, acc: 94.2596, loss_bbox: 0.1412, loss: 0.8035
2020-11-09 11:42:23,549 - mmdet - INFO - Epoch [1][52/355]	lr: 2.058e-03, eta: 6:04:14, time: 1.489, data_time: 0.065, memory: 6062, loss_rpn_cls: 0.2977, loss_rpn_bbox: 0.1104, loss_cls: 0.2063, acc: 94.7662, loss_bbox: 0.1472, loss: 0.7616
2020-11-09 11:42:26,531 - mmdet - INFO - Epoch [1][54/355]	lr: 2.138e-03, eta: 6:03:42, time: 1.491, data_time: 0.065, memory: 6062, loss_rpn_cls: 0.2808, loss_rpn_bbox: 0.1145, loss_cls: 0.1964, acc: 94.9036, loss_bbox: 0.1535, loss: 0.7452
2020-11-09 11:42:29,428 - mmdet - INFO - Epoch [1][56/355]	lr: 2.218e-03, eta: 6:02:52, time: 1.449, data_time: 0.065, memory: 6062, loss_rpn_cls: 0.2582, loss_rpn_bbox: 0.1074, loss_cls: 0.1999, acc: 94.1467, loss_bbox: 0.1686, loss: 0.7340
2020-11-09 11:42:32,330 - mmdet - INFO - Epoch [1][58/355]	lr: 2.298e-03, eta: 6:02:06, time: 1.451, data_time: 0.065, memory: 6062, loss_rpn_cls: 0.2407, loss_rpn_bbox: 0.0985, loss_cls: 0.1938, acc: 94.5038, loss_bbox: 0.1669, loss: 0.6999
2020-11-09 11:42:35,332 - mmdet - INFO - Epoch [1][60/355]	lr: 2.378e-03, eta: 6:01:46, time: 1.501, data_time: 0.064, memory: 6062, loss_rpn_cls: 0.2177, loss_rpn_bbox: 0.0870, loss_cls: 0.2172, acc: 94.5953, loss_bbox: 0.1568, loss: 0.6788
2020-11-09 11:42:38,181 - mmdet - INFO - Epoch [1][62/355]	lr: 2.458e-03, eta: 6:00:53, time: 1.425, data_time: 0.064, memory: 6062, loss_rpn_cls: 0.2620, loss_rpn_bbox: 0.1187, loss_cls: 0.2110, acc: 94.7540, loss_bbox: 0.1644, loss: 0.7560
2020-11-09 11:42:40,956 - mmdet - INFO - Epoch [1][64/355]	lr: 2.537e-03, eta: 5:59:46, time: 1.387, data_time: 0.064, memory: 6062, loss_rpn_cls: 0.2227, loss_rpn_bbox: 0.0915, loss_cls: 0.1780, acc: 95.4346, loss_bbox: 0.1591, loss: 0.6513
2020-11-09 11:42:44,506 - mmdet - INFO - Epoch [1][66/355]	lr: 2.617e-03, eta: 6:01:29, time: 1.775, data_time: 0.420, memory: 6062, loss_rpn_cls: 0.2409, loss_rpn_bbox: 0.0922, loss_cls: 0.1950, acc: 94.8212, loss_bbox: 0.1591, loss: 0.6871
2020-11-09 11:42:47,305 - mmdet - INFO - Epoch [1][68/355]	lr: 2.697e-03, eta: 6:00:30, time: 1.400, data_time: 0.065, memory: 6062, loss_rpn_cls: 0.2236, loss_rpn_bbox: 0.1017, loss_cls: 0.1938, acc: 94.7662, loss_bbox: 0.1709, loss: 0.6900
2020-11-09 11:42:50,300 - mmdet - INFO - Epoch [1][70/355]	lr: 2.777e-03, eta: 6:00:13, time: 1.497, data_time: 0.152, memory: 6062, loss_rpn_cls: 0.2158, loss_rpn_bbox: 0.0975, loss_cls: 0.1836, acc: 95.1752, loss_bbox: 0.1715, loss: 0.6685
2020-11-09 11:42:53,097 - mmdet - INFO - Epoch [1][72/355]	lr: 2.857e-03, eta: 5:59:19, time: 1.398, data_time: 0.066, memory: 6062, loss_rpn_cls: 0.2397, loss_rpn_bbox: 0.1036, loss_cls: 0.1750, acc: 95.5902, loss_bbox: 0.1718, loss: 0.6902
2020-11-09 11:42:55,892 - mmdet - INFO - Epoch [1][74/355]	lr: 2.937e-03, eta: 5:58:27, time: 1.398, data_time: 0.065, memory: 6062, loss_rpn_cls: 0.2079, loss_rpn_bbox: 0.0853, loss_cls: 0.1638, acc: 95.7733, loss_bbox: 0.1699, loss: 0.6268
2020-11-09 11:42:58,828 - mmdet - INFO - Epoch [1][76/355]	lr: 3.017e-03, eta: 5:58:03, time: 1.468, data_time: 0.153, memory: 6062, loss_rpn_cls: 0.1781, loss_rpn_bbox: 0.0675, loss_cls: 0.1582, acc: 95.7916, loss_bbox: 0.1638, loss: 0.5676
2020-11-09 11:43:01,657 - mmdet - INFO - Epoch [1][78/355]	lr: 3.097e-03, eta: 5:57:22, time: 1.414, data_time: 0.079, memory: 6062, loss_rpn_cls: 0.2188, loss_rpn_bbox: 0.0889, loss_cls: 0.1654, acc: 95.3766, loss_bbox: 0.1763, loss: 0.6495
2020-11-09 11:43:04,455 - mmdet - INFO - Epoch [1][80/355]	lr: 3.177e-03, eta: 5:56:36, time: 1.399, data_time: 0.067, memory: 6062, loss_rpn_cls: 0.2132, loss_rpn_bbox: 0.0896, loss_cls: 0.1883, acc: 94.5618, loss_bbox: 0.1629, loss: 0.6540
2020-11-09 11:43:07,271 - mmdet - INFO - Epoch [1][82/355]	lr: 3.257e-03, eta: 5:55:57, time: 1.408, data_time: 0.065, memory: 6062, loss_rpn_cls: 0.1831, loss_rpn_bbox: 0.0922, loss_cls: 0.1636, acc: 95.2972, loss_bbox: 0.1962, loss: 0.6351
2020-11-09 11:43:10,108 - mmdet - INFO - Epoch [1][84/355]	lr: 3.337e-03, eta: 5:55:22, time: 1.418, data_time: 0.065, memory: 6062, loss_rpn_cls: 0.1975, loss_rpn_bbox: 0.0740, loss_cls: 0.1442, acc: 95.9076, loss_bbox: 0.1546, loss: 0.5704
2020-11-09 11:43:12,912 - mmdet - INFO - Epoch [1][86/355]	lr: 3.417e-03, eta: 5:54:43, time: 1.402, data_time: 0.066, memory: 6062, loss_rpn_cls: 0.1934, loss_rpn_bbox: 0.0962, loss_cls: 0.1730, acc: 95.1538, loss_bbox: 0.1704, loss: 0.6331
2020-11-09 11:43:15,680 - mmdet - INFO - Epoch [1][88/355]	lr: 3.497e-03, eta: 5:54:00, time: 1.384, data_time: 0.068, memory: 6062, loss_rpn_cls: 0.1593, loss_rpn_bbox: 0.0643, loss_cls: 0.1425, acc: 95.6909, loss_bbox: 0.1735, loss: 0.5396
