2020-11-24 01:18:25,683 - mmdet - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.6.4 |Anaconda, Inc.| (default, Jan 16 2018, 18:10:19) [GCC 7.2.0]
CUDA available: True
CUDA_HOME: /usr/local/cuda
NVCC: Cuda compilation tools, release 10.0, V10.0.130
GPU 0: Tesla P100-PCIE-16GB
GCC: gcc (GCC) 5.3.0
PyTorch: 1.3.1+cu100
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - Intel(R) Math Kernel Library Version 2019.0.4 Product Build 20190411 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.20.5 (Git Hash 0125f28c61c1f822fd48570b4c1066f96fcb9b2e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CUDA Runtime 10.0
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.1
  - Build settings: BLAS=MKL, BUILD_NAMEDTENSOR=OFF, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Wno-stringop-overflow, DISABLE_NUMA=1, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=True, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

TorchVision: 0.4.2+cu100
OpenCV: 4.4.0
MMCV: 1.0.5
MMDetection: 2.3.0+788fa8d
MMDetection Compiler: GCC 7.3
MMDetection CUDA Compiler: 10.0
------------------------------------------------------------

2020-11-24 01:18:25,684 - mmdet - INFO - Distributed training: False
2020-11-24 01:18:26,088 - mmdet - INFO - Config:
model = dict(
    type='FasterRCNN',
    pretrained='torchvision://resnet50',
    backbone=dict(
        type='ResNet',
        depth=50,
        num_stages=4,
        out_indices=(0, 1, 2, 3),
        frozen_stages=1,
        norm_cfg=dict(type='BN', requires_grad=True),
        norm_eval=True,
        style='pytorch'),
    neck=dict(
        type='FPN',
        in_channels=[256, 512, 1024, 2048],
        out_channels=256,
        num_outs=5),
    rpn_head=dict(
        type='RPNHead',
        in_channels=256,
        feat_channels=256,
        anchor_generator=dict(
            type='AnchorGenerator',
            scales=[8],
            ratios=[0.5, 1.0, 2.0],
            strides=[4, 8, 16, 32, 64]),
        bbox_coder=dict(
            type='DeltaXYWHBBoxCoder',
            target_means=[0.0, 0.0, 0.0, 0.0],
            target_stds=[1.0, 1.0, 1.0, 1.0]),
        loss_cls=dict(
            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),
        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),
    roi_head=dict(
        type='StandardRoIHead',
        bbox_roi_extractor=dict(
            type='SingleRoIExtractor',
            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),
            out_channels=256,
            featmap_strides=[4, 8, 16, 32]),
        bbox_head=dict(
            type='Shared2FCBBoxHead',
            in_channels=256,
            fc_out_channels=1024,
            roi_feat_size=7,
            num_classes=2,
            bbox_coder=dict(
                type='DeltaXYWHBBoxCoder',
                target_means=[0.0, 0.0, 0.0, 0.0],
                target_stds=[0.1, 0.1, 0.2, 0.2]),
            reg_class_agnostic=False,
            loss_cls=dict(
                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),
            loss_bbox=dict(type='L1Loss', loss_weight=1.0))))
train_cfg = dict(
    rpn=dict(
        assigner=dict(
            type='MaxIoUAssigner',
            pos_iou_thr=0.7,
            neg_iou_thr=0.3,
            min_pos_iou=0.3,
            match_low_quality=True,
            ignore_iof_thr=-1),
        sampler=dict(
            type='RandomSampler',
            num=256,
            pos_fraction=0.5,
            neg_pos_ub=-1,
            add_gt_as_proposals=False),
        allowed_border=-1,
        pos_weight=-1,
        debug=False),
    rpn_proposal=dict(
        nms_across_levels=False,
        nms_pre=2000,
        nms_post=1000,
        max_num=1000,
        nms_thr=0.7,
        min_bbox_size=0),
    rcnn=dict(
        assigner=dict(
            type='MaxIoUAssigner',
            pos_iou_thr=0.5,
            neg_iou_thr=0.5,
            min_pos_iou=0.5,
            match_low_quality=False,
            ignore_iof_thr=-1),
        sampler=dict(
            type='RandomSampler',
            num=512,
            pos_fraction=0.25,
            neg_pos_ub=-1,
            add_gt_as_proposals=True),
        pos_weight=-1,
        debug=False))
test_cfg = dict(
    rpn=dict(
        nms_across_levels=False,
        nms_pre=1000,
        nms_post=1000,
        max_num=1000,
        nms_thr=0.7,
        min_bbox_size=0),
    rcnn=dict(
        score_thr=0.05,
        nms=dict(type='nms', iou_threshold=0.5),
        max_per_img=100))
dataset_type = 'CocoDataset'
data_root = 'data/coco/'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(type='Resize', img_scale=(1550, 1550), keep_ratio=True),
    dict(type='RandomFlip', flip_ratio=0.5),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='Pad', size_divisor=32),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(1550, 1550),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=2,
    workers_per_gpu=2,
    train=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_trai.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(type='Resize', img_scale=(1550, 1550), keep_ratio=True),
            dict(type='RandomFlip', flip_ratio=0.5),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
        ]),
    val=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_test.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1550, 1550),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_vals.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1550, 1550),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
evaluation = dict(interval=1, metric='bbox')
optimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0001)
optimizer_config = dict(grad_clip=None)
lr_config = dict(
    policy='step',
    warmup='linear',
    warmup_iters=500,
    warmup_ratio=0.001,
    step=[8, 11])
total_epochs = 4
checkpoint_config = dict(interval=4)
log_config = dict(interval=100, hooks=[dict(type='TextLoggerHook')])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = '/home/admin/.cache/torch/checkpoints/X.pth'
resume_from = None
workflow = [('train', 2), ('val', 1)]
work_dir = '/home/admin/jupyter/SecurityAI_Round5/data/work'
gpu_ids = range(0, 1)

2020-11-24 01:18:26,590 - mmdet - INFO - load model from: torchvision://resnet50
2020-11-24 01:18:34,496 - mmdet - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: fc.weight, fc.bias

2020-11-24 01:18:44,931 - mmdet - INFO - load checkpoint from /home/admin/.cache/torch/checkpoints/X.pth
2020-11-24 01:18:51,776 - mmdet - INFO - Start running, host: admin@fuxilabor_labor0_S4_Odps_S96_dsw_prepaid_cnsh_838_2020112313382, work_dir: /home/admin/jupyter/SecurityAI_Round5/data/work
2020-11-24 01:18:51,776 - mmdet - INFO - workflow: [('train', 2), ('val', 1)], max: 4 epochs
2020-11-24 01:20:09,409 - mmdet - INFO - Epoch [1][100/620]	lr: 1.988e-03, eta: 0:30:42, time: 0.774, data_time: 0.034, memory: 9839, loss_rpn_cls: 0.0037, loss_rpn_bbox: 0.0303, loss_cls: 0.0324, acc: 98.7295, loss_bbox: 0.0751, loss: 0.1416
2020-11-24 01:21:24,485 - mmdet - INFO - Epoch [1][200/620]	lr: 3.986e-03, eta: 0:28:58, time: 0.751, data_time: 0.012, memory: 10043, loss_rpn_cls: 0.0032, loss_rpn_bbox: 0.0283, loss_cls: 0.0325, acc: 98.6631, loss_bbox: 0.0755, loss: 0.1394
2020-11-24 01:22:39,257 - mmdet - INFO - Epoch [1][300/620]	lr: 5.984e-03, eta: 0:27:31, time: 0.748, data_time: 0.012, memory: 10043, loss_rpn_cls: 0.0040, loss_rpn_bbox: 0.0303, loss_cls: 0.0394, acc: 98.3613, loss_bbox: 0.0825, loss: 0.1562
2020-11-24 01:23:54,576 - mmdet - INFO - Epoch [1][400/620]	lr: 7.982e-03, eta: 0:26:13, time: 0.753, data_time: 0.012, memory: 10043, loss_rpn_cls: 0.0020, loss_rpn_bbox: 0.0287, loss_cls: 0.0301, acc: 98.7988, loss_bbox: 0.0754, loss: 0.1362
2020-11-24 01:25:09,198 - mmdet - INFO - Epoch [1][500/620]	lr: 9.980e-03, eta: 0:24:53, time: 0.746, data_time: 0.012, memory: 10043, loss_rpn_cls: 0.0036, loss_rpn_bbox: 0.0347, loss_cls: 0.0390, acc: 98.4209, loss_bbox: 0.0814, loss: 0.1587
2020-11-24 01:26:23,819 - mmdet - INFO - Epoch [1][600/620]	lr: 1.000e-02, eta: 0:23:35, time: 0.746, data_time: 0.012, memory: 10043, loss_rpn_cls: 0.0037, loss_rpn_bbox: 0.0368, loss_cls: 0.0421, acc: 98.2197, loss_bbox: 0.0837, loss: 0.1663
2020-11-24 01:27:02,122 - mmdet - INFO - Evaluating bbox...
2020-11-24 01:27:04,639 - mmdet - INFO - Epoch [1][620/620]	lr: 1.000e-02, bbox_mAP: 0.7840, bbox_mAP_50: 0.8490, bbox_mAP_75: 0.8380, bbox_mAP_s: 0.4570, bbox_mAP_m: 0.8040, bbox_mAP_l: 0.8810, bbox_mAP_copypaste: 0.784 0.849 0.838 0.457 0.804 0.881
2020-11-24 01:28:21,595 - mmdet - INFO - Epoch [2][100/620]	lr: 1.000e-02, eta: 0:21:32, time: 0.768, data_time: 0.033, memory: 10043, loss_rpn_cls: 0.0060, loss_rpn_bbox: 0.0345, loss_cls: 0.0483, acc: 98.0820, loss_bbox: 0.0845, loss: 0.1733
2020-11-24 01:29:37,192 - mmdet - INFO - Epoch [2][200/620]	lr: 1.000e-02, eta: 0:20:23, time: 0.756, data_time: 0.012, memory: 10043, loss_rpn_cls: 0.0038, loss_rpn_bbox: 0.0325, loss_cls: 0.0328, acc: 98.6660, loss_bbox: 0.0792, loss: 0.1483
2020-11-24 01:30:51,816 - mmdet - INFO - Epoch [2][300/620]	lr: 1.000e-02, eta: 0:19:11, time: 0.746, data_time: 0.012, memory: 10043, loss_rpn_cls: 0.0035, loss_rpn_bbox: 0.0326, loss_cls: 0.0320, acc: 98.6748, loss_bbox: 0.0757, loss: 0.1438
2020-11-24 01:32:06,271 - mmdet - INFO - Epoch [2][400/620]	lr: 1.000e-02, eta: 0:17:58, time: 0.745, data_time: 0.012, memory: 10043, loss_rpn_cls: 0.0032, loss_rpn_bbox: 0.0339, loss_cls: 0.0338, acc: 98.5664, loss_bbox: 0.0783, loss: 0.1493
2020-11-24 01:33:20,673 - mmdet - INFO - Epoch [2][500/620]	lr: 1.000e-02, eta: 0:16:45, time: 0.744, data_time: 0.012, memory: 10043, loss_rpn_cls: 0.0033, loss_rpn_bbox: 0.0362, loss_cls: 0.0385, acc: 98.3398, loss_bbox: 0.0828, loss: 0.1609
2020-11-24 01:34:35,707 - mmdet - INFO - Epoch [2][600/620]	lr: 1.000e-02, eta: 0:15:32, time: 0.750, data_time: 0.012, memory: 10043, loss_rpn_cls: 0.0041, loss_rpn_bbox: 0.0358, loss_cls: 0.0412, acc: 98.3623, loss_bbox: 0.0940, loss: 0.1751
2020-11-24 01:35:13,984 - mmdet - INFO - Evaluating bbox...
2020-11-24 01:35:16,616 - mmdet - INFO - Epoch [2][620/620]	lr: 1.000e-02, bbox_mAP: 0.7990, bbox_mAP_50: 0.8630, bbox_mAP_75: 0.8530, bbox_mAP_s: 0.4810, bbox_mAP_m: 0.8380, bbox_mAP_l: 0.8900, bbox_mAP_copypaste: 0.799 0.863 0.853 0.481 0.838 0.890
2020-11-24 01:35:46,599 - mmdet - INFO - Epoch(train) [2][73]	loss_rpn_cls: 0.0043, loss_rpn_bbox: 0.0335, loss_cls: 0.0400, acc: 98.3372, loss_bbox: 0.0863, loss: 0.1641
2020-11-24 01:37:03,778 - mmdet - INFO - Epoch [3][100/620]	lr: 1.000e-02, eta: 0:13:53, time: 0.770, data_time: 0.034, memory: 10043, loss_rpn_cls: 0.0031, loss_rpn_bbox: 0.0349, loss_cls: 0.0398, acc: 98.3574, loss_bbox: 0.0881, loss: 0.1659
2020-11-24 01:38:18,448 - mmdet - INFO - Epoch [3][200/620]	lr: 1.000e-02, eta: 0:12:41, time: 0.747, data_time: 0.012, memory: 10043, loss_rpn_cls: 0.0041, loss_rpn_bbox: 0.0369, loss_cls: 0.0414, acc: 98.2637, loss_bbox: 0.0889, loss: 0.1714
2020-11-24 01:39:32,918 - mmdet - INFO - Epoch [3][300/620]	lr: 1.000e-02, eta: 0:11:29, time: 0.745, data_time: 0.012, memory: 10043, loss_rpn_cls: 0.0035, loss_rpn_bbox: 0.0325, loss_cls: 0.0333, acc: 98.6250, loss_bbox: 0.0813, loss: 0.1506
2020-11-24 01:40:47,707 - mmdet - INFO - Epoch [3][400/620]	lr: 1.000e-02, eta: 0:10:16, time: 0.748, data_time: 0.012, memory: 10069, loss_rpn_cls: 0.0039, loss_rpn_bbox: 0.0352, loss_cls: 0.0405, acc: 98.3018, loss_bbox: 0.0840, loss: 0.1637
2020-11-24 01:42:02,576 - mmdet - INFO - Epoch [3][500/620]	lr: 1.000e-02, eta: 0:09:03, time: 0.749, data_time: 0.012, memory: 10069, loss_rpn_cls: 0.0030, loss_rpn_bbox: 0.0335, loss_cls: 0.0311, acc: 98.7568, loss_bbox: 0.0771, loss: 0.1448
2020-11-24 01:43:17,109 - mmdet - INFO - Epoch [3][600/620]	lr: 1.000e-02, eta: 0:07:50, time: 0.745, data_time: 0.012, memory: 10069, loss_rpn_cls: 0.0030, loss_rpn_bbox: 0.0323, loss_cls: 0.0398, acc: 98.3730, loss_bbox: 0.0812, loss: 0.1562
2020-11-24 01:43:55,455 - mmdet - INFO - Evaluating bbox...
2020-11-24 01:43:58,181 - mmdet - INFO - Epoch [3][620/620]	lr: 1.000e-02, bbox_mAP: 0.7900, bbox_mAP_50: 0.8580, bbox_mAP_75: 0.8470, bbox_mAP_s: 0.4810, bbox_mAP_m: 0.8290, bbox_mAP_l: 0.8820, bbox_mAP_copypaste: 0.790 0.858 0.847 0.481 0.829 0.882
2020-11-24 01:45:15,353 - mmdet - INFO - Epoch [4][100/620]	lr: 1.000e-02, eta: 0:06:19, time: 0.770, data_time: 0.033, memory: 10069, loss_rpn_cls: 0.0026, loss_rpn_bbox: 0.0313, loss_cls: 0.0317, acc: 98.7002, loss_bbox: 0.0758, loss: 0.1413
2020-11-24 01:46:30,348 - mmdet - INFO - Epoch [4][200/620]	lr: 1.000e-02, eta: 0:05:06, time: 0.750, data_time: 0.012, memory: 10069, loss_rpn_cls: 0.0027, loss_rpn_bbox: 0.0341, loss_cls: 0.0370, acc: 98.4131, loss_bbox: 0.0853, loss: 0.1590
2020-11-24 01:47:45,195 - mmdet - INFO - Epoch [4][300/620]	lr: 1.000e-02, eta: 0:03:54, time: 0.748, data_time: 0.012, memory: 10069, loss_rpn_cls: 0.0037, loss_rpn_bbox: 0.0353, loss_cls: 0.0416, acc: 98.2725, loss_bbox: 0.0853, loss: 0.1658
2020-11-24 01:48:59,777 - mmdet - INFO - Epoch [4][400/620]	lr: 1.000e-02, eta: 0:02:41, time: 0.746, data_time: 0.012, memory: 10069, loss_rpn_cls: 0.0043, loss_rpn_bbox: 0.0378, loss_cls: 0.0488, acc: 97.9805, loss_bbox: 0.0925, loss: 0.1834
2020-11-24 01:50:14,468 - mmdet - INFO - Epoch [4][500/620]	lr: 1.000e-02, eta: 0:01:27, time: 0.747, data_time: 0.012, memory: 10069, loss_rpn_cls: 0.0026, loss_rpn_bbox: 0.0322, loss_cls: 0.0364, acc: 98.5605, loss_bbox: 0.0849, loss: 0.1560
2020-11-24 01:51:29,119 - mmdet - INFO - Epoch [4][600/620]	lr: 1.000e-02, eta: 0:00:14, time: 0.747, data_time: 0.012, memory: 10069, loss_rpn_cls: 0.0036, loss_rpn_bbox: 0.0334, loss_cls: 0.0368, acc: 98.4658, loss_bbox: 0.0824, loss: 0.1562
2020-11-24 01:51:43,916 - mmdet - INFO - Saving checkpoint at 4 epochs
2020-11-24 01:52:09,711 - mmdet - INFO - Evaluating bbox...
2020-11-24 01:52:12,411 - mmdet - INFO - Epoch [4][620/620]	lr: 1.000e-02, bbox_mAP: 0.7840, bbox_mAP_50: 0.8580, bbox_mAP_75: 0.8370, bbox_mAP_s: 0.4670, bbox_mAP_m: 0.8020, bbox_mAP_l: 0.8790, bbox_mAP_copypaste: 0.784 0.858 0.837 0.467 0.802 0.879
2020-11-24 01:52:42,145 - mmdet - INFO - Epoch(train) [4][73]	loss_rpn_cls: 0.0050, loss_rpn_bbox: 0.0371, loss_cls: 0.0499, acc: 97.9840, loss_bbox: 0.0977, loss: 0.1898
