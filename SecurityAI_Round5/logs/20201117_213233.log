2020-11-17 21:32:33,860 - mmdet - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.6.4 |Anaconda, Inc.| (default, Jan 16 2018, 18:10:19) [GCC 7.2.0]
CUDA available: True
CUDA_HOME: /usr/local/cuda
NVCC: Cuda compilation tools, release 10.0, V10.0.130
GPU 0: Tesla P100-PCIE-16GB
GCC: gcc (GCC) 5.3.0
PyTorch: 1.3.1+cu100
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - Intel(R) Math Kernel Library Version 2019.0.4 Product Build 20190411 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.20.5 (Git Hash 0125f28c61c1f822fd48570b4c1066f96fcb9b2e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CUDA Runtime 10.0
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.1
  - Build settings: BLAS=MKL, BUILD_NAMEDTENSOR=OFF, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Wno-stringop-overflow, DISABLE_NUMA=1, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=True, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

TorchVision: 0.4.2+cu100
OpenCV: 4.4.0
MMCV: 1.0.5
MMDetection: 2.3.0+788fa8d
MMDetection Compiler: GCC 7.3
MMDetection CUDA Compiler: 10.0
------------------------------------------------------------

2020-11-17 21:32:33,860 - mmdet - INFO - Distributed training: False
2020-11-17 21:32:34,310 - mmdet - INFO - Config:
model = dict(
    type='FasterRCNN',
    pretrained='torchvision://resnet50',
    backbone=dict(
        type='ResNet',
        depth=50,
        num_stages=4,
        out_indices=(0, 1, 2, 3),
        frozen_stages=1,
        norm_cfg=dict(type='BN', requires_grad=True),
        norm_eval=True,
        style='pytorch'),
    neck=dict(
        type='FPN',
        in_channels=[256, 512, 1024, 2048],
        out_channels=256,
        num_outs=5),
    rpn_head=dict(
        type='RPNHead',
        in_channels=256,
        feat_channels=256,
        anchor_generator=dict(
            type='AnchorGenerator',
            scales=[8],
            ratios=[0.5, 1.0, 2.0],
            strides=[4, 8, 16, 32, 64]),
        bbox_coder=dict(
            type='DeltaXYWHBBoxCoder',
            target_means=[0.0, 0.0, 0.0, 0.0],
            target_stds=[1.0, 1.0, 1.0, 1.0]),
        loss_cls=dict(
            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),
        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),
    roi_head=dict(
        type='StandardRoIHead',
        bbox_roi_extractor=dict(
            type='SingleRoIExtractor',
            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),
            out_channels=256,
            featmap_strides=[4, 8, 16, 32]),
        bbox_head=dict(
            type='Shared2FCBBoxHead',
            in_channels=256,
            fc_out_channels=1024,
            roi_feat_size=7,
            num_classes=2,
            bbox_coder=dict(
                type='DeltaXYWHBBoxCoder',
                target_means=[0.0, 0.0, 0.0, 0.0],
                target_stds=[0.1, 0.1, 0.2, 0.2]),
            reg_class_agnostic=False,
            loss_cls=dict(
                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),
            loss_bbox=dict(type='L1Loss', loss_weight=1.0))))
train_cfg = dict(
    rpn=dict(
        assigner=dict(
            type='MaxIoUAssigner',
            pos_iou_thr=0.7,
            neg_iou_thr=0.3,
            min_pos_iou=0.3,
            match_low_quality=True,
            ignore_iof_thr=-1),
        sampler=dict(
            type='RandomSampler',
            num=256,
            pos_fraction=0.5,
            neg_pos_ub=-1,
            add_gt_as_proposals=False),
        allowed_border=-1,
        pos_weight=-1,
        debug=False),
    rpn_proposal=dict(
        nms_across_levels=False,
        nms_pre=2000,
        nms_post=1000,
        max_num=1000,
        nms_thr=0.7,
        min_bbox_size=0),
    rcnn=dict(
        assigner=dict(
            type='MaxIoUAssigner',
            pos_iou_thr=0.5,
            neg_iou_thr=0.5,
            min_pos_iou=0.5,
            match_low_quality=False,
            ignore_iof_thr=-1),
        sampler=dict(
            type='RandomSampler',
            num=512,
            pos_fraction=0.25,
            neg_pos_ub=-1,
            add_gt_as_proposals=True),
        pos_weight=-1,
        debug=False))
test_cfg = dict(
    rpn=dict(
        nms_across_levels=False,
        nms_pre=1000,
        nms_post=1000,
        max_num=1000,
        nms_thr=0.7,
        min_bbox_size=0),
    rcnn=dict(
        score_thr=0.05,
        nms=dict(type='nms', iou_threshold=0.5),
        max_per_img=100))
dataset_type = 'CocoDataset'
data_root = 'data/coco/'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(type='Resize', img_scale=(1550, 1550), keep_ratio=True),
    dict(type='RandomFlip', flip_ratio=0.5),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='Pad', size_divisor=32),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(1550, 1550),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=2,
    workers_per_gpu=2,
    train=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_trai.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(type='Resize', img_scale=(1550, 1550), keep_ratio=True),
            dict(type='RandomFlip', flip_ratio=0.5),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
        ]),
    val=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_test.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1550, 1550),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_vals.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1550, 1550),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
evaluation = dict(interval=1, metric='bbox')
optimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0001)
optimizer_config = dict(grad_clip=None)
lr_config = dict(
    policy='step',
    warmup='linear',
    warmup_iters=500,
    warmup_ratio=0.001,
    step=[8, 11])
total_epochs = 4
checkpoint_config = dict(interval=4)
log_config = dict(interval=100, hooks=[dict(type='TextLoggerHook')])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = '/home/admin/.cache/torch/checkpoints/X.pth'
resume_from = None
workflow = [('train', 2), ('val', 1)]
work_dir = '/home/admin/jupyter/SecurityAI_Round5/data/work'
gpu_ids = range(0, 1)

2020-11-17 21:32:34,834 - mmdet - INFO - load model from: torchvision://resnet50
2020-11-17 21:32:43,344 - mmdet - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: fc.weight, fc.bias

2020-11-17 21:32:53,768 - mmdet - INFO - load checkpoint from /home/admin/.cache/torch/checkpoints/X.pth
2020-11-17 21:33:00,505 - mmdet - INFO - Start running, host: admin@fuxilabor_labor0_S4_Odps_S96_dsw_prepaid_cnsh_838_2020111707413, work_dir: /home/admin/jupyter/SecurityAI_Round5/data/work
2020-11-17 21:33:00,505 - mmdet - INFO - workflow: [('train', 2), ('val', 1)], max: 4 epochs
2020-11-17 21:34:18,561 - mmdet - INFO - Epoch [1][100/624]	lr: 1.988e-03, eta: 0:31:05, time: 0.779, data_time: 0.035, memory: 10072, loss_rpn_cls: 0.0364, loss_rpn_bbox: 0.0843, loss_cls: 0.1426, acc: 94.5645, loss_bbox: 0.2203, loss: 0.4837
2020-11-17 21:35:32,855 - mmdet - INFO - Epoch [1][200/624]	lr: 3.986e-03, eta: 0:29:06, time: 0.743, data_time: 0.012, memory: 10072, loss_rpn_cls: 0.0214, loss_rpn_bbox: 0.0638, loss_cls: 0.1065, acc: 95.7236, loss_bbox: 0.1807, loss: 0.3725
2020-11-17 21:36:47,818 - mmdet - INFO - Epoch [1][300/624]	lr: 5.984e-03, eta: 0:27:42, time: 0.750, data_time: 0.013, memory: 10072, loss_rpn_cls: 0.0294, loss_rpn_bbox: 0.0766, loss_cls: 0.1307, acc: 94.8857, loss_bbox: 0.2046, loss: 0.4413
2020-11-17 21:38:02,357 - mmdet - INFO - Epoch [1][400/624]	lr: 7.982e-03, eta: 0:26:20, time: 0.745, data_time: 0.012, memory: 10072, loss_rpn_cls: 0.0249, loss_rpn_bbox: 0.0738, loss_cls: 0.1334, acc: 94.8662, loss_bbox: 0.2092, loss: 0.4413
2020-11-17 21:39:17,160 - mmdet - INFO - Epoch [1][500/624]	lr: 9.980e-03, eta: 0:25:02, time: 0.748, data_time: 0.013, memory: 10072, loss_rpn_cls: 0.0299, loss_rpn_bbox: 0.0825, loss_cls: 0.1435, acc: 94.5049, loss_bbox: 0.2219, loss: 0.4779
2020-11-17 21:40:31,634 - mmdet - INFO - Epoch [1][600/624]	lr: 1.000e-02, eta: 0:23:44, time: 0.745, data_time: 0.013, memory: 10072, loss_rpn_cls: 0.0404, loss_rpn_bbox: 0.0881, loss_cls: 0.1461, acc: 94.6094, loss_bbox: 0.2018, loss: 0.4764
2020-11-17 21:41:13,132 - mmdet - INFO - Evaluating bbox...
2020-11-17 21:41:18,192 - mmdet - INFO - Epoch [1][624/624]	lr: 1.000e-02, bbox_mAP: 0.6010, bbox_mAP_50: 0.7540, bbox_mAP_75: 0.6210, bbox_mAP_s: 0.1250, bbox_mAP_m: 0.4520, bbox_mAP_l: 0.7220, bbox_mAP_copypaste: 0.601 0.754 0.621 0.125 0.452 0.722
2020-11-17 21:42:35,080 - mmdet - INFO - Epoch [2][100/624]	lr: 1.000e-02, eta: 0:21:31, time: 0.767, data_time: 0.034, memory: 10072, loss_rpn_cls: 0.0333, loss_rpn_bbox: 0.0827, loss_cls: 0.1387, acc: 94.7227, loss_bbox: 0.2095, loss: 0.4642
2020-11-17 21:43:49,786 - mmdet - INFO - Epoch [2][200/624]	lr: 1.000e-02, eta: 0:20:22, time: 0.747, data_time: 0.013, memory: 10072, loss_rpn_cls: 0.0266, loss_rpn_bbox: 0.0820, loss_cls: 0.1316, acc: 94.9414, loss_bbox: 0.2070, loss: 0.4472
2020-11-17 21:45:04,796 - mmdet - INFO - Epoch [2][300/624]	lr: 1.000e-02, eta: 0:19:12, time: 0.750, data_time: 0.013, memory: 10072, loss_rpn_cls: 0.0286, loss_rpn_bbox: 0.0849, loss_cls: 0.1417, acc: 94.4160, loss_bbox: 0.2176, loss: 0.4727
2020-11-17 21:46:19,092 - mmdet - INFO - Epoch [2][400/624]	lr: 1.000e-02, eta: 0:18:00, time: 0.743, data_time: 0.012, memory: 10072, loss_rpn_cls: 0.0387, loss_rpn_bbox: 0.0838, loss_cls: 0.1448, acc: 94.5234, loss_bbox: 0.2116, loss: 0.4788
2020-11-17 21:47:33,647 - mmdet - INFO - Epoch [2][500/624]	lr: 1.000e-02, eta: 0:16:48, time: 0.746, data_time: 0.013, memory: 10072, loss_rpn_cls: 0.0337, loss_rpn_bbox: 0.0903, loss_cls: 0.1434, acc: 94.4092, loss_bbox: 0.2180, loss: 0.4853
2020-11-17 21:48:48,116 - mmdet - INFO - Epoch [2][600/624]	lr: 1.000e-02, eta: 0:15:35, time: 0.745, data_time: 0.013, memory: 10072, loss_rpn_cls: 0.0353, loss_rpn_bbox: 0.0816, loss_cls: 0.1419, acc: 94.4795, loss_bbox: 0.2169, loss: 0.4757
2020-11-17 21:49:28,965 - mmdet - INFO - Evaluating bbox...
2020-11-17 21:49:33,305 - mmdet - INFO - Epoch [2][624/624]	lr: 1.000e-02, bbox_mAP: 0.6230, bbox_mAP_50: 0.7620, bbox_mAP_75: 0.6390, bbox_mAP_s: 0.1500, bbox_mAP_m: 0.4860, bbox_mAP_l: 0.7340, bbox_mAP_copypaste: 0.623 0.762 0.639 0.150 0.486 0.734
2020-11-17 21:50:02,420 - mmdet - INFO - Epoch(train) [2][71]	loss_rpn_cls: 0.0295, loss_rpn_bbox: 0.0934, loss_cls: 0.1564, acc: 93.8889, loss_bbox: 0.2404, loss: 0.5197
2020-11-17 21:51:19,467 - mmdet - INFO - Epoch [3][100/624]	lr: 1.000e-02, eta: 0:13:52, time: 0.769, data_time: 0.035, memory: 10072, loss_rpn_cls: 0.0199, loss_rpn_bbox: 0.0781, loss_cls: 0.1253, acc: 95.0986, loss_bbox: 0.2065, loss: 0.4298
2020-11-17 21:52:33,894 - mmdet - INFO - Epoch [3][200/624]	lr: 1.000e-02, eta: 0:12:41, time: 0.744, data_time: 0.012, memory: 10072, loss_rpn_cls: 0.0316, loss_rpn_bbox: 0.0830, loss_cls: 0.1426, acc: 94.3105, loss_bbox: 0.2158, loss: 0.4730
2020-11-17 21:53:48,354 - mmdet - INFO - Epoch [3][300/624]	lr: 1.000e-02, eta: 0:11:29, time: 0.745, data_time: 0.012, memory: 10072, loss_rpn_cls: 0.0323, loss_rpn_bbox: 0.0817, loss_cls: 0.1388, acc: 94.5449, loss_bbox: 0.2205, loss: 0.4733
2020-11-17 21:55:03,008 - mmdet - INFO - Epoch [3][400/624]	lr: 1.000e-02, eta: 0:10:18, time: 0.747, data_time: 0.013, memory: 10072, loss_rpn_cls: 0.0287, loss_rpn_bbox: 0.0861, loss_cls: 0.1485, acc: 94.2500, loss_bbox: 0.2177, loss: 0.4810
2020-11-17 21:56:17,495 - mmdet - INFO - Epoch [3][500/624]	lr: 1.000e-02, eta: 0:09:05, time: 0.745, data_time: 0.012, memory: 10072, loss_rpn_cls: 0.0293, loss_rpn_bbox: 0.0812, loss_cls: 0.1341, acc: 94.8398, loss_bbox: 0.2090, loss: 0.4536
2020-11-17 21:57:32,210 - mmdet - INFO - Epoch [3][600/624]	lr: 1.000e-02, eta: 0:07:53, time: 0.747, data_time: 0.013, memory: 10072, loss_rpn_cls: 0.0267, loss_rpn_bbox: 0.0881, loss_cls: 0.1438, acc: 94.4463, loss_bbox: 0.2199, loss: 0.4785
2020-11-17 21:58:13,617 - mmdet - INFO - Evaluating bbox...
2020-11-17 21:58:18,252 - mmdet - INFO - Epoch [3][624/624]	lr: 1.000e-02, bbox_mAP: 0.6240, bbox_mAP_50: 0.7550, bbox_mAP_75: 0.6460, bbox_mAP_s: 0.1430, bbox_mAP_m: 0.5200, bbox_mAP_l: 0.7420, bbox_mAP_copypaste: 0.624 0.755 0.646 0.143 0.520 0.742
2020-11-17 21:59:35,177 - mmdet - INFO - Epoch [4][100/624]	lr: 1.000e-02, eta: 0:06:19, time: 0.767, data_time: 0.034, memory: 10072, loss_rpn_cls: 0.0213, loss_rpn_bbox: 0.0770, loss_cls: 0.1254, acc: 95.1514, loss_bbox: 0.2139, loss: 0.4376
2020-11-17 22:00:49,560 - mmdet - INFO - Epoch [4][200/624]	lr: 1.000e-02, eta: 0:05:07, time: 0.744, data_time: 0.013, memory: 10072, loss_rpn_cls: 0.0209, loss_rpn_bbox: 0.0710, loss_cls: 0.1255, acc: 94.9932, loss_bbox: 0.2120, loss: 0.4294
2020-11-17 22:02:04,277 - mmdet - INFO - Epoch [4][300/624]	lr: 1.000e-02, eta: 0:03:55, time: 0.747, data_time: 0.013, memory: 10072, loss_rpn_cls: 0.0190, loss_rpn_bbox: 0.0755, loss_cls: 0.1317, acc: 94.8643, loss_bbox: 0.2124, loss: 0.4386
2020-11-17 22:03:19,151 - mmdet - INFO - Epoch [4][400/624]	lr: 1.000e-02, eta: 0:02:42, time: 0.749, data_time: 0.013, memory: 10072, loss_rpn_cls: 0.0513, loss_rpn_bbox: 0.0908, loss_cls: 0.1487, acc: 94.2490, loss_bbox: 0.2162, loss: 0.5071
2020-11-17 22:04:34,004 - mmdet - INFO - Epoch [4][500/624]	lr: 1.000e-02, eta: 0:01:30, time: 0.749, data_time: 0.013, memory: 10072, loss_rpn_cls: 0.0216, loss_rpn_bbox: 0.0814, loss_cls: 0.1252, acc: 95.0127, loss_bbox: 0.2031, loss: 0.4313
2020-11-17 22:05:48,751 - mmdet - INFO - Epoch [4][600/624]	lr: 1.000e-02, eta: 0:00:17, time: 0.747, data_time: 0.013, memory: 10072, loss_rpn_cls: 0.0358, loss_rpn_bbox: 0.0819, loss_cls: 0.1411, acc: 94.7227, loss_bbox: 0.1982, loss: 0.4571
2020-11-17 22:06:06,552 - mmdet - INFO - Saving checkpoint at 4 epochs
2020-11-17 22:06:31,724 - mmdet - INFO - Evaluating bbox...
2020-11-17 22:06:36,379 - mmdet - INFO - Epoch [4][624/624]	lr: 1.000e-02, bbox_mAP: 0.6230, bbox_mAP_50: 0.7580, bbox_mAP_75: 0.6430, bbox_mAP_s: 0.1560, bbox_mAP_m: 0.5050, bbox_mAP_l: 0.7320, bbox_mAP_copypaste: 0.623 0.758 0.643 0.156 0.505 0.732
2020-11-17 22:07:05,544 - mmdet - INFO - Epoch(train) [4][71]	loss_rpn_cls: 0.0300, loss_rpn_bbox: 0.0896, loss_cls: 0.1544, acc: 93.8930, loss_bbox: 0.2352, loss: 0.5093
