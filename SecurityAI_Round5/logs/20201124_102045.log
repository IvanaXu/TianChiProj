2020-11-24 10:20:45,689 - mmdet - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.6.4 |Anaconda, Inc.| (default, Jan 16 2018, 18:10:19) [GCC 7.2.0]
CUDA available: True
CUDA_HOME: /usr/local/cuda
NVCC: Cuda compilation tools, release 10.0, V10.0.130
GPU 0: Tesla P100-PCIE-16GB
GCC: gcc (GCC) 5.3.0
PyTorch: 1.3.1+cu100
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - Intel(R) Math Kernel Library Version 2019.0.4 Product Build 20190411 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.20.5 (Git Hash 0125f28c61c1f822fd48570b4c1066f96fcb9b2e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CUDA Runtime 10.0
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.1
  - Build settings: BLAS=MKL, BUILD_NAMEDTENSOR=OFF, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Wno-stringop-overflow, DISABLE_NUMA=1, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=True, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

TorchVision: 0.4.2+cu100
OpenCV: 4.4.0
MMCV: 1.0.5
MMDetection: 2.3.0+788fa8d
MMDetection Compiler: GCC 7.3
MMDetection CUDA Compiler: 10.0
------------------------------------------------------------

2020-11-24 10:20:45,689 - mmdet - INFO - Distributed training: False
2020-11-24 10:20:46,077 - mmdet - INFO - Config:
model = dict(
    type='FasterRCNN',
    pretrained='torchvision://resnet50',
    backbone=dict(
        type='ResNet',
        depth=50,
        num_stages=4,
        out_indices=(0, 1, 2, 3),
        frozen_stages=1,
        norm_cfg=dict(type='BN', requires_grad=True),
        norm_eval=True,
        style='pytorch'),
    neck=dict(
        type='FPN',
        in_channels=[256, 512, 1024, 2048],
        out_channels=256,
        num_outs=5),
    rpn_head=dict(
        type='RPNHead',
        in_channels=256,
        feat_channels=256,
        anchor_generator=dict(
            type='AnchorGenerator',
            scales=[8],
            ratios=[0.5, 1.0, 2.0],
            strides=[4, 8, 16, 32, 64]),
        bbox_coder=dict(
            type='DeltaXYWHBBoxCoder',
            target_means=[0.0, 0.0, 0.0, 0.0],
            target_stds=[1.0, 1.0, 1.0, 1.0]),
        loss_cls=dict(
            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),
        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),
    roi_head=dict(
        type='StandardRoIHead',
        bbox_roi_extractor=dict(
            type='SingleRoIExtractor',
            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),
            out_channels=256,
            featmap_strides=[4, 8, 16, 32]),
        bbox_head=dict(
            type='Shared2FCBBoxHead',
            in_channels=256,
            fc_out_channels=1024,
            roi_feat_size=7,
            num_classes=2,
            bbox_coder=dict(
                type='DeltaXYWHBBoxCoder',
                target_means=[0.0, 0.0, 0.0, 0.0],
                target_stds=[0.1, 0.1, 0.2, 0.2]),
            reg_class_agnostic=False,
            loss_cls=dict(
                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),
            loss_bbox=dict(type='L1Loss', loss_weight=1.0))))
train_cfg = dict(
    rpn=dict(
        assigner=dict(
            type='MaxIoUAssigner',
            pos_iou_thr=0.7,
            neg_iou_thr=0.3,
            min_pos_iou=0.3,
            match_low_quality=True,
            ignore_iof_thr=-1),
        sampler=dict(
            type='RandomSampler',
            num=256,
            pos_fraction=0.5,
            neg_pos_ub=-1,
            add_gt_as_proposals=False),
        allowed_border=-1,
        pos_weight=-1,
        debug=False),
    rpn_proposal=dict(
        nms_across_levels=False,
        nms_pre=2000,
        nms_post=1000,
        max_num=1000,
        nms_thr=0.7,
        min_bbox_size=0),
    rcnn=dict(
        assigner=dict(
            type='MaxIoUAssigner',
            pos_iou_thr=0.5,
            neg_iou_thr=0.5,
            min_pos_iou=0.5,
            match_low_quality=False,
            ignore_iof_thr=-1),
        sampler=dict(
            type='RandomSampler',
            num=512,
            pos_fraction=0.25,
            neg_pos_ub=-1,
            add_gt_as_proposals=True),
        pos_weight=-1,
        debug=False))
test_cfg = dict(
    rpn=dict(
        nms_across_levels=False,
        nms_pre=1000,
        nms_post=1000,
        max_num=1000,
        nms_thr=0.7,
        min_bbox_size=0),
    rcnn=dict(
        score_thr=0.05,
        nms=dict(type='nms', iou_threshold=0.5),
        max_per_img=100))
dataset_type = 'CocoDataset'
data_root = 'data/coco/'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(type='Resize', img_scale=(1550, 1550), keep_ratio=True),
    dict(type='RandomFlip', flip_ratio=0.5),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='Pad', size_divisor=32),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(1550, 1550),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=2,
    workers_per_gpu=2,
    train=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_trai.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(type='Resize', img_scale=(1550, 1550), keep_ratio=True),
            dict(type='RandomFlip', flip_ratio=0.5),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
        ]),
    val=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_test.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1550, 1550),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_vals.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1550, 1550),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
evaluation = dict(interval=1, metric='bbox')
optimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0001)
optimizer_config = dict(grad_clip=None)
lr_config = dict(
    policy='step',
    warmup='linear',
    warmup_iters=500,
    warmup_ratio=0.001,
    step=[8, 11])
total_epochs = 4
checkpoint_config = dict(interval=4)
log_config = dict(interval=100, hooks=[dict(type='TextLoggerHook')])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = '/home/admin/.cache/torch/checkpoints/X.pth'
resume_from = None
workflow = [('train', 2), ('val', 1)]
work_dir = '/home/admin/jupyter/SecurityAI_Round5/data/work'
gpu_ids = range(0, 1)

2020-11-24 10:20:46,574 - mmdet - INFO - load model from: torchvision://resnet50
2020-11-24 10:20:54,469 - mmdet - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: fc.weight, fc.bias

2020-11-24 10:21:04,903 - mmdet - INFO - load checkpoint from /home/admin/.cache/torch/checkpoints/X.pth
2020-11-24 10:21:11,719 - mmdet - INFO - Start running, host: admin@fuxilabor_labor0_S4_Odps_S96_dsw_prepaid_cnsh_838_2020112401190, work_dir: /home/admin/jupyter/SecurityAI_Round5/data/work
2020-11-24 10:21:11,719 - mmdet - INFO - workflow: [('train', 2), ('val', 1)], max: 4 epochs
2020-11-24 10:22:29,151 - mmdet - INFO - Epoch [1][100/614]	lr: 1.988e-03, eta: 0:30:19, time: 0.772, data_time: 0.033, memory: 8021, loss_rpn_cls: 0.0017, loss_rpn_bbox: 0.0231, loss_cls: 0.0267, acc: 98.9375, loss_bbox: 0.0633, loss: 0.1148
2020-11-24 10:23:44,052 - mmdet - INFO - Epoch [1][200/614]	lr: 3.986e-03, eta: 0:28:36, time: 0.749, data_time: 0.012, memory: 9500, loss_rpn_cls: 0.0024, loss_rpn_bbox: 0.0233, loss_cls: 0.0297, acc: 98.7100, loss_bbox: 0.0639, loss: 0.1194
2020-11-24 10:24:59,083 - mmdet - INFO - Epoch [1][300/614]	lr: 5.984e-03, eta: 0:27:12, time: 0.750, data_time: 0.012, memory: 10074, loss_rpn_cls: 0.0017, loss_rpn_bbox: 0.0239, loss_cls: 0.0241, acc: 98.9932, loss_bbox: 0.0591, loss: 0.1088
2020-11-24 10:26:13,874 - mmdet - INFO - Epoch [1][400/614]	lr: 7.982e-03, eta: 0:25:52, time: 0.748, data_time: 0.012, memory: 10074, loss_rpn_cls: 0.0020, loss_rpn_bbox: 0.0232, loss_cls: 0.0284, acc: 98.7832, loss_bbox: 0.0632, loss: 0.1167
2020-11-24 10:27:28,923 - mmdet - INFO - Epoch [1][500/614]	lr: 9.980e-03, eta: 0:24:34, time: 0.750, data_time: 0.012, memory: 10074, loss_rpn_cls: 0.0024, loss_rpn_bbox: 0.0283, loss_cls: 0.0326, acc: 98.5713, loss_bbox: 0.0665, loss: 0.1298
2020-11-24 10:28:44,250 - mmdet - INFO - Epoch [1][600/614]	lr: 1.000e-02, eta: 0:23:19, time: 0.753, data_time: 0.012, memory: 11909, loss_rpn_cls: 0.0022, loss_rpn_bbox: 0.0280, loss_cls: 0.0339, acc: 98.5771, loss_bbox: 0.0713, loss: 0.1355
2020-11-24 10:29:24,574 - mmdet - INFO - Evaluating bbox...
2020-11-24 10:29:27,222 - mmdet - INFO - Epoch [1][614/614]	lr: 1.000e-02, bbox_mAP: 0.8390, bbox_mAP_50: 0.8900, bbox_mAP_75: 0.8850, bbox_mAP_s: 0.6030, bbox_mAP_m: 0.9010, bbox_mAP_l: 0.9080, bbox_mAP_copypaste: 0.839 0.890 0.885 0.603 0.901 0.908
2020-11-24 10:30:44,679 - mmdet - INFO - Epoch [2][100/614]	lr: 1.000e-02, eta: 0:21:32, time: 0.773, data_time: 0.034, memory: 11909, loss_rpn_cls: 0.0021, loss_rpn_bbox: 0.0276, loss_cls: 0.0302, acc: 98.7256, loss_bbox: 0.0687, loss: 0.1287
2020-11-24 10:31:59,781 - mmdet - INFO - Epoch [2][200/614]	lr: 1.000e-02, eta: 0:20:19, time: 0.751, data_time: 0.012, memory: 11909, loss_rpn_cls: 0.0021, loss_rpn_bbox: 0.0305, loss_cls: 0.0296, acc: 98.7090, loss_bbox: 0.0675, loss: 0.1296
2020-11-24 10:33:14,740 - mmdet - INFO - Epoch [2][300/614]	lr: 1.000e-02, eta: 0:19:06, time: 0.750, data_time: 0.012, memory: 11909, loss_rpn_cls: 0.0022, loss_rpn_bbox: 0.0299, loss_cls: 0.0313, acc: 98.6230, loss_bbox: 0.0660, loss: 0.1295
2020-11-24 10:34:29,564 - mmdet - INFO - Epoch [2][400/614]	lr: 1.000e-02, eta: 0:17:52, time: 0.748, data_time: 0.012, memory: 11909, loss_rpn_cls: 0.0019, loss_rpn_bbox: 0.0301, loss_cls: 0.0309, acc: 98.7158, loss_bbox: 0.0713, loss: 0.1341
2020-11-24 10:35:44,553 - mmdet - INFO - Epoch [2][500/614]	lr: 1.000e-02, eta: 0:16:39, time: 0.750, data_time: 0.012, memory: 11909, loss_rpn_cls: 0.0023, loss_rpn_bbox: 0.0265, loss_cls: 0.0309, acc: 98.6689, loss_bbox: 0.0666, loss: 0.1262
2020-11-24 10:36:59,439 - mmdet - INFO - Epoch [2][600/614]	lr: 1.000e-02, eta: 0:15:25, time: 0.749, data_time: 0.012, memory: 11909, loss_rpn_cls: 0.0021, loss_rpn_bbox: 0.0290, loss_cls: 0.0301, acc: 98.7168, loss_bbox: 0.0712, loss: 0.1324
2020-11-24 10:37:39,839 - mmdet - INFO - Evaluating bbox...
2020-11-24 10:37:42,391 - mmdet - INFO - Epoch [2][614/614]	lr: 1.000e-02, bbox_mAP: 0.8390, bbox_mAP_50: 0.8950, bbox_mAP_75: 0.8900, bbox_mAP_s: 0.6030, bbox_mAP_m: 0.8950, bbox_mAP_l: 0.9060, bbox_mAP_copypaste: 0.839 0.895 0.890 0.603 0.895 0.906
2020-11-24 10:38:19,288 - mmdet - INFO - Epoch(train) [2][93]	loss_rpn_cls: 0.0025, loss_rpn_bbox: 0.0300, loss_cls: 0.0297, acc: 98.7914, loss_bbox: 0.0738, loss: 0.1359
2020-11-24 10:39:37,012 - mmdet - INFO - Epoch [3][100/614]	lr: 1.000e-02, eta: 0:13:53, time: 0.775, data_time: 0.033, memory: 11909, loss_rpn_cls: 0.0019, loss_rpn_bbox: 0.0302, loss_cls: 0.0275, acc: 98.8555, loss_bbox: 0.0703, loss: 0.1298
2020-11-24 10:40:51,897 - mmdet - INFO - Epoch [3][200/614]	lr: 1.000e-02, eta: 0:12:40, time: 0.749, data_time: 0.012, memory: 11909, loss_rpn_cls: 0.0019, loss_rpn_bbox: 0.0301, loss_cls: 0.0322, acc: 98.6143, loss_bbox: 0.0742, loss: 0.1384
2020-11-24 10:42:06,822 - mmdet - INFO - Epoch [3][300/614]	lr: 1.000e-02, eta: 0:11:27, time: 0.749, data_time: 0.012, memory: 11909, loss_rpn_cls: 0.0022, loss_rpn_bbox: 0.0257, loss_cls: 0.0329, acc: 98.6094, loss_bbox: 0.0693, loss: 0.1301
2020-11-24 10:43:21,663 - mmdet - INFO - Epoch [3][400/614]	lr: 1.000e-02, eta: 0:10:13, time: 0.748, data_time: 0.012, memory: 11909, loss_rpn_cls: 0.0026, loss_rpn_bbox: 0.0299, loss_cls: 0.0358, acc: 98.5225, loss_bbox: 0.0733, loss: 0.1416
2020-11-24 10:44:36,471 - mmdet - INFO - Epoch [3][500/614]	lr: 1.000e-02, eta: 0:08:59, time: 0.748, data_time: 0.012, memory: 11909, loss_rpn_cls: 0.0023, loss_rpn_bbox: 0.0297, loss_cls: 0.0320, acc: 98.5596, loss_bbox: 0.0699, loss: 0.1339
2020-11-24 10:45:51,329 - mmdet - INFO - Epoch [3][600/614]	lr: 1.000e-02, eta: 0:07:45, time: 0.749, data_time: 0.012, memory: 11909, loss_rpn_cls: 0.0019, loss_rpn_bbox: 0.0266, loss_cls: 0.0250, acc: 98.9824, loss_bbox: 0.0659, loss: 0.1194
2020-11-24 10:46:31,768 - mmdet - INFO - Evaluating bbox...
2020-11-24 10:46:34,359 - mmdet - INFO - Epoch [3][614/614]	lr: 1.000e-02, bbox_mAP: 0.8410, bbox_mAP_50: 0.8900, bbox_mAP_75: 0.8850, bbox_mAP_s: 0.6140, bbox_mAP_m: 0.9000, bbox_mAP_l: 0.9090, bbox_mAP_copypaste: 0.841 0.890 0.885 0.614 0.900 0.909
2020-11-24 10:47:51,816 - mmdet - INFO - Epoch [4][100/614]	lr: 1.000e-02, eta: 0:06:19, time: 0.773, data_time: 0.033, memory: 11909, loss_rpn_cls: 0.0023, loss_rpn_bbox: 0.0303, loss_cls: 0.0279, acc: 98.8096, loss_bbox: 0.0668, loss: 0.1274
2020-11-24 10:49:06,659 - mmdet - INFO - Epoch [4][200/614]	lr: 1.000e-02, eta: 0:05:05, time: 0.748, data_time: 0.012, memory: 11909, loss_rpn_cls: 0.0021, loss_rpn_bbox: 0.0278, loss_cls: 0.0287, acc: 98.7637, loss_bbox: 0.0713, loss: 0.1298
2020-11-24 10:50:21,578 - mmdet - INFO - Epoch [4][300/614]	lr: 1.000e-02, eta: 0:03:52, time: 0.749, data_time: 0.012, memory: 11909, loss_rpn_cls: 0.0026, loss_rpn_bbox: 0.0298, loss_cls: 0.0322, acc: 98.6982, loss_bbox: 0.0687, loss: 0.1333
2020-11-24 10:51:36,350 - mmdet - INFO - Epoch [4][400/614]	lr: 1.000e-02, eta: 0:02:38, time: 0.748, data_time: 0.012, memory: 11909, loss_rpn_cls: 0.0025, loss_rpn_bbox: 0.0320, loss_cls: 0.0328, acc: 98.5957, loss_bbox: 0.0757, loss: 0.1429
2020-11-24 10:52:51,072 - mmdet - INFO - Epoch [4][500/614]	lr: 1.000e-02, eta: 0:01:24, time: 0.747, data_time: 0.012, memory: 11909, loss_rpn_cls: 0.0040, loss_rpn_bbox: 0.0264, loss_cls: 0.0292, acc: 98.8398, loss_bbox: 0.0680, loss: 0.1275
2020-11-24 10:54:06,151 - mmdet - INFO - Epoch [4][600/614]	lr: 1.000e-02, eta: 0:00:10, time: 0.751, data_time: 0.012, memory: 11909, loss_rpn_cls: 0.0026, loss_rpn_bbox: 0.0320, loss_cls: 0.0317, acc: 98.6484, loss_bbox: 0.0754, loss: 0.1416
2020-11-24 10:54:16,537 - mmdet - INFO - Saving checkpoint at 4 epochs
2020-11-24 10:54:48,372 - mmdet - INFO - Evaluating bbox...
2020-11-24 10:54:51,046 - mmdet - INFO - Epoch [4][614/614]	lr: 1.000e-02, bbox_mAP: 0.8440, bbox_mAP_50: 0.8950, bbox_mAP_75: 0.8900, bbox_mAP_s: 0.6110, bbox_mAP_m: 0.9040, bbox_mAP_l: 0.9100, bbox_mAP_copypaste: 0.844 0.895 0.890 0.611 0.904 0.910
2020-11-24 10:55:27,770 - mmdet - INFO - Epoch(train) [4][93]	loss_rpn_cls: 0.0027, loss_rpn_bbox: 0.0282, loss_cls: 0.0278, acc: 98.8670, loss_bbox: 0.0675, loss: 0.1262
