2020-11-22 03:24:41,485 - mmdet - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.6.4 |Anaconda, Inc.| (default, Jan 16 2018, 18:10:19) [GCC 7.2.0]
CUDA available: True
CUDA_HOME: /usr/local/cuda
NVCC: Cuda compilation tools, release 10.0, V10.0.130
GPU 0: Tesla P100-PCIE-16GB
GCC: gcc (GCC) 5.3.0
PyTorch: 1.3.1+cu100
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - Intel(R) Math Kernel Library Version 2019.0.4 Product Build 20190411 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.20.5 (Git Hash 0125f28c61c1f822fd48570b4c1066f96fcb9b2e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CUDA Runtime 10.0
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.1
  - Build settings: BLAS=MKL, BUILD_NAMEDTENSOR=OFF, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Wno-stringop-overflow, DISABLE_NUMA=1, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=True, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

TorchVision: 0.4.2+cu100
OpenCV: 4.4.0
MMCV: 1.0.5
MMDetection: 2.3.0+788fa8d
MMDetection Compiler: GCC 7.3
MMDetection CUDA Compiler: 10.0
------------------------------------------------------------

2020-11-22 03:24:41,485 - mmdet - INFO - Distributed training: False
2020-11-22 03:24:41,879 - mmdet - INFO - Config:
model = dict(
    type='FasterRCNN',
    pretrained='torchvision://resnet50',
    backbone=dict(
        type='ResNet',
        depth=50,
        num_stages=4,
        out_indices=(0, 1, 2, 3),
        frozen_stages=1,
        norm_cfg=dict(type='BN', requires_grad=True),
        norm_eval=True,
        style='pytorch'),
    neck=dict(
        type='FPN',
        in_channels=[256, 512, 1024, 2048],
        out_channels=256,
        num_outs=5),
    rpn_head=dict(
        type='RPNHead',
        in_channels=256,
        feat_channels=256,
        anchor_generator=dict(
            type='AnchorGenerator',
            scales=[8],
            ratios=[0.5, 1.0, 2.0],
            strides=[4, 8, 16, 32, 64]),
        bbox_coder=dict(
            type='DeltaXYWHBBoxCoder',
            target_means=[0.0, 0.0, 0.0, 0.0],
            target_stds=[1.0, 1.0, 1.0, 1.0]),
        loss_cls=dict(
            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),
        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),
    roi_head=dict(
        type='StandardRoIHead',
        bbox_roi_extractor=dict(
            type='SingleRoIExtractor',
            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),
            out_channels=256,
            featmap_strides=[4, 8, 16, 32]),
        bbox_head=dict(
            type='Shared2FCBBoxHead',
            in_channels=256,
            fc_out_channels=1024,
            roi_feat_size=7,
            num_classes=2,
            bbox_coder=dict(
                type='DeltaXYWHBBoxCoder',
                target_means=[0.0, 0.0, 0.0, 0.0],
                target_stds=[0.1, 0.1, 0.2, 0.2]),
            reg_class_agnostic=False,
            loss_cls=dict(
                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),
            loss_bbox=dict(type='L1Loss', loss_weight=1.0))))
train_cfg = dict(
    rpn=dict(
        assigner=dict(
            type='MaxIoUAssigner',
            pos_iou_thr=0.7,
            neg_iou_thr=0.3,
            min_pos_iou=0.3,
            match_low_quality=True,
            ignore_iof_thr=-1),
        sampler=dict(
            type='RandomSampler',
            num=256,
            pos_fraction=0.5,
            neg_pos_ub=-1,
            add_gt_as_proposals=False),
        allowed_border=-1,
        pos_weight=-1,
        debug=False),
    rpn_proposal=dict(
        nms_across_levels=False,
        nms_pre=2000,
        nms_post=1000,
        max_num=1000,
        nms_thr=0.7,
        min_bbox_size=0),
    rcnn=dict(
        assigner=dict(
            type='MaxIoUAssigner',
            pos_iou_thr=0.5,
            neg_iou_thr=0.5,
            min_pos_iou=0.5,
            match_low_quality=False,
            ignore_iof_thr=-1),
        sampler=dict(
            type='RandomSampler',
            num=512,
            pos_fraction=0.25,
            neg_pos_ub=-1,
            add_gt_as_proposals=True),
        pos_weight=-1,
        debug=False))
test_cfg = dict(
    rpn=dict(
        nms_across_levels=False,
        nms_pre=1000,
        nms_post=1000,
        max_num=1000,
        nms_thr=0.7,
        min_bbox_size=0),
    rcnn=dict(
        score_thr=0.05,
        nms=dict(type='nms', iou_threshold=0.5),
        max_per_img=100))
dataset_type = 'CocoDataset'
data_root = 'data/coco/'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(type='Resize', img_scale=(1550, 1550), keep_ratio=True),
    dict(type='RandomFlip', flip_ratio=0.5),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='Pad', size_divisor=32),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(1550, 1550),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=2,
    workers_per_gpu=2,
    train=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_trai.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(type='Resize', img_scale=(1550, 1550), keep_ratio=True),
            dict(type='RandomFlip', flip_ratio=0.5),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
        ]),
    val=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_test.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1550, 1550),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_vals.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1550, 1550),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
evaluation = dict(interval=1, metric='bbox')
optimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0001)
optimizer_config = dict(grad_clip=None)
lr_config = dict(
    policy='step',
    warmup='linear',
    warmup_iters=500,
    warmup_ratio=0.001,
    step=[8, 11])
total_epochs = 4
checkpoint_config = dict(interval=4)
log_config = dict(interval=100, hooks=[dict(type='TextLoggerHook')])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = '/home/admin/.cache/torch/checkpoints/X.pth'
resume_from = None
workflow = [('train', 2), ('val', 1)]
work_dir = '/home/admin/jupyter/SecurityAI_Round5/data/work'
gpu_ids = range(0, 1)

2020-11-22 03:24:42,376 - mmdet - INFO - load model from: torchvision://resnet50
2020-11-22 03:24:50,190 - mmdet - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: fc.weight, fc.bias

2020-11-22 03:25:00,396 - mmdet - INFO - load checkpoint from /home/admin/.cache/torch/checkpoints/X.pth
2020-11-22 03:25:07,081 - mmdet - INFO - Start running, host: admin@fuxilabor_labor0_S4_Odps_S96_dsw_prepaid_cnsh_838_2020112114585, work_dir: /home/admin/jupyter/SecurityAI_Round5/data/work
2020-11-22 03:25:07,081 - mmdet - INFO - workflow: [('train', 2), ('val', 1)], max: 4 epochs
2020-11-22 03:26:24,389 - mmdet - INFO - Epoch [1][100/636]	lr: 1.988e-03, eta: 0:31:24, time: 0.771, data_time: 0.034, memory: 8575, loss_rpn_cls: 0.0044, loss_rpn_bbox: 0.0349, loss_cls: 0.0432, acc: 98.2695, loss_bbox: 0.0886, loss: 0.1710
2020-11-22 03:27:39,038 - mmdet - INFO - Epoch [1][200/636]	lr: 3.986e-03, eta: 0:29:38, time: 0.746, data_time: 0.012, memory: 10076, loss_rpn_cls: 0.0039, loss_rpn_bbox: 0.0314, loss_cls: 0.0361, acc: 98.5410, loss_bbox: 0.0761, loss: 0.1475
2020-11-22 03:28:53,769 - mmdet - INFO - Epoch [1][300/636]	lr: 5.984e-03, eta: 0:28:14, time: 0.747, data_time: 0.012, memory: 10076, loss_rpn_cls: 0.0039, loss_rpn_bbox: 0.0328, loss_cls: 0.0442, acc: 98.1982, loss_bbox: 0.0865, loss: 0.1675
2020-11-22 03:30:08,398 - mmdet - INFO - Epoch [1][400/636]	lr: 7.982e-03, eta: 0:26:53, time: 0.746, data_time: 0.012, memory: 10076, loss_rpn_cls: 0.0029, loss_rpn_bbox: 0.0297, loss_cls: 0.0279, acc: 98.8926, loss_bbox: 0.0784, loss: 0.1389
2020-11-22 03:31:22,985 - mmdet - INFO - Epoch [1][500/636]	lr: 9.980e-03, eta: 0:25:35, time: 0.746, data_time: 0.012, memory: 10076, loss_rpn_cls: 0.0024, loss_rpn_bbox: 0.0364, loss_cls: 0.0360, acc: 98.5107, loss_bbox: 0.0930, loss: 0.1678
2020-11-22 03:32:37,976 - mmdet - INFO - Epoch [1][600/636]	lr: 1.000e-02, eta: 0:24:20, time: 0.750, data_time: 0.012, memory: 11886, loss_rpn_cls: 0.0040, loss_rpn_bbox: 0.0376, loss_cls: 0.0433, acc: 98.1719, loss_bbox: 0.0992, loss: 0.1841
2020-11-22 03:33:28,069 - mmdet - INFO - Evaluating bbox...
2020-11-22 03:33:30,899 - mmdet - INFO - Epoch [1][636/636]	lr: 1.000e-02, bbox_mAP: 0.7710, bbox_mAP_50: 0.8550, bbox_mAP_75: 0.8290, bbox_mAP_s: 0.4280, bbox_mAP_m: 0.8000, bbox_mAP_l: 0.8640, bbox_mAP_copypaste: 0.771 0.855 0.829 0.428 0.800 0.864
2020-11-22 03:34:48,006 - mmdet - INFO - Epoch [2][100/636]	lr: 1.000e-02, eta: 0:21:36, time: 0.769, data_time: 0.034, memory: 11886, loss_rpn_cls: 0.0120, loss_rpn_bbox: 0.0444, loss_cls: 0.0578, acc: 97.8721, loss_bbox: 0.1050, loss: 0.2192
2020-11-22 03:36:02,416 - mmdet - INFO - Epoch [2][200/636]	lr: 1.000e-02, eta: 0:20:29, time: 0.744, data_time: 0.012, memory: 11911, loss_rpn_cls: 0.0209, loss_rpn_bbox: 0.0489, loss_cls: 0.0690, acc: 97.3447, loss_bbox: 0.1106, loss: 0.2494
2020-11-22 03:37:16,738 - mmdet - INFO - Epoch [2][300/636]	lr: 1.000e-02, eta: 0:19:21, time: 0.743, data_time: 0.012, memory: 11911, loss_rpn_cls: 0.0079, loss_rpn_bbox: 0.0424, loss_cls: 0.0463, acc: 98.2070, loss_bbox: 0.0989, loss: 0.1955
2020-11-22 03:38:30,937 - mmdet - INFO - Epoch [2][400/636]	lr: 1.000e-02, eta: 0:18:12, time: 0.742, data_time: 0.012, memory: 11911, loss_rpn_cls: 0.0109, loss_rpn_bbox: 0.0399, loss_cls: 0.0572, acc: 97.7480, loss_bbox: 0.0966, loss: 0.2045
2020-11-22 03:39:45,288 - mmdet - INFO - Epoch [2][500/636]	lr: 1.000e-02, eta: 0:17:02, time: 0.744, data_time: 0.012, memory: 11911, loss_rpn_cls: 0.0060, loss_rpn_bbox: 0.0393, loss_cls: 0.0419, acc: 98.3145, loss_bbox: 0.0902, loss: 0.1774
2020-11-22 03:40:59,737 - mmdet - INFO - Epoch [2][600/636]	lr: 1.000e-02, eta: 0:15:51, time: 0.744, data_time: 0.012, memory: 11911, loss_rpn_cls: 0.0064, loss_rpn_bbox: 0.0438, loss_cls: 0.0529, acc: 97.9385, loss_bbox: 0.1033, loss: 0.2065
2020-11-22 03:41:49,724 - mmdet - INFO - Evaluating bbox...
2020-11-22 03:41:52,429 - mmdet - INFO - Epoch [2][636/636]	lr: 1.000e-02, bbox_mAP: 0.7420, bbox_mAP_50: 0.8210, bbox_mAP_75: 0.7950, bbox_mAP_s: 0.3750, bbox_mAP_m: 0.7600, bbox_mAP_l: 0.8430, bbox_mAP_copypaste: 0.742 0.821 0.795 0.375 0.760 0.843
2020-11-22 03:42:21,553 - mmdet - INFO - Epoch(train) [2][72]	loss_rpn_cls: 0.0149, loss_rpn_bbox: 0.0405, loss_cls: 0.0663, acc: 97.4026, loss_bbox: 0.1051, loss: 0.2268
2020-11-22 03:43:38,587 - mmdet - INFO - Epoch [3][100/636]	lr: 1.000e-02, eta: 0:13:53, time: 0.768, data_time: 0.033, memory: 11911, loss_rpn_cls: 0.0067, loss_rpn_bbox: 0.0421, loss_cls: 0.0550, acc: 97.7314, loss_bbox: 0.1053, loss: 0.2091
2020-11-22 03:44:53,418 - mmdet - INFO - Epoch [3][200/636]	lr: 1.000e-02, eta: 0:12:45, time: 0.748, data_time: 0.015, memory: 11911, loss_rpn_cls: 0.0033, loss_rpn_bbox: 0.0381, loss_cls: 0.0361, acc: 98.5273, loss_bbox: 0.0955, loss: 0.1730
2020-11-22 03:46:07,830 - mmdet - INFO - Epoch [3][300/636]	lr: 1.000e-02, eta: 0:11:35, time: 0.744, data_time: 0.012, memory: 11911, loss_rpn_cls: 0.0031, loss_rpn_bbox: 0.0350, loss_cls: 0.0381, acc: 98.4229, loss_bbox: 0.0888, loss: 0.1650
2020-11-22 03:47:22,615 - mmdet - INFO - Epoch [3][400/636]	lr: 1.000e-02, eta: 0:10:25, time: 0.748, data_time: 0.012, memory: 11911, loss_rpn_cls: 0.0040, loss_rpn_bbox: 0.0367, loss_cls: 0.0394, acc: 98.3652, loss_bbox: 0.0968, loss: 0.1769
2020-11-22 03:48:37,114 - mmdet - INFO - Epoch [3][500/636]	lr: 1.000e-02, eta: 0:09:15, time: 0.745, data_time: 0.012, memory: 11911, loss_rpn_cls: 0.0041, loss_rpn_bbox: 0.0377, loss_cls: 0.0448, acc: 98.1709, loss_bbox: 0.0981, loss: 0.1847
2020-11-22 03:49:51,530 - mmdet - INFO - Epoch [3][600/636]	lr: 1.000e-02, eta: 0:08:04, time: 0.744, data_time: 0.012, memory: 11911, loss_rpn_cls: 0.0042, loss_rpn_bbox: 0.0404, loss_cls: 0.0424, acc: 98.2910, loss_bbox: 0.0921, loss: 0.1791
2020-11-22 03:50:41,454 - mmdet - INFO - Evaluating bbox...
2020-11-22 03:50:44,171 - mmdet - INFO - Epoch [3][636/636]	lr: 1.000e-02, bbox_mAP: 0.7620, bbox_mAP_50: 0.8380, bbox_mAP_75: 0.8130, bbox_mAP_s: 0.4070, bbox_mAP_m: 0.7950, bbox_mAP_l: 0.8630, bbox_mAP_copypaste: 0.762 0.838 0.813 0.407 0.795 0.863
2020-11-22 03:52:01,163 - mmdet - INFO - Epoch [4][100/636]	lr: 1.000e-02, eta: 0:06:20, time: 0.768, data_time: 0.033, memory: 11911, loss_rpn_cls: 0.0029, loss_rpn_bbox: 0.0399, loss_cls: 0.0465, acc: 98.0674, loss_bbox: 0.1049, loss: 0.1942
2020-11-22 03:53:15,697 - mmdet - INFO - Epoch [4][200/636]	lr: 1.000e-02, eta: 0:05:10, time: 0.745, data_time: 0.012, memory: 11911, loss_rpn_cls: 0.0032, loss_rpn_bbox: 0.0347, loss_cls: 0.0343, acc: 98.6270, loss_bbox: 0.0849, loss: 0.1572
2020-11-22 03:54:30,278 - mmdet - INFO - Epoch [4][300/636]	lr: 1.000e-02, eta: 0:03:59, time: 0.746, data_time: 0.012, memory: 11911, loss_rpn_cls: 0.0036, loss_rpn_bbox: 0.0369, loss_cls: 0.0394, acc: 98.3906, loss_bbox: 0.0907, loss: 0.1705
2020-11-22 03:55:44,729 - mmdet - INFO - Epoch [4][400/636]	lr: 1.000e-02, eta: 0:02:48, time: 0.744, data_time: 0.012, memory: 11911, loss_rpn_cls: 0.0054, loss_rpn_bbox: 0.0374, loss_cls: 0.0433, acc: 98.1396, loss_bbox: 0.0895, loss: 0.1756
2020-11-22 03:56:59,232 - mmdet - INFO - Epoch [4][500/636]	lr: 1.000e-02, eta: 0:01:37, time: 0.745, data_time: 0.012, memory: 11911, loss_rpn_cls: 0.0055, loss_rpn_bbox: 0.0369, loss_cls: 0.0394, acc: 98.4180, loss_bbox: 0.0859, loss: 0.1677
2020-11-22 03:58:13,614 - mmdet - INFO - Epoch [4][600/636]	lr: 1.000e-02, eta: 0:00:25, time: 0.744, data_time: 0.012, memory: 11911, loss_rpn_cls: 0.0040, loss_rpn_bbox: 0.0366, loss_cls: 0.0366, acc: 98.4746, loss_bbox: 0.0837, loss: 0.1609
2020-11-22 03:58:40,439 - mmdet - INFO - Saving checkpoint at 4 epochs
2020-11-22 03:59:05,550 - mmdet - INFO - Evaluating bbox...
2020-11-22 03:59:08,269 - mmdet - INFO - Epoch [4][636/636]	lr: 1.000e-02, bbox_mAP: 0.7560, bbox_mAP_50: 0.8300, bbox_mAP_75: 0.8090, bbox_mAP_s: 0.4150, bbox_mAP_m: 0.7800, bbox_mAP_l: 0.8550, bbox_mAP_copypaste: 0.756 0.830 0.809 0.415 0.780 0.855
2020-11-22 03:59:37,320 - mmdet - INFO - Epoch(train) [4][72]	loss_rpn_cls: 0.0090, loss_rpn_bbox: 0.0379, loss_cls: 0.0523, acc: 97.9126, loss_bbox: 0.0990, loss: 0.1981
