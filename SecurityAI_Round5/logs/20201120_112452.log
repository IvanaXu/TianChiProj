2020-11-20 11:24:52,642 - mmdet - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.6.4 |Anaconda, Inc.| (default, Jan 16 2018, 18:10:19) [GCC 7.2.0]
CUDA available: True
CUDA_HOME: /usr/local/cuda
NVCC: Cuda compilation tools, release 10.0, V10.0.130
GPU 0: Tesla P100-PCIE-16GB
GCC: gcc (GCC) 5.3.0
PyTorch: 1.3.1+cu100
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - Intel(R) Math Kernel Library Version 2019.0.4 Product Build 20190411 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.20.5 (Git Hash 0125f28c61c1f822fd48570b4c1066f96fcb9b2e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CUDA Runtime 10.0
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.1
  - Build settings: BLAS=MKL, BUILD_NAMEDTENSOR=OFF, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Wno-stringop-overflow, DISABLE_NUMA=1, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=True, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

TorchVision: 0.4.2+cu100
OpenCV: 4.4.0
MMCV: 1.0.5
MMDetection: 2.3.0+788fa8d
MMDetection Compiler: GCC 7.3
MMDetection CUDA Compiler: 10.0
------------------------------------------------------------

2020-11-20 11:24:52,642 - mmdet - INFO - Distributed training: False
2020-11-20 11:24:53,030 - mmdet - INFO - Config:
model = dict(
    type='FasterRCNN',
    pretrained='torchvision://resnet50',
    backbone=dict(
        type='ResNet',
        depth=50,
        num_stages=4,
        out_indices=(0, 1, 2, 3),
        frozen_stages=1,
        norm_cfg=dict(type='BN', requires_grad=True),
        norm_eval=True,
        style='pytorch'),
    neck=dict(
        type='FPN',
        in_channels=[256, 512, 1024, 2048],
        out_channels=256,
        num_outs=5),
    rpn_head=dict(
        type='RPNHead',
        in_channels=256,
        feat_channels=256,
        anchor_generator=dict(
            type='AnchorGenerator',
            scales=[8],
            ratios=[0.5, 1.0, 2.0],
            strides=[4, 8, 16, 32, 64]),
        bbox_coder=dict(
            type='DeltaXYWHBBoxCoder',
            target_means=[0.0, 0.0, 0.0, 0.0],
            target_stds=[1.0, 1.0, 1.0, 1.0]),
        loss_cls=dict(
            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),
        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),
    roi_head=dict(
        type='StandardRoIHead',
        bbox_roi_extractor=dict(
            type='SingleRoIExtractor',
            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),
            out_channels=256,
            featmap_strides=[4, 8, 16, 32]),
        bbox_head=dict(
            type='Shared2FCBBoxHead',
            in_channels=256,
            fc_out_channels=1024,
            roi_feat_size=7,
            num_classes=2,
            bbox_coder=dict(
                type='DeltaXYWHBBoxCoder',
                target_means=[0.0, 0.0, 0.0, 0.0],
                target_stds=[0.1, 0.1, 0.2, 0.2]),
            reg_class_agnostic=False,
            loss_cls=dict(
                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),
            loss_bbox=dict(type='L1Loss', loss_weight=1.0))))
train_cfg = dict(
    rpn=dict(
        assigner=dict(
            type='MaxIoUAssigner',
            pos_iou_thr=0.7,
            neg_iou_thr=0.3,
            min_pos_iou=0.3,
            match_low_quality=True,
            ignore_iof_thr=-1),
        sampler=dict(
            type='RandomSampler',
            num=256,
            pos_fraction=0.5,
            neg_pos_ub=-1,
            add_gt_as_proposals=False),
        allowed_border=-1,
        pos_weight=-1,
        debug=False),
    rpn_proposal=dict(
        nms_across_levels=False,
        nms_pre=2000,
        nms_post=1000,
        max_num=1000,
        nms_thr=0.7,
        min_bbox_size=0),
    rcnn=dict(
        assigner=dict(
            type='MaxIoUAssigner',
            pos_iou_thr=0.5,
            neg_iou_thr=0.5,
            min_pos_iou=0.5,
            match_low_quality=False,
            ignore_iof_thr=-1),
        sampler=dict(
            type='RandomSampler',
            num=512,
            pos_fraction=0.25,
            neg_pos_ub=-1,
            add_gt_as_proposals=True),
        pos_weight=-1,
        debug=False))
test_cfg = dict(
    rpn=dict(
        nms_across_levels=False,
        nms_pre=1000,
        nms_post=1000,
        max_num=1000,
        nms_thr=0.7,
        min_bbox_size=0),
    rcnn=dict(
        score_thr=0.05,
        nms=dict(type='nms', iou_threshold=0.5),
        max_per_img=100))
dataset_type = 'CocoDataset'
data_root = 'data/coco/'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(type='Resize', img_scale=(1550, 1550), keep_ratio=True),
    dict(type='RandomFlip', flip_ratio=0.5),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='Pad', size_divisor=32),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(1550, 1550),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=2,
    workers_per_gpu=2,
    train=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_trai.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(type='Resize', img_scale=(1550, 1550), keep_ratio=True),
            dict(type='RandomFlip', flip_ratio=0.5),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
        ]),
    val=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_test.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1550, 1550),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_vals.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1550, 1550),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
evaluation = dict(interval=1, metric='bbox')
optimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0001)
optimizer_config = dict(grad_clip=None)
lr_config = dict(
    policy='step',
    warmup='linear',
    warmup_iters=500,
    warmup_ratio=0.001,
    step=[8, 11])
total_epochs = 4
checkpoint_config = dict(interval=4)
log_config = dict(interval=100, hooks=[dict(type='TextLoggerHook')])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = '/home/admin/.cache/torch/checkpoints/X.pth'
resume_from = None
workflow = [('train', 2), ('val', 1)]
work_dir = '/home/admin/jupyter/SecurityAI_Round5/data/work'
gpu_ids = range(0, 1)

2020-11-20 11:24:53,529 - mmdet - INFO - load model from: torchvision://resnet50
2020-11-20 11:25:01,080 - mmdet - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: fc.weight, fc.bias

2020-11-20 11:25:11,183 - mmdet - INFO - load checkpoint from /home/admin/.cache/torch/checkpoints/X.pth
2020-11-20 11:25:18,010 - mmdet - INFO - Start running, host: admin@fuxilabor_labor0_S4_Odps_S96_dsw_prepaid_cnsh_838_2020112000281, work_dir: /home/admin/jupyter/SecurityAI_Round5/data/work
2020-11-20 11:25:18,010 - mmdet - INFO - workflow: [('train', 2), ('val', 1)], max: 4 epochs
2020-11-20 11:26:35,667 - mmdet - INFO - Epoch [1][100/615]	lr: 1.988e-03, eta: 0:30:28, time: 0.775, data_time: 0.034, memory: 8830, loss_rpn_cls: 0.0028, loss_rpn_bbox: 0.0318, loss_cls: 0.0368, acc: 98.4648, loss_bbox: 0.0828, loss: 0.1542
2020-11-20 11:27:50,627 - mmdet - INFO - Epoch [1][200/615]	lr: 3.986e-03, eta: 0:28:42, time: 0.750, data_time: 0.012, memory: 10074, loss_rpn_cls: 0.0032, loss_rpn_bbox: 0.0311, loss_cls: 0.0318, acc: 98.7178, loss_bbox: 0.0766, loss: 0.1428
2020-11-20 11:29:05,598 - mmdet - INFO - Epoch [1][300/615]	lr: 5.984e-03, eta: 0:27:17, time: 0.750, data_time: 0.012, memory: 10074, loss_rpn_cls: 0.0032, loss_rpn_bbox: 0.0307, loss_cls: 0.0402, acc: 98.2861, loss_bbox: 0.0832, loss: 0.1574
2020-11-20 11:30:20,807 - mmdet - INFO - Epoch [1][400/615]	lr: 7.982e-03, eta: 0:25:58, time: 0.752, data_time: 0.013, memory: 11909, loss_rpn_cls: 0.0022, loss_rpn_bbox: 0.0319, loss_cls: 0.0388, acc: 98.3164, loss_bbox: 0.0773, loss: 0.1501
2020-11-20 11:31:35,866 - mmdet - INFO - Epoch [1][500/615]	lr: 9.980e-03, eta: 0:24:40, time: 0.751, data_time: 0.012, memory: 11909, loss_rpn_cls: 0.0024, loss_rpn_bbox: 0.0348, loss_cls: 0.0357, acc: 98.4355, loss_bbox: 0.0866, loss: 0.1594
2020-11-20 11:32:50,872 - mmdet - INFO - Epoch [1][600/615]	lr: 1.000e-02, eta: 0:23:23, time: 0.750, data_time: 0.012, memory: 11909, loss_rpn_cls: 0.0038, loss_rpn_bbox: 0.0387, loss_cls: 0.0374, acc: 98.4688, loss_bbox: 0.0939, loss: 0.1739
2020-11-20 11:33:25,658 - mmdet - INFO - Evaluating bbox...
2020-11-20 11:33:27,219 - mmdet - INFO - Epoch [1][615/615]	lr: 1.000e-02, bbox_mAP: 0.8420, bbox_mAP_50: 0.9100, bbox_mAP_75: 0.9000, bbox_mAP_s: 0.6400, bbox_mAP_m: 0.8690, bbox_mAP_l: 0.9000, bbox_mAP_copypaste: 0.842 0.910 0.900 0.640 0.869 0.900
2020-11-20 11:34:44,595 - mmdet - INFO - Epoch [2][100/615]	lr: 1.000e-02, eta: 0:21:33, time: 0.771, data_time: 0.033, memory: 11909, loss_rpn_cls: 0.0026, loss_rpn_bbox: 0.0391, loss_cls: 0.0363, acc: 98.5137, loss_bbox: 0.0938, loss: 0.1718
2020-11-20 11:35:59,481 - mmdet - INFO - Epoch [2][200/615]	lr: 1.000e-02, eta: 0:20:20, time: 0.749, data_time: 0.012, memory: 11909, loss_rpn_cls: 0.0022, loss_rpn_bbox: 0.0318, loss_cls: 0.0332, acc: 98.5479, loss_bbox: 0.0786, loss: 0.1458
2020-11-20 11:37:14,556 - mmdet - INFO - Epoch [2][300/615]	lr: 1.000e-02, eta: 0:19:07, time: 0.751, data_time: 0.012, memory: 11909, loss_rpn_cls: 0.0037, loss_rpn_bbox: 0.0401, loss_cls: 0.0417, acc: 98.2031, loss_bbox: 0.0909, loss: 0.1764
2020-11-20 11:38:29,375 - mmdet - INFO - Epoch [2][400/615]	lr: 1.000e-02, eta: 0:17:54, time: 0.748, data_time: 0.012, memory: 11909, loss_rpn_cls: 0.0028, loss_rpn_bbox: 0.0328, loss_cls: 0.0371, acc: 98.4238, loss_bbox: 0.0818, loss: 0.1544
2020-11-20 11:39:44,498 - mmdet - INFO - Epoch [2][500/615]	lr: 1.000e-02, eta: 0:16:40, time: 0.751, data_time: 0.012, memory: 11909, loss_rpn_cls: 0.0026, loss_rpn_bbox: 0.0383, loss_cls: 0.0397, acc: 98.3447, loss_bbox: 0.0906, loss: 0.1712
2020-11-20 11:40:59,692 - mmdet - INFO - Epoch [2][600/615]	lr: 1.000e-02, eta: 0:15:27, time: 0.752, data_time: 0.012, memory: 11909, loss_rpn_cls: 0.0030, loss_rpn_bbox: 0.0377, loss_cls: 0.0398, acc: 98.3184, loss_bbox: 0.0905, loss: 0.1710
2020-11-20 11:41:34,440 - mmdet - INFO - Evaluating bbox...
2020-11-20 11:41:36,105 - mmdet - INFO - Epoch [2][615/615]	lr: 1.000e-02, bbox_mAP: 0.8370, bbox_mAP_50: 0.9100, bbox_mAP_75: 0.9000, bbox_mAP_s: 0.6360, bbox_mAP_m: 0.8530, bbox_mAP_l: 0.8960, bbox_mAP_copypaste: 0.837 0.910 0.900 0.636 0.853 0.896
2020-11-20 11:42:05,712 - mmdet - INFO - Epoch(train) [2][73]	loss_rpn_cls: 0.0042, loss_rpn_bbox: 0.0335, loss_cls: 0.0358, acc: 98.4910, loss_bbox: 0.0874, loss: 0.1609
2020-11-20 11:43:23,250 - mmdet - INFO - Epoch [3][100/615]	lr: 1.000e-02, eta: 0:13:54, time: 0.773, data_time: 0.034, memory: 11909, loss_rpn_cls: 0.0037, loss_rpn_bbox: 0.0387, loss_cls: 0.0432, acc: 98.1729, loss_bbox: 0.0943, loss: 0.1799
2020-11-20 11:44:38,319 - mmdet - INFO - Epoch [3][200/615]	lr: 1.000e-02, eta: 0:12:41, time: 0.751, data_time: 0.012, memory: 11909, loss_rpn_cls: 0.0036, loss_rpn_bbox: 0.0360, loss_cls: 0.0376, acc: 98.4355, loss_bbox: 0.0851, loss: 0.1622
2020-11-20 11:45:53,439 - mmdet - INFO - Epoch [3][300/615]	lr: 1.000e-02, eta: 0:11:28, time: 0.751, data_time: 0.012, memory: 11909, loss_rpn_cls: 0.0033, loss_rpn_bbox: 0.0372, loss_cls: 0.0375, acc: 98.4727, loss_bbox: 0.0875, loss: 0.1656
2020-11-20 11:47:08,584 - mmdet - INFO - Epoch [3][400/615]	lr: 1.000e-02, eta: 0:10:14, time: 0.751, data_time: 0.012, memory: 11909, loss_rpn_cls: 0.0035, loss_rpn_bbox: 0.0370, loss_cls: 0.0420, acc: 98.2305, loss_bbox: 0.0954, loss: 0.1779
2020-11-20 11:48:23,441 - mmdet - INFO - Epoch [3][500/615]	lr: 1.000e-02, eta: 0:09:01, time: 0.749, data_time: 0.012, memory: 11909, loss_rpn_cls: 0.0032, loss_rpn_bbox: 0.0359, loss_cls: 0.0365, acc: 98.5293, loss_bbox: 0.0880, loss: 0.1637
2020-11-20 11:49:38,333 - mmdet - INFO - Epoch [3][600/615]	lr: 1.000e-02, eta: 0:07:47, time: 0.749, data_time: 0.012, memory: 11909, loss_rpn_cls: 0.0028, loss_rpn_bbox: 0.0364, loss_cls: 0.0368, acc: 98.3916, loss_bbox: 0.0864, loss: 0.1623
2020-11-20 11:50:13,159 - mmdet - INFO - Evaluating bbox...
2020-11-20 11:50:14,825 - mmdet - INFO - Epoch [3][615/615]	lr: 1.000e-02, bbox_mAP: 0.8330, bbox_mAP_50: 0.9090, bbox_mAP_75: 0.8900, bbox_mAP_s: 0.6180, bbox_mAP_m: 0.8470, bbox_mAP_l: 0.8990, bbox_mAP_copypaste: 0.833 0.909 0.890 0.618 0.847 0.899
2020-11-20 11:51:32,091 - mmdet - INFO - Epoch [4][100/615]	lr: 1.000e-02, eta: 0:06:19, time: 0.771, data_time: 0.034, memory: 11909, loss_rpn_cls: 0.0028, loss_rpn_bbox: 0.0346, loss_cls: 0.0357, acc: 98.4990, loss_bbox: 0.0811, loss: 0.1543
2020-11-20 11:52:47,029 - mmdet - INFO - Epoch [4][200/615]	lr: 1.000e-02, eta: 0:05:06, time: 0.749, data_time: 0.012, memory: 11909, loss_rpn_cls: 0.0048, loss_rpn_bbox: 0.0394, loss_cls: 0.0481, acc: 98.0811, loss_bbox: 0.1017, loss: 0.1941
2020-11-20 11:54:02,066 - mmdet - INFO - Epoch [4][300/615]	lr: 1.000e-02, eta: 0:03:52, time: 0.750, data_time: 0.012, memory: 11909, loss_rpn_cls: 0.0030, loss_rpn_bbox: 0.0383, loss_cls: 0.0364, acc: 98.5469, loss_bbox: 0.0849, loss: 0.1626
2020-11-20 11:55:16,979 - mmdet - INFO - Epoch [4][400/615]	lr: 1.000e-02, eta: 0:02:38, time: 0.749, data_time: 0.012, memory: 11909, loss_rpn_cls: 0.0037, loss_rpn_bbox: 0.0379, loss_cls: 0.0466, acc: 98.0752, loss_bbox: 0.0908, loss: 0.1789
2020-11-20 11:56:31,951 - mmdet - INFO - Epoch [4][500/615]	lr: 1.000e-02, eta: 0:01:25, time: 0.750, data_time: 0.012, memory: 11909, loss_rpn_cls: 0.0033, loss_rpn_bbox: 0.0386, loss_cls: 0.0453, acc: 98.0371, loss_bbox: 0.0952, loss: 0.1823
2020-11-20 11:57:46,810 - mmdet - INFO - Epoch [4][600/615]	lr: 1.000e-02, eta: 0:00:11, time: 0.749, data_time: 0.012, memory: 11909, loss_rpn_cls: 0.0025, loss_rpn_bbox: 0.0367, loss_cls: 0.0390, acc: 98.3613, loss_bbox: 0.0869, loss: 0.1650
2020-11-20 11:57:57,954 - mmdet - INFO - Saving checkpoint at 4 epochs
2020-11-20 11:58:23,242 - mmdet - INFO - Evaluating bbox...
2020-11-20 11:58:24,861 - mmdet - INFO - Epoch [4][615/615]	lr: 1.000e-02, bbox_mAP: 0.8310, bbox_mAP_50: 0.9050, bbox_mAP_75: 0.8950, bbox_mAP_s: 0.6210, bbox_mAP_m: 0.8410, bbox_mAP_l: 0.8940, bbox_mAP_copypaste: 0.831 0.905 0.895 0.621 0.841 0.894
2020-11-20 11:58:54,483 - mmdet - INFO - Epoch(train) [4][73]	loss_rpn_cls: 0.0028, loss_rpn_bbox: 0.0358, loss_cls: 0.0368, acc: 98.4937, loss_bbox: 0.0899, loss: 0.1652
