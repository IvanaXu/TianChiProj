2020-11-22 13:08:04,035 - mmdet - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.6.4 |Anaconda, Inc.| (default, Jan 16 2018, 18:10:19) [GCC 7.2.0]
CUDA available: True
CUDA_HOME: /usr/local/cuda
NVCC: Cuda compilation tools, release 10.0, V10.0.130
GPU 0: Tesla P100-PCIE-16GB
GCC: gcc (GCC) 5.3.0
PyTorch: 1.3.1+cu100
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - Intel(R) Math Kernel Library Version 2019.0.4 Product Build 20190411 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.20.5 (Git Hash 0125f28c61c1f822fd48570b4c1066f96fcb9b2e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CUDA Runtime 10.0
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.1
  - Build settings: BLAS=MKL, BUILD_NAMEDTENSOR=OFF, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Wno-stringop-overflow, DISABLE_NUMA=1, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=True, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

TorchVision: 0.4.2+cu100
OpenCV: 4.4.0
MMCV: 1.0.5
MMDetection: 2.3.0+788fa8d
MMDetection Compiler: GCC 7.3
MMDetection CUDA Compiler: 10.0
------------------------------------------------------------

2020-11-22 13:08:04,035 - mmdet - INFO - Distributed training: False
2020-11-22 13:08:04,424 - mmdet - INFO - Config:
model = dict(
    type='FasterRCNN',
    pretrained='torchvision://resnet50',
    backbone=dict(
        type='ResNet',
        depth=50,
        num_stages=4,
        out_indices=(0, 1, 2, 3),
        frozen_stages=1,
        norm_cfg=dict(type='BN', requires_grad=True),
        norm_eval=True,
        style='pytorch'),
    neck=dict(
        type='FPN',
        in_channels=[256, 512, 1024, 2048],
        out_channels=256,
        num_outs=5),
    rpn_head=dict(
        type='RPNHead',
        in_channels=256,
        feat_channels=256,
        anchor_generator=dict(
            type='AnchorGenerator',
            scales=[8],
            ratios=[0.5, 1.0, 2.0],
            strides=[4, 8, 16, 32, 64]),
        bbox_coder=dict(
            type='DeltaXYWHBBoxCoder',
            target_means=[0.0, 0.0, 0.0, 0.0],
            target_stds=[1.0, 1.0, 1.0, 1.0]),
        loss_cls=dict(
            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),
        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),
    roi_head=dict(
        type='StandardRoIHead',
        bbox_roi_extractor=dict(
            type='SingleRoIExtractor',
            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),
            out_channels=256,
            featmap_strides=[4, 8, 16, 32]),
        bbox_head=dict(
            type='Shared2FCBBoxHead',
            in_channels=256,
            fc_out_channels=1024,
            roi_feat_size=7,
            num_classes=2,
            bbox_coder=dict(
                type='DeltaXYWHBBoxCoder',
                target_means=[0.0, 0.0, 0.0, 0.0],
                target_stds=[0.1, 0.1, 0.2, 0.2]),
            reg_class_agnostic=False,
            loss_cls=dict(
                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),
            loss_bbox=dict(type='L1Loss', loss_weight=1.0))))
train_cfg = dict(
    rpn=dict(
        assigner=dict(
            type='MaxIoUAssigner',
            pos_iou_thr=0.7,
            neg_iou_thr=0.3,
            min_pos_iou=0.3,
            match_low_quality=True,
            ignore_iof_thr=-1),
        sampler=dict(
            type='RandomSampler',
            num=256,
            pos_fraction=0.5,
            neg_pos_ub=-1,
            add_gt_as_proposals=False),
        allowed_border=-1,
        pos_weight=-1,
        debug=False),
    rpn_proposal=dict(
        nms_across_levels=False,
        nms_pre=2000,
        nms_post=1000,
        max_num=1000,
        nms_thr=0.7,
        min_bbox_size=0),
    rcnn=dict(
        assigner=dict(
            type='MaxIoUAssigner',
            pos_iou_thr=0.5,
            neg_iou_thr=0.5,
            min_pos_iou=0.5,
            match_low_quality=False,
            ignore_iof_thr=-1),
        sampler=dict(
            type='RandomSampler',
            num=512,
            pos_fraction=0.25,
            neg_pos_ub=-1,
            add_gt_as_proposals=True),
        pos_weight=-1,
        debug=False))
test_cfg = dict(
    rpn=dict(
        nms_across_levels=False,
        nms_pre=1000,
        nms_post=1000,
        max_num=1000,
        nms_thr=0.7,
        min_bbox_size=0),
    rcnn=dict(
        score_thr=0.05,
        nms=dict(type='nms', iou_threshold=0.5),
        max_per_img=100))
dataset_type = 'CocoDataset'
data_root = 'data/coco/'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(type='Resize', img_scale=(1550, 1550), keep_ratio=True),
    dict(type='RandomFlip', flip_ratio=0.5),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='Pad', size_divisor=32),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(1550, 1550),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=2,
    workers_per_gpu=2,
    train=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_trai.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(type='Resize', img_scale=(1550, 1550), keep_ratio=True),
            dict(type='RandomFlip', flip_ratio=0.5),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
        ]),
    val=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_test.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1550, 1550),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_vals.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1550, 1550),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
evaluation = dict(interval=1, metric='bbox')
optimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0001)
optimizer_config = dict(grad_clip=None)
lr_config = dict(
    policy='step',
    warmup='linear',
    warmup_iters=500,
    warmup_ratio=0.001,
    step=[8, 11])
total_epochs = 4
checkpoint_config = dict(interval=4)
log_config = dict(interval=100, hooks=[dict(type='TextLoggerHook')])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = '/home/admin/.cache/torch/checkpoints/X.pth'
resume_from = None
workflow = [('train', 2), ('val', 1)]
work_dir = '/home/admin/jupyter/SecurityAI_Round5/data/work'
gpu_ids = range(0, 1)

2020-11-22 13:08:04,923 - mmdet - INFO - load model from: torchvision://resnet50
2020-11-22 13:08:13,068 - mmdet - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: fc.weight, fc.bias

2020-11-22 13:08:23,282 - mmdet - INFO - load checkpoint from /home/admin/.cache/torch/checkpoints/X.pth
2020-11-22 13:08:29,821 - mmdet - INFO - Start running, host: admin@fuxilabor_labor0_S4_Odps_S96_dsw_prepaid_cnsh_838_2020112201080, work_dir: /home/admin/jupyter/SecurityAI_Round5/data/work
2020-11-22 13:08:29,821 - mmdet - INFO - workflow: [('train', 2), ('val', 1)], max: 4 epochs
2020-11-22 13:09:47,497 - mmdet - INFO - Epoch [1][100/622]	lr: 1.988e-03, eta: 0:30:50, time: 0.775, data_time: 0.033, memory: 9777, loss_rpn_cls: 0.0019, loss_rpn_bbox: 0.0248, loss_cls: 0.0300, acc: 98.7148, loss_bbox: 0.0656, loss: 0.1222
2020-11-22 13:11:02,370 - mmdet - INFO - Epoch [1][200/622]	lr: 3.986e-03, eta: 0:29:02, time: 0.749, data_time: 0.012, memory: 10077, loss_rpn_cls: 0.0024, loss_rpn_bbox: 0.0247, loss_cls: 0.0302, acc: 98.7354, loss_bbox: 0.0670, loss: 0.1243
2020-11-22 13:12:17,509 - mmdet - INFO - Epoch [1][300/622]	lr: 5.984e-03, eta: 0:27:39, time: 0.751, data_time: 0.012, memory: 11886, loss_rpn_cls: 0.0025, loss_rpn_bbox: 0.0234, loss_cls: 0.0289, acc: 98.8086, loss_bbox: 0.0666, loss: 0.1213
2020-11-22 13:13:32,367 - mmdet - INFO - Epoch [1][400/622]	lr: 7.982e-03, eta: 0:26:18, time: 0.749, data_time: 0.012, memory: 11886, loss_rpn_cls: 0.0022, loss_rpn_bbox: 0.0252, loss_cls: 0.0288, acc: 98.8193, loss_bbox: 0.0657, loss: 0.1219
2020-11-22 13:14:47,257 - mmdet - INFO - Epoch [1][500/622]	lr: 9.980e-03, eta: 0:24:59, time: 0.749, data_time: 0.012, memory: 11886, loss_rpn_cls: 0.0020, loss_rpn_bbox: 0.0294, loss_cls: 0.0295, acc: 98.7910, loss_bbox: 0.0661, loss: 0.1269
2020-11-22 13:16:02,117 - mmdet - INFO - Epoch [1][600/622]	lr: 1.000e-02, eta: 0:23:42, time: 0.749, data_time: 0.012, memory: 11886, loss_rpn_cls: 0.0017, loss_rpn_bbox: 0.0313, loss_cls: 0.0282, acc: 98.8584, loss_bbox: 0.0721, loss: 0.1333
2020-11-22 13:16:42,785 - mmdet - INFO - Evaluating bbox...
2020-11-22 13:16:44,501 - mmdet - INFO - Epoch [1][622/622]	lr: 1.000e-02, bbox_mAP: 0.8320, bbox_mAP_50: 0.8890, bbox_mAP_75: 0.8840, bbox_mAP_s: 0.6310, bbox_mAP_m: 0.8770, bbox_mAP_l: 0.8890, bbox_mAP_copypaste: 0.832 0.889 0.884 0.631 0.877 0.889
2020-11-22 13:18:01,729 - mmdet - INFO - Epoch [2][100/622]	lr: 1.000e-02, eta: 0:21:34, time: 0.770, data_time: 0.033, memory: 11912, loss_rpn_cls: 0.0025, loss_rpn_bbox: 0.0302, loss_cls: 0.0311, acc: 98.6992, loss_bbox: 0.0704, loss: 0.1341
2020-11-22 13:19:16,784 - mmdet - INFO - Epoch [2][200/622]	lr: 1.000e-02, eta: 0:20:24, time: 0.751, data_time: 0.012, memory: 11912, loss_rpn_cls: 0.0022, loss_rpn_bbox: 0.0300, loss_cls: 0.0274, acc: 98.8809, loss_bbox: 0.0755, loss: 0.1352
2020-11-22 13:20:31,603 - mmdet - INFO - Epoch [2][300/622]	lr: 1.000e-02, eta: 0:19:13, time: 0.748, data_time: 0.012, memory: 11912, loss_rpn_cls: 0.0022, loss_rpn_bbox: 0.0296, loss_cls: 0.0329, acc: 98.6279, loss_bbox: 0.0713, loss: 0.1360
2020-11-22 13:21:46,428 - mmdet - INFO - Epoch [2][400/622]	lr: 1.000e-02, eta: 0:18:01, time: 0.748, data_time: 0.012, memory: 11912, loss_rpn_cls: 0.0031, loss_rpn_bbox: 0.0308, loss_cls: 0.0327, acc: 98.6416, loss_bbox: 0.0749, loss: 0.1416
2020-11-22 13:23:01,145 - mmdet - INFO - Epoch [2][500/622]	lr: 1.000e-02, eta: 0:16:48, time: 0.747, data_time: 0.012, memory: 11912, loss_rpn_cls: 0.0021, loss_rpn_bbox: 0.0290, loss_cls: 0.0273, acc: 98.8232, loss_bbox: 0.0658, loss: 0.1243
2020-11-22 13:24:16,212 - mmdet - INFO - Epoch [2][600/622]	lr: 1.000e-02, eta: 0:15:36, time: 0.751, data_time: 0.012, memory: 11912, loss_rpn_cls: 0.0030, loss_rpn_bbox: 0.0340, loss_cls: 0.0345, acc: 98.5420, loss_bbox: 0.0775, loss: 0.1490
2020-11-22 13:24:56,921 - mmdet - INFO - Evaluating bbox...
2020-11-22 13:24:58,744 - mmdet - INFO - Epoch [2][622/622]	lr: 1.000e-02, bbox_mAP: 0.8120, bbox_mAP_50: 0.8820, bbox_mAP_75: 0.8710, bbox_mAP_s: 0.5930, bbox_mAP_m: 0.8280, bbox_mAP_l: 0.8740, bbox_mAP_copypaste: 0.812 0.882 0.871 0.593 0.828 0.874
2020-11-22 13:25:29,079 - mmdet - INFO - Epoch(train) [2][75]	loss_rpn_cls: 0.0053, loss_rpn_bbox: 0.0329, loss_cls: 0.0483, acc: 98.0951, loss_bbox: 0.0864, loss: 0.1729
2020-11-22 13:26:46,528 - mmdet - INFO - Epoch [3][100/622]	lr: 1.000e-02, eta: 0:13:54, time: 0.772, data_time: 0.033, memory: 11912, loss_rpn_cls: 0.0091, loss_rpn_bbox: 0.0412, loss_cls: 0.0547, acc: 97.9287, loss_bbox: 0.0945, loss: 0.1995
2020-11-22 13:28:01,328 - mmdet - INFO - Epoch [3][200/622]	lr: 1.000e-02, eta: 0:12:43, time: 0.748, data_time: 0.012, memory: 11912, loss_rpn_cls: 0.0063, loss_rpn_bbox: 0.0380, loss_cls: 0.0564, acc: 97.7441, loss_bbox: 0.0825, loss: 0.1832
2020-11-22 13:29:16,551 - mmdet - INFO - Epoch [3][300/622]	lr: 1.000e-02, eta: 0:11:31, time: 0.752, data_time: 0.012, memory: 11912, loss_rpn_cls: 0.0118, loss_rpn_bbox: 0.0405, loss_cls: 0.0698, acc: 97.3516, loss_bbox: 0.0989, loss: 0.2210
2020-11-22 13:30:31,641 - mmdet - INFO - Epoch [3][400/622]	lr: 1.000e-02, eta: 0:10:19, time: 0.751, data_time: 0.012, memory: 11912, loss_rpn_cls: 0.0050, loss_rpn_bbox: 0.0339, loss_cls: 0.0397, acc: 98.4746, loss_bbox: 0.0849, loss: 0.1636
2020-11-22 13:31:46,469 - mmdet - INFO - Epoch [3][500/622]	lr: 1.000e-02, eta: 0:09:06, time: 0.748, data_time: 0.012, memory: 11912, loss_rpn_cls: 0.0051, loss_rpn_bbox: 0.0339, loss_cls: 0.0376, acc: 98.5039, loss_bbox: 0.0815, loss: 0.1581
2020-11-22 13:33:01,028 - mmdet - INFO - Epoch [3][600/622]	lr: 1.000e-02, eta: 0:07:53, time: 0.746, data_time: 0.012, memory: 11912, loss_rpn_cls: 0.0037, loss_rpn_bbox: 0.0369, loss_cls: 0.0419, acc: 98.2676, loss_bbox: 0.0894, loss: 0.1720
2020-11-22 13:33:41,870 - mmdet - INFO - Evaluating bbox...
2020-11-22 13:33:43,654 - mmdet - INFO - Epoch [3][622/622]	lr: 1.000e-02, bbox_mAP: 0.8190, bbox_mAP_50: 0.8880, bbox_mAP_75: 0.8730, bbox_mAP_s: 0.5990, bbox_mAP_m: 0.8540, bbox_mAP_l: 0.8830, bbox_mAP_copypaste: 0.819 0.888 0.873 0.599 0.854 0.883
2020-11-22 13:35:01,141 - mmdet - INFO - Epoch [4][100/622]	lr: 1.000e-02, eta: 0:06:20, time: 0.771, data_time: 0.033, memory: 11912, loss_rpn_cls: 0.0036, loss_rpn_bbox: 0.0344, loss_cls: 0.0386, acc: 98.3760, loss_bbox: 0.0860, loss: 0.1627
2020-11-22 13:36:16,217 - mmdet - INFO - Epoch [4][200/622]	lr: 1.000e-02, eta: 0:05:07, time: 0.751, data_time: 0.012, memory: 11912, loss_rpn_cls: 0.0041, loss_rpn_bbox: 0.0345, loss_cls: 0.0381, acc: 98.4062, loss_bbox: 0.0854, loss: 0.1621
2020-11-22 13:37:30,851 - mmdet - INFO - Epoch [4][300/622]	lr: 1.000e-02, eta: 0:03:55, time: 0.746, data_time: 0.012, memory: 11912, loss_rpn_cls: 0.0032, loss_rpn_bbox: 0.0328, loss_cls: 0.0385, acc: 98.4229, loss_bbox: 0.0834, loss: 0.1580
2020-11-22 13:38:45,600 - mmdet - INFO - Epoch [4][400/622]	lr: 1.000e-02, eta: 0:02:42, time: 0.747, data_time: 0.012, memory: 11912, loss_rpn_cls: 0.0037, loss_rpn_bbox: 0.0354, loss_cls: 0.0363, acc: 98.4971, loss_bbox: 0.0846, loss: 0.1600
2020-11-22 13:40:00,482 - mmdet - INFO - Epoch [4][500/622]	lr: 1.000e-02, eta: 0:01:29, time: 0.749, data_time: 0.012, memory: 11912, loss_rpn_cls: 0.0029, loss_rpn_bbox: 0.0348, loss_cls: 0.0328, acc: 98.6543, loss_bbox: 0.0810, loss: 0.1515
2020-11-22 13:41:15,382 - mmdet - INFO - Epoch [4][600/622]	lr: 1.000e-02, eta: 0:00:16, time: 0.749, data_time: 0.012, memory: 11912, loss_rpn_cls: 0.0036, loss_rpn_bbox: 0.0300, loss_cls: 0.0294, acc: 98.7881, loss_bbox: 0.0707, loss: 0.1337
2020-11-22 13:41:31,741 - mmdet - INFO - Saving checkpoint at 4 epochs
2020-11-22 13:41:57,753 - mmdet - INFO - Evaluating bbox...
2020-11-22 13:41:59,503 - mmdet - INFO - Epoch [4][622/622]	lr: 1.000e-02, bbox_mAP: 0.8170, bbox_mAP_50: 0.8830, bbox_mAP_75: 0.8680, bbox_mAP_s: 0.5910, bbox_mAP_m: 0.8470, bbox_mAP_l: 0.8780, bbox_mAP_copypaste: 0.817 0.883 0.868 0.591 0.847 0.878
2020-11-22 13:42:29,731 - mmdet - INFO - Epoch(train) [4][75]	loss_rpn_cls: 0.0036, loss_rpn_bbox: 0.0353, loss_cls: 0.0447, acc: 98.1276, loss_bbox: 0.0889, loss: 0.1725
