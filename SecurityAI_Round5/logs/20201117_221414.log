2020-11-17 22:14:14,568 - mmdet - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.6.4 |Anaconda, Inc.| (default, Jan 16 2018, 18:10:19) [GCC 7.2.0]
CUDA available: True
CUDA_HOME: /usr/local/cuda
NVCC: Cuda compilation tools, release 10.0, V10.0.130
GPU 0: Tesla P100-PCIE-16GB
GCC: gcc (GCC) 5.3.0
PyTorch: 1.3.1+cu100
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - Intel(R) Math Kernel Library Version 2019.0.4 Product Build 20190411 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.20.5 (Git Hash 0125f28c61c1f822fd48570b4c1066f96fcb9b2e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CUDA Runtime 10.0
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.1
  - Build settings: BLAS=MKL, BUILD_NAMEDTENSOR=OFF, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Wno-stringop-overflow, DISABLE_NUMA=1, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=True, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

TorchVision: 0.4.2+cu100
OpenCV: 4.4.0
MMCV: 1.0.5
MMDetection: 2.3.0+788fa8d
MMDetection Compiler: GCC 7.3
MMDetection CUDA Compiler: 10.0
------------------------------------------------------------

2020-11-17 22:14:14,569 - mmdet - INFO - Distributed training: False
2020-11-17 22:14:14,996 - mmdet - INFO - Config:
model = dict(
    type='FasterRCNN',
    pretrained='torchvision://resnet50',
    backbone=dict(
        type='ResNet',
        depth=50,
        num_stages=4,
        out_indices=(0, 1, 2, 3),
        frozen_stages=1,
        norm_cfg=dict(type='BN', requires_grad=True),
        norm_eval=True,
        style='pytorch'),
    neck=dict(
        type='FPN',
        in_channels=[256, 512, 1024, 2048],
        out_channels=256,
        num_outs=5),
    rpn_head=dict(
        type='RPNHead',
        in_channels=256,
        feat_channels=256,
        anchor_generator=dict(
            type='AnchorGenerator',
            scales=[8],
            ratios=[0.5, 1.0, 2.0],
            strides=[4, 8, 16, 32, 64]),
        bbox_coder=dict(
            type='DeltaXYWHBBoxCoder',
            target_means=[0.0, 0.0, 0.0, 0.0],
            target_stds=[1.0, 1.0, 1.0, 1.0]),
        loss_cls=dict(
            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),
        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),
    roi_head=dict(
        type='StandardRoIHead',
        bbox_roi_extractor=dict(
            type='SingleRoIExtractor',
            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),
            out_channels=256,
            featmap_strides=[4, 8, 16, 32]),
        bbox_head=dict(
            type='Shared2FCBBoxHead',
            in_channels=256,
            fc_out_channels=1024,
            roi_feat_size=7,
            num_classes=2,
            bbox_coder=dict(
                type='DeltaXYWHBBoxCoder',
                target_means=[0.0, 0.0, 0.0, 0.0],
                target_stds=[0.1, 0.1, 0.2, 0.2]),
            reg_class_agnostic=False,
            loss_cls=dict(
                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),
            loss_bbox=dict(type='L1Loss', loss_weight=1.0))))
train_cfg = dict(
    rpn=dict(
        assigner=dict(
            type='MaxIoUAssigner',
            pos_iou_thr=0.7,
            neg_iou_thr=0.3,
            min_pos_iou=0.3,
            match_low_quality=True,
            ignore_iof_thr=-1),
        sampler=dict(
            type='RandomSampler',
            num=256,
            pos_fraction=0.5,
            neg_pos_ub=-1,
            add_gt_as_proposals=False),
        allowed_border=-1,
        pos_weight=-1,
        debug=False),
    rpn_proposal=dict(
        nms_across_levels=False,
        nms_pre=2000,
        nms_post=1000,
        max_num=1000,
        nms_thr=0.7,
        min_bbox_size=0),
    rcnn=dict(
        assigner=dict(
            type='MaxIoUAssigner',
            pos_iou_thr=0.5,
            neg_iou_thr=0.5,
            min_pos_iou=0.5,
            match_low_quality=False,
            ignore_iof_thr=-1),
        sampler=dict(
            type='RandomSampler',
            num=512,
            pos_fraction=0.25,
            neg_pos_ub=-1,
            add_gt_as_proposals=True),
        pos_weight=-1,
        debug=False))
test_cfg = dict(
    rpn=dict(
        nms_across_levels=False,
        nms_pre=1000,
        nms_post=1000,
        max_num=1000,
        nms_thr=0.7,
        min_bbox_size=0),
    rcnn=dict(
        score_thr=0.05,
        nms=dict(type='nms', iou_threshold=0.5),
        max_per_img=100))
dataset_type = 'CocoDataset'
data_root = 'data/coco/'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(type='Resize', img_scale=(1550, 1550), keep_ratio=True),
    dict(type='RandomFlip', flip_ratio=0.5),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='Pad', size_divisor=32),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(1550, 1550),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=2,
    workers_per_gpu=2,
    train=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_trai.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(type='Resize', img_scale=(1550, 1550), keep_ratio=True),
            dict(type='RandomFlip', flip_ratio=0.5),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
        ]),
    val=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_test.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1550, 1550),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_vals.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1550, 1550),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
evaluation = dict(interval=1, metric='bbox')
optimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0001)
optimizer_config = dict(grad_clip=None)
lr_config = dict(
    policy='step',
    warmup='linear',
    warmup_iters=500,
    warmup_ratio=0.001,
    step=[8, 11])
total_epochs = 4
checkpoint_config = dict(interval=4)
log_config = dict(interval=100, hooks=[dict(type='TextLoggerHook')])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = '/home/admin/.cache/torch/checkpoints/X.pth'
resume_from = None
workflow = [('train', 2), ('val', 1)]
work_dir = '/home/admin/jupyter/SecurityAI_Round5/data/work'
gpu_ids = range(0, 1)

2020-11-17 22:14:15,508 - mmdet - INFO - load model from: torchvision://resnet50
2020-11-17 22:14:23,471 - mmdet - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: fc.weight, fc.bias

2020-11-17 22:14:33,833 - mmdet - INFO - load checkpoint from /home/admin/.cache/torch/checkpoints/X.pth
2020-11-17 22:14:41,284 - mmdet - INFO - Start running, host: admin@fuxilabor_labor0_S4_Odps_S96_dsw_prepaid_cnsh_838_2020111707413, work_dir: /home/admin/jupyter/SecurityAI_Round5/data/work
2020-11-17 22:14:41,284 - mmdet - INFO - workflow: [('train', 2), ('val', 1)], max: 4 epochs
2020-11-17 22:15:58,957 - mmdet - INFO - Epoch [1][100/621]	lr: 1.988e-03, eta: 0:30:47, time: 0.775, data_time: 0.034, memory: 8107, loss_rpn_cls: 0.0287, loss_rpn_bbox: 0.0766, loss_cls: 0.1329, acc: 94.6631, loss_bbox: 0.2171, loss: 0.4552
2020-11-17 22:17:13,516 - mmdet - INFO - Epoch [1][200/621]	lr: 3.986e-03, eta: 0:28:56, time: 0.746, data_time: 0.012, memory: 8803, loss_rpn_cls: 0.0182, loss_rpn_bbox: 0.0676, loss_cls: 0.1135, acc: 95.5039, loss_bbox: 0.1944, loss: 0.3937
2020-11-17 22:18:28,854 - mmdet - INFO - Epoch [1][300/621]	lr: 5.984e-03, eta: 0:27:35, time: 0.753, data_time: 0.013, memory: 9525, loss_rpn_cls: 0.0260, loss_rpn_bbox: 0.0707, loss_cls: 0.1214, acc: 95.2344, loss_bbox: 0.1913, loss: 0.4094
2020-11-17 22:19:43,405 - mmdet - INFO - Epoch [1][400/621]	lr: 7.982e-03, eta: 0:26:13, time: 0.745, data_time: 0.012, memory: 9525, loss_rpn_cls: 0.0174, loss_rpn_bbox: 0.0728, loss_cls: 0.1225, acc: 95.1260, loss_bbox: 0.2102, loss: 0.4229
2020-11-17 22:20:58,383 - mmdet - INFO - Epoch [1][500/621]	lr: 9.980e-03, eta: 0:24:55, time: 0.750, data_time: 0.012, memory: 10073, loss_rpn_cls: 0.0260, loss_rpn_bbox: 0.0766, loss_cls: 0.1189, acc: 95.3203, loss_bbox: 0.1980, loss: 0.4195
2020-11-17 22:22:13,152 - mmdet - INFO - Epoch [1][600/621]	lr: 1.000e-02, eta: 0:23:38, time: 0.748, data_time: 0.012, memory: 11908, loss_rpn_cls: 0.0199, loss_rpn_bbox: 0.0791, loss_cls: 0.1451, acc: 94.2949, loss_bbox: 0.2303, loss: 0.4744
2020-11-17 22:22:55,307 - mmdet - INFO - Evaluating bbox...
2020-11-17 22:23:02,418 - mmdet - INFO - Epoch [1][621/621]	lr: 1.000e-02, bbox_mAP: 0.4710, bbox_mAP_50: 0.5710, bbox_mAP_75: 0.5060, bbox_mAP_s: 0.0340, bbox_mAP_m: 0.3210, bbox_mAP_l: 0.5550, bbox_mAP_copypaste: 0.471 0.571 0.506 0.034 0.321 0.555
2020-11-17 22:24:19,615 - mmdet - INFO - Epoch [2][100/621]	lr: 1.000e-02, eta: 0:21:32, time: 0.770, data_time: 0.034, memory: 11908, loss_rpn_cls: 0.0557, loss_rpn_bbox: 0.0915, loss_cls: 0.1425, acc: 94.6875, loss_bbox: 0.2001, loss: 0.4898
2020-11-17 22:25:34,387 - mmdet - INFO - Epoch [2][200/621]	lr: 1.000e-02, eta: 0:20:22, time: 0.748, data_time: 0.013, memory: 11908, loss_rpn_cls: 0.0428, loss_rpn_bbox: 0.0866, loss_cls: 0.1397, acc: 94.7256, loss_bbox: 0.2048, loss: 0.4740
2020-11-17 22:26:49,183 - mmdet - INFO - Epoch [2][300/621]	lr: 1.000e-02, eta: 0:19:11, time: 0.748, data_time: 0.012, memory: 11908, loss_rpn_cls: 0.0408, loss_rpn_bbox: 0.0906, loss_cls: 0.1472, acc: 94.2588, loss_bbox: 0.2126, loss: 0.4912
2020-11-17 22:28:03,719 - mmdet - INFO - Epoch [2][400/621]	lr: 1.000e-02, eta: 0:17:58, time: 0.745, data_time: 0.012, memory: 11908, loss_rpn_cls: 0.0280, loss_rpn_bbox: 0.0859, loss_cls: 0.1363, acc: 94.6406, loss_bbox: 0.2241, loss: 0.4742
2020-11-17 22:29:18,669 - mmdet - INFO - Epoch [2][500/621]	lr: 1.000e-02, eta: 0:16:46, time: 0.749, data_time: 0.013, memory: 11908, loss_rpn_cls: 0.0245, loss_rpn_bbox: 0.0792, loss_cls: 0.1329, acc: 94.9180, loss_bbox: 0.2129, loss: 0.4495
2020-11-17 22:30:33,491 - mmdet - INFO - Epoch [2][600/621]	lr: 1.000e-02, eta: 0:15:33, time: 0.748, data_time: 0.013, memory: 11908, loss_rpn_cls: 0.0325, loss_rpn_bbox: 0.0800, loss_cls: 0.1389, acc: 94.4365, loss_bbox: 0.2189, loss: 0.4703
2020-11-17 22:31:15,862 - mmdet - INFO - Evaluating bbox...
2020-11-17 22:31:20,654 - mmdet - INFO - Epoch [2][621/621]	lr: 1.000e-02, bbox_mAP: 0.6200, bbox_mAP_50: 0.7400, bbox_mAP_75: 0.6490, bbox_mAP_s: 0.1500, bbox_mAP_m: 0.4860, bbox_mAP_l: 0.7450, bbox_mAP_copypaste: 0.620 0.740 0.649 0.150 0.486 0.745
2020-11-17 22:31:53,114 - mmdet - INFO - Epoch(train) [2][80]	loss_rpn_cls: 0.0279, loss_rpn_bbox: 0.0806, loss_cls: 0.1462, acc: 94.3896, loss_bbox: 0.2154, loss: 0.4701
2020-11-17 22:33:09,994 - mmdet - INFO - Epoch [3][100/621]	lr: 1.000e-02, eta: 0:13:53, time: 0.767, data_time: 0.035, memory: 11908, loss_rpn_cls: 0.0212, loss_rpn_bbox: 0.0774, loss_cls: 0.1201, acc: 95.2305, loss_bbox: 0.2070, loss: 0.4257
2020-11-17 22:34:24,778 - mmdet - INFO - Epoch [3][200/621]	lr: 1.000e-02, eta: 0:12:41, time: 0.748, data_time: 0.013, memory: 11908, loss_rpn_cls: 0.0287, loss_rpn_bbox: 0.0805, loss_cls: 0.1243, acc: 95.1357, loss_bbox: 0.2052, loss: 0.4387
2020-11-17 22:35:39,374 - mmdet - INFO - Epoch [3][300/621]	lr: 1.000e-02, eta: 0:11:29, time: 0.746, data_time: 0.012, memory: 11908, loss_rpn_cls: 0.0280, loss_rpn_bbox: 0.0838, loss_cls: 0.1276, acc: 95.0127, loss_bbox: 0.2075, loss: 0.4469
2020-11-17 22:36:54,047 - mmdet - INFO - Epoch [3][400/621]	lr: 1.000e-02, eta: 0:10:17, time: 0.747, data_time: 0.013, memory: 11908, loss_rpn_cls: 0.0307, loss_rpn_bbox: 0.0852, loss_cls: 0.1373, acc: 94.5713, loss_bbox: 0.2174, loss: 0.4707
2020-11-17 22:38:08,928 - mmdet - INFO - Epoch [3][500/621]	lr: 1.000e-02, eta: 0:09:04, time: 0.749, data_time: 0.013, memory: 11908, loss_rpn_cls: 0.0226, loss_rpn_bbox: 0.0774, loss_cls: 0.1416, acc: 94.5107, loss_bbox: 0.2157, loss: 0.4572
2020-11-17 22:39:24,174 - mmdet - INFO - Epoch [3][600/621]	lr: 1.000e-02, eta: 0:07:51, time: 0.752, data_time: 0.013, memory: 11908, loss_rpn_cls: 0.0244, loss_rpn_bbox: 0.0819, loss_cls: 0.1300, acc: 94.7402, loss_bbox: 0.2120, loss: 0.4483
2020-11-17 22:40:06,374 - mmdet - INFO - Evaluating bbox...
2020-11-17 22:40:11,737 - mmdet - INFO - Epoch [3][621/621]	lr: 1.000e-02, bbox_mAP: 0.6140, bbox_mAP_50: 0.7370, bbox_mAP_75: 0.6390, bbox_mAP_s: 0.1580, bbox_mAP_m: 0.4640, bbox_mAP_l: 0.7340, bbox_mAP_copypaste: 0.614 0.737 0.639 0.158 0.464 0.734
2020-11-17 22:41:28,959 - mmdet - INFO - Epoch [4][100/621]	lr: 1.000e-02, eta: 0:06:19, time: 0.770, data_time: 0.034, memory: 11908, loss_rpn_cls: 0.0218, loss_rpn_bbox: 0.0836, loss_cls: 0.1347, acc: 94.7480, loss_bbox: 0.2326, loss: 0.4728
2020-11-17 22:42:43,836 - mmdet - INFO - Epoch [4][200/621]	lr: 1.000e-02, eta: 0:05:07, time: 0.749, data_time: 0.013, memory: 11908, loss_rpn_cls: 0.0231, loss_rpn_bbox: 0.0731, loss_cls: 0.1095, acc: 95.7979, loss_bbox: 0.1924, loss: 0.3981
2020-11-17 22:43:58,545 - mmdet - INFO - Epoch [4][300/621]	lr: 1.000e-02, eta: 0:03:54, time: 0.747, data_time: 0.013, memory: 11908, loss_rpn_cls: 0.0231, loss_rpn_bbox: 0.0807, loss_cls: 0.1238, acc: 95.1084, loss_bbox: 0.2061, loss: 0.4336
2020-11-17 22:45:13,197 - mmdet - INFO - Epoch [4][400/621]	lr: 1.000e-02, eta: 0:02:41, time: 0.746, data_time: 0.013, memory: 11908, loss_rpn_cls: 0.0337, loss_rpn_bbox: 0.0787, loss_cls: 0.1389, acc: 94.6914, loss_bbox: 0.2140, loss: 0.4654
2020-11-17 22:46:28,242 - mmdet - INFO - Epoch [4][500/621]	lr: 1.000e-02, eta: 0:01:28, time: 0.750, data_time: 0.013, memory: 11908, loss_rpn_cls: 0.0179, loss_rpn_bbox: 0.0794, loss_cls: 0.1261, acc: 95.0371, loss_bbox: 0.2087, loss: 0.4321
2020-11-17 22:47:43,095 - mmdet - INFO - Epoch [4][600/621]	lr: 1.000e-02, eta: 0:00:15, time: 0.749, data_time: 0.013, memory: 11908, loss_rpn_cls: 0.0211, loss_rpn_bbox: 0.0822, loss_cls: 0.1316, acc: 94.7256, loss_bbox: 0.2257, loss: 0.4606
2020-11-17 22:47:58,787 - mmdet - INFO - Saving checkpoint at 4 epochs
2020-11-17 22:48:27,080 - mmdet - INFO - Evaluating bbox...
2020-11-17 22:48:32,002 - mmdet - INFO - Epoch [4][621/621]	lr: 1.000e-02, bbox_mAP: 0.6120, bbox_mAP_50: 0.7440, bbox_mAP_75: 0.6500, bbox_mAP_s: 0.1560, bbox_mAP_m: 0.4700, bbox_mAP_l: 0.7310, bbox_mAP_copypaste: 0.612 0.744 0.650 0.156 0.470 0.731
2020-11-17 22:49:04,177 - mmdet - INFO - Epoch(train) [4][80]	loss_rpn_cls: 0.0366, loss_rpn_bbox: 0.0831, loss_cls: 0.1466, acc: 94.1687, loss_bbox: 0.2215, loss: 0.4879
