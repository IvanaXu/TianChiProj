2020-11-19 08:33:00,541 - mmdet - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.6.4 |Anaconda, Inc.| (default, Jan 16 2018, 18:10:19) [GCC 7.2.0]
CUDA available: True
CUDA_HOME: /usr/local/cuda
NVCC: Cuda compilation tools, release 10.0, V10.0.130
GPU 0: Tesla P100-PCIE-16GB
GCC: gcc (GCC) 5.3.0
PyTorch: 1.3.1+cu100
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - Intel(R) Math Kernel Library Version 2019.0.4 Product Build 20190411 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.20.5 (Git Hash 0125f28c61c1f822fd48570b4c1066f96fcb9b2e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CUDA Runtime 10.0
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.1
  - Build settings: BLAS=MKL, BUILD_NAMEDTENSOR=OFF, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Wno-stringop-overflow, DISABLE_NUMA=1, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=True, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

TorchVision: 0.4.2+cu100
OpenCV: 4.4.0
MMCV: 1.0.5
MMDetection: 2.3.0+788fa8d
MMDetection Compiler: GCC 7.3
MMDetection CUDA Compiler: 10.0
------------------------------------------------------------

2020-11-19 08:33:00,542 - mmdet - INFO - Distributed training: False
2020-11-19 08:33:00,924 - mmdet - INFO - Config:
model = dict(
    type='FasterRCNN',
    pretrained='torchvision://resnet50',
    backbone=dict(
        type='ResNet',
        depth=50,
        num_stages=4,
        out_indices=(0, 1, 2, 3),
        frozen_stages=1,
        norm_cfg=dict(type='BN', requires_grad=True),
        norm_eval=True,
        style='pytorch'),
    neck=dict(
        type='FPN',
        in_channels=[256, 512, 1024, 2048],
        out_channels=256,
        num_outs=5),
    rpn_head=dict(
        type='RPNHead',
        in_channels=256,
        feat_channels=256,
        anchor_generator=dict(
            type='AnchorGenerator',
            scales=[8],
            ratios=[0.5, 1.0, 2.0],
            strides=[4, 8, 16, 32, 64]),
        bbox_coder=dict(
            type='DeltaXYWHBBoxCoder',
            target_means=[0.0, 0.0, 0.0, 0.0],
            target_stds=[1.0, 1.0, 1.0, 1.0]),
        loss_cls=dict(
            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),
        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),
    roi_head=dict(
        type='StandardRoIHead',
        bbox_roi_extractor=dict(
            type='SingleRoIExtractor',
            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),
            out_channels=256,
            featmap_strides=[4, 8, 16, 32]),
        bbox_head=dict(
            type='Shared2FCBBoxHead',
            in_channels=256,
            fc_out_channels=1024,
            roi_feat_size=7,
            num_classes=2,
            bbox_coder=dict(
                type='DeltaXYWHBBoxCoder',
                target_means=[0.0, 0.0, 0.0, 0.0],
                target_stds=[0.1, 0.1, 0.2, 0.2]),
            reg_class_agnostic=False,
            loss_cls=dict(
                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),
            loss_bbox=dict(type='L1Loss', loss_weight=1.0))))
train_cfg = dict(
    rpn=dict(
        assigner=dict(
            type='MaxIoUAssigner',
            pos_iou_thr=0.7,
            neg_iou_thr=0.3,
            min_pos_iou=0.3,
            match_low_quality=True,
            ignore_iof_thr=-1),
        sampler=dict(
            type='RandomSampler',
            num=256,
            pos_fraction=0.5,
            neg_pos_ub=-1,
            add_gt_as_proposals=False),
        allowed_border=-1,
        pos_weight=-1,
        debug=False),
    rpn_proposal=dict(
        nms_across_levels=False,
        nms_pre=2000,
        nms_post=1000,
        max_num=1000,
        nms_thr=0.7,
        min_bbox_size=0),
    rcnn=dict(
        assigner=dict(
            type='MaxIoUAssigner',
            pos_iou_thr=0.5,
            neg_iou_thr=0.5,
            min_pos_iou=0.5,
            match_low_quality=False,
            ignore_iof_thr=-1),
        sampler=dict(
            type='RandomSampler',
            num=512,
            pos_fraction=0.25,
            neg_pos_ub=-1,
            add_gt_as_proposals=True),
        pos_weight=-1,
        debug=False))
test_cfg = dict(
    rpn=dict(
        nms_across_levels=False,
        nms_pre=1000,
        nms_post=1000,
        max_num=1000,
        nms_thr=0.7,
        min_bbox_size=0),
    rcnn=dict(
        score_thr=0.05,
        nms=dict(type='nms', iou_threshold=0.5),
        max_per_img=100))
dataset_type = 'CocoDataset'
data_root = 'data/coco/'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(type='Resize', img_scale=(1550, 1550), keep_ratio=True),
    dict(type='RandomFlip', flip_ratio=0.5),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='Pad', size_divisor=32),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(1550, 1550),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=2,
    workers_per_gpu=2,
    train=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_trai.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(type='Resize', img_scale=(1550, 1550), keep_ratio=True),
            dict(type='RandomFlip', flip_ratio=0.5),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
        ]),
    val=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_test.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1550, 1550),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_vals.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1550, 1550),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
evaluation = dict(interval=1, metric='bbox')
optimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0001)
optimizer_config = dict(grad_clip=None)
lr_config = dict(
    policy='step',
    warmup='linear',
    warmup_iters=500,
    warmup_ratio=0.001,
    step=[8, 11])
total_epochs = 4
checkpoint_config = dict(interval=4)
log_config = dict(interval=100, hooks=[dict(type='TextLoggerHook')])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = '/home/admin/.cache/torch/checkpoints/X.pth'
resume_from = None
workflow = [('train', 2), ('val', 1)]
work_dir = '/home/admin/jupyter/SecurityAI_Round5/data/work'
gpu_ids = range(0, 1)

2020-11-19 08:33:01,422 - mmdet - INFO - load model from: torchvision://resnet50
2020-11-19 08:33:09,095 - mmdet - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: fc.weight, fc.bias

2020-11-19 08:33:19,137 - mmdet - INFO - load checkpoint from /home/admin/.cache/torch/checkpoints/X.pth
2020-11-19 08:33:25,585 - mmdet - INFO - Start running, host: admin@fuxilabor_labor0_S4_Odps_S96_dsw_prepaid_cnsh_838_2020111823124, work_dir: /home/admin/jupyter/SecurityAI_Round5/data/work
2020-11-19 08:33:25,585 - mmdet - INFO - workflow: [('train', 2), ('val', 1)], max: 4 epochs
2020-11-19 08:34:42,770 - mmdet - INFO - Epoch [1][100/620]	lr: 1.988e-03, eta: 0:30:32, time: 0.770, data_time: 0.033, memory: 10046, loss_rpn_cls: 0.0035, loss_rpn_bbox: 0.0400, loss_cls: 0.0449, acc: 98.1826, loss_bbox: 0.0929, loss: 0.1813
2020-11-19 08:35:57,357 - mmdet - INFO - Epoch [1][200/620]	lr: 3.986e-03, eta: 0:28:48, time: 0.746, data_time: 0.012, memory: 10046, loss_rpn_cls: 0.0035, loss_rpn_bbox: 0.0337, loss_cls: 0.0400, acc: 98.3740, loss_bbox: 0.0897, loss: 0.1670
2020-11-19 08:37:12,256 - mmdet - INFO - Epoch [1][300/620]	lr: 5.984e-03, eta: 0:27:25, time: 0.749, data_time: 0.012, memory: 11881, loss_rpn_cls: 0.0044, loss_rpn_bbox: 0.0370, loss_cls: 0.0429, acc: 98.2637, loss_bbox: 0.0969, loss: 0.1812
2020-11-19 08:38:26,692 - mmdet - INFO - Epoch [1][400/620]	lr: 7.982e-03, eta: 0:26:04, time: 0.744, data_time: 0.012, memory: 11881, loss_rpn_cls: 0.0040, loss_rpn_bbox: 0.0377, loss_cls: 0.0428, acc: 98.1641, loss_bbox: 0.0918, loss: 0.1763
2020-11-19 08:39:41,460 - mmdet - INFO - Epoch [1][500/620]	lr: 9.980e-03, eta: 0:24:47, time: 0.748, data_time: 0.012, memory: 11881, loss_rpn_cls: 0.0044, loss_rpn_bbox: 0.0416, loss_cls: 0.0473, acc: 98.0469, loss_bbox: 0.1036, loss: 0.1969
2020-11-19 08:40:56,163 - mmdet - INFO - Epoch [1][600/620]	lr: 1.000e-02, eta: 0:23:31, time: 0.747, data_time: 0.012, memory: 11881, loss_rpn_cls: 0.0053, loss_rpn_bbox: 0.0471, loss_cls: 0.0510, acc: 97.9609, loss_bbox: 0.1124, loss: 0.2158
2020-11-19 08:41:35,787 - mmdet - INFO - Evaluating bbox...
2020-11-19 08:41:39,090 - mmdet - INFO - Epoch [1][620/620]	lr: 1.000e-02, bbox_mAP: 0.7780, bbox_mAP_50: 0.8680, bbox_mAP_75: 0.8320, bbox_mAP_s: 0.4680, bbox_mAP_m: 0.7620, bbox_mAP_l: 0.8680, bbox_mAP_copypaste: 0.778 0.868 0.832 0.468 0.762 0.868
2020-11-19 08:42:56,378 - mmdet - INFO - Epoch [2][100/620]	lr: 1.000e-02, eta: 0:21:29, time: 0.771, data_time: 0.033, memory: 11881, loss_rpn_cls: 0.0040, loss_rpn_bbox: 0.0451, loss_cls: 0.0453, acc: 98.1436, loss_bbox: 0.1063, loss: 0.2006
2020-11-19 08:44:10,992 - mmdet - INFO - Epoch [2][200/620]	lr: 1.000e-02, eta: 0:20:18, time: 0.746, data_time: 0.012, memory: 11881, loss_rpn_cls: 0.0031, loss_rpn_bbox: 0.0428, loss_cls: 0.0393, acc: 98.3633, loss_bbox: 0.0993, loss: 0.1845
2020-11-19 08:45:25,842 - mmdet - INFO - Epoch [2][300/620]	lr: 1.000e-02, eta: 0:19:07, time: 0.748, data_time: 0.012, memory: 11881, loss_rpn_cls: 0.0036, loss_rpn_bbox: 0.0440, loss_cls: 0.0403, acc: 98.3076, loss_bbox: 0.0961, loss: 0.1840
2020-11-19 08:46:40,381 - mmdet - INFO - Epoch [2][400/620]	lr: 1.000e-02, eta: 0:17:55, time: 0.745, data_time: 0.012, memory: 11881, loss_rpn_cls: 0.0045, loss_rpn_bbox: 0.0430, loss_cls: 0.0489, acc: 97.9824, loss_bbox: 0.1026, loss: 0.1990
2020-11-19 08:47:55,069 - mmdet - INFO - Epoch [2][500/620]	lr: 1.000e-02, eta: 0:16:43, time: 0.747, data_time: 0.012, memory: 11881, loss_rpn_cls: 0.0043, loss_rpn_bbox: 0.0432, loss_cls: 0.0470, acc: 98.0264, loss_bbox: 0.0977, loss: 0.1922
2020-11-19 08:49:09,588 - mmdet - INFO - Epoch [2][600/620]	lr: 1.000e-02, eta: 0:15:30, time: 0.745, data_time: 0.012, memory: 11881, loss_rpn_cls: 0.0038, loss_rpn_bbox: 0.0411, loss_cls: 0.0420, acc: 98.2773, loss_bbox: 0.0922, loss: 0.1789
2020-11-19 08:49:49,322 - mmdet - INFO - Evaluating bbox...
2020-11-19 08:49:52,482 - mmdet - INFO - Epoch [2][620/620]	lr: 1.000e-02, bbox_mAP: 0.7660, bbox_mAP_50: 0.8650, bbox_mAP_75: 0.8320, bbox_mAP_s: 0.4560, bbox_mAP_m: 0.7220, bbox_mAP_l: 0.8430, bbox_mAP_copypaste: 0.766 0.865 0.832 0.456 0.722 0.843
2020-11-19 08:50:23,467 - mmdet - INFO - Epoch(train) [2][77]	loss_rpn_cls: 0.0075, loss_rpn_bbox: 0.0526, loss_cls: 0.0670, acc: 97.2060, loss_bbox: 0.1364, loss: 0.2635
2020-11-19 08:51:40,388 - mmdet - INFO - Epoch [3][100/620]	lr: 1.000e-02, eta: 0:13:51, time: 0.767, data_time: 0.033, memory: 11881, loss_rpn_cls: 0.0060, loss_rpn_bbox: 0.0465, loss_cls: 0.0487, acc: 98.0762, loss_bbox: 0.1086, loss: 0.2098
2020-11-19 08:52:55,128 - mmdet - INFO - Epoch [3][200/620]	lr: 1.000e-02, eta: 0:12:39, time: 0.747, data_time: 0.012, memory: 11881, loss_rpn_cls: 0.0053, loss_rpn_bbox: 0.0425, loss_cls: 0.0434, acc: 98.1367, loss_bbox: 0.1025, loss: 0.1936
2020-11-19 08:54:09,700 - mmdet - INFO - Epoch [3][300/620]	lr: 1.000e-02, eta: 0:11:27, time: 0.746, data_time: 0.012, memory: 11881, loss_rpn_cls: 0.0037, loss_rpn_bbox: 0.0437, loss_cls: 0.0415, acc: 98.2871, loss_bbox: 0.1012, loss: 0.1901
2020-11-19 08:55:24,256 - mmdet - INFO - Epoch [3][400/620]	lr: 1.000e-02, eta: 0:10:15, time: 0.746, data_time: 0.012, memory: 11881, loss_rpn_cls: 0.0044, loss_rpn_bbox: 0.0416, loss_cls: 0.0401, acc: 98.3857, loss_bbox: 0.0929, loss: 0.1790
2020-11-19 08:56:38,954 - mmdet - INFO - Epoch [3][500/620]	lr: 1.000e-02, eta: 0:09:02, time: 0.747, data_time: 0.014, memory: 11881, loss_rpn_cls: 0.0030, loss_rpn_bbox: 0.0406, loss_cls: 0.0429, acc: 98.1299, loss_bbox: 0.0980, loss: 0.1845
2020-11-19 08:57:53,701 - mmdet - INFO - Epoch [3][600/620]	lr: 1.000e-02, eta: 0:07:49, time: 0.747, data_time: 0.012, memory: 11881, loss_rpn_cls: 0.0041, loss_rpn_bbox: 0.0457, loss_cls: 0.0514, acc: 97.8281, loss_bbox: 0.1126, loss: 0.2138
2020-11-19 08:58:33,440 - mmdet - INFO - Evaluating bbox...
2020-11-19 08:58:36,547 - mmdet - INFO - Epoch [3][620/620]	lr: 1.000e-02, bbox_mAP: 0.7670, bbox_mAP_50: 0.8560, bbox_mAP_75: 0.8230, bbox_mAP_s: 0.4570, bbox_mAP_m: 0.7410, bbox_mAP_l: 0.8650, bbox_mAP_copypaste: 0.767 0.856 0.823 0.457 0.741 0.865
2020-11-19 08:59:53,638 - mmdet - INFO - Epoch [4][100/620]	lr: 1.000e-02, eta: 0:06:18, time: 0.768, data_time: 0.033, memory: 11907, loss_rpn_cls: 0.0052, loss_rpn_bbox: 0.0439, loss_cls: 0.0455, acc: 98.1357, loss_bbox: 0.1014, loss: 0.1960
2020-11-19 09:01:08,228 - mmdet - INFO - Epoch [4][200/620]	lr: 1.000e-02, eta: 0:05:06, time: 0.746, data_time: 0.012, memory: 11907, loss_rpn_cls: 0.0088, loss_rpn_bbox: 0.0440, loss_cls: 0.0473, acc: 98.2148, loss_bbox: 0.1022, loss: 0.2022
2020-11-19 09:02:22,802 - mmdet - INFO - Epoch [4][300/620]	lr: 1.000e-02, eta: 0:03:53, time: 0.746, data_time: 0.012, memory: 11907, loss_rpn_cls: 0.0077, loss_rpn_bbox: 0.0474, loss_cls: 0.0602, acc: 97.5293, loss_bbox: 0.1110, loss: 0.2263
2020-11-19 09:03:37,459 - mmdet - INFO - Epoch [4][400/620]	lr: 1.000e-02, eta: 0:02:40, time: 0.747, data_time: 0.012, memory: 11907, loss_rpn_cls: 0.0048, loss_rpn_bbox: 0.0461, loss_cls: 0.0507, acc: 97.8916, loss_bbox: 0.1121, loss: 0.2137
2020-11-19 09:04:51,887 - mmdet - INFO - Epoch [4][500/620]	lr: 1.000e-02, eta: 0:01:27, time: 0.744, data_time: 0.012, memory: 11907, loss_rpn_cls: 0.0033, loss_rpn_bbox: 0.0414, loss_cls: 0.0391, acc: 98.3457, loss_bbox: 0.0947, loss: 0.1786
2020-11-19 09:06:06,362 - mmdet - INFO - Epoch [4][600/620]	lr: 1.000e-02, eta: 0:00:14, time: 0.745, data_time: 0.012, memory: 11907, loss_rpn_cls: 0.0036, loss_rpn_bbox: 0.0402, loss_cls: 0.0406, acc: 98.3184, loss_bbox: 0.1020, loss: 0.1864
2020-11-19 09:06:21,180 - mmdet - INFO - Saving checkpoint at 4 epochs
2020-11-19 09:06:47,619 - mmdet - INFO - Evaluating bbox...
2020-11-19 09:06:50,779 - mmdet - INFO - Epoch [4][620/620]	lr: 1.000e-02, bbox_mAP: 0.7600, bbox_mAP_50: 0.8500, bbox_mAP_75: 0.8130, bbox_mAP_s: 0.4420, bbox_mAP_m: 0.7300, bbox_mAP_l: 0.8560, bbox_mAP_copypaste: 0.760 0.850 0.813 0.442 0.730 0.856
2020-11-19 09:07:21,814 - mmdet - INFO - Epoch(train) [4][77]	loss_rpn_cls: 0.0064, loss_rpn_bbox: 0.0496, loss_cls: 0.0683, acc: 97.0373, loss_bbox: 0.1267, loss: 0.2510
