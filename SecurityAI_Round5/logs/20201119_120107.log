2020-11-19 12:01:08,346 - mmdet - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.6.4 |Anaconda, Inc.| (default, Jan 16 2018, 18:10:19) [GCC 7.2.0]
CUDA available: True
CUDA_HOME: /usr/local/cuda
NVCC: Cuda compilation tools, release 10.0, V10.0.130
GPU 0: Tesla P100-PCIE-16GB
GCC: gcc (GCC) 5.3.0
PyTorch: 1.3.1+cu100
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - Intel(R) Math Kernel Library Version 2019.0.4 Product Build 20190411 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.20.5 (Git Hash 0125f28c61c1f822fd48570b4c1066f96fcb9b2e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CUDA Runtime 10.0
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.1
  - Build settings: BLAS=MKL, BUILD_NAMEDTENSOR=OFF, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Wno-stringop-overflow, DISABLE_NUMA=1, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=True, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

TorchVision: 0.4.2+cu100
OpenCV: 4.4.0
MMCV: 1.0.5
MMDetection: 2.3.0+788fa8d
MMDetection Compiler: GCC 7.3
MMDetection CUDA Compiler: 10.0
------------------------------------------------------------

2020-11-19 12:01:08,346 - mmdet - INFO - Distributed training: False
2020-11-19 12:01:08,779 - mmdet - INFO - Config:
model = dict(
    type='FasterRCNN',
    pretrained='torchvision://resnet50',
    backbone=dict(
        type='ResNet',
        depth=50,
        num_stages=4,
        out_indices=(0, 1, 2, 3),
        frozen_stages=1,
        norm_cfg=dict(type='BN', requires_grad=True),
        norm_eval=True,
        style='pytorch'),
    neck=dict(
        type='FPN',
        in_channels=[256, 512, 1024, 2048],
        out_channels=256,
        num_outs=5),
    rpn_head=dict(
        type='RPNHead',
        in_channels=256,
        feat_channels=256,
        anchor_generator=dict(
            type='AnchorGenerator',
            scales=[8],
            ratios=[0.5, 1.0, 2.0],
            strides=[4, 8, 16, 32, 64]),
        bbox_coder=dict(
            type='DeltaXYWHBBoxCoder',
            target_means=[0.0, 0.0, 0.0, 0.0],
            target_stds=[1.0, 1.0, 1.0, 1.0]),
        loss_cls=dict(
            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),
        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),
    roi_head=dict(
        type='StandardRoIHead',
        bbox_roi_extractor=dict(
            type='SingleRoIExtractor',
            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),
            out_channels=256,
            featmap_strides=[4, 8, 16, 32]),
        bbox_head=dict(
            type='Shared2FCBBoxHead',
            in_channels=256,
            fc_out_channels=1024,
            roi_feat_size=7,
            num_classes=2,
            bbox_coder=dict(
                type='DeltaXYWHBBoxCoder',
                target_means=[0.0, 0.0, 0.0, 0.0],
                target_stds=[0.1, 0.1, 0.2, 0.2]),
            reg_class_agnostic=False,
            loss_cls=dict(
                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),
            loss_bbox=dict(type='L1Loss', loss_weight=1.0))))
train_cfg = dict(
    rpn=dict(
        assigner=dict(
            type='MaxIoUAssigner',
            pos_iou_thr=0.7,
            neg_iou_thr=0.3,
            min_pos_iou=0.3,
            match_low_quality=True,
            ignore_iof_thr=-1),
        sampler=dict(
            type='RandomSampler',
            num=256,
            pos_fraction=0.5,
            neg_pos_ub=-1,
            add_gt_as_proposals=False),
        allowed_border=-1,
        pos_weight=-1,
        debug=False),
    rpn_proposal=dict(
        nms_across_levels=False,
        nms_pre=2000,
        nms_post=1000,
        max_num=1000,
        nms_thr=0.7,
        min_bbox_size=0),
    rcnn=dict(
        assigner=dict(
            type='MaxIoUAssigner',
            pos_iou_thr=0.5,
            neg_iou_thr=0.5,
            min_pos_iou=0.5,
            match_low_quality=False,
            ignore_iof_thr=-1),
        sampler=dict(
            type='RandomSampler',
            num=512,
            pos_fraction=0.25,
            neg_pos_ub=-1,
            add_gt_as_proposals=True),
        pos_weight=-1,
        debug=False))
test_cfg = dict(
    rpn=dict(
        nms_across_levels=False,
        nms_pre=1000,
        nms_post=1000,
        max_num=1000,
        nms_thr=0.7,
        min_bbox_size=0),
    rcnn=dict(
        score_thr=0.05,
        nms=dict(type='nms', iou_threshold=0.5),
        max_per_img=100))
dataset_type = 'CocoDataset'
data_root = 'data/coco/'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(type='Resize', img_scale=(1550, 1550), keep_ratio=True),
    dict(type='RandomFlip', flip_ratio=0.5),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='Pad', size_divisor=32),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(1550, 1550),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=2,
    workers_per_gpu=2,
    train=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_trai.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(type='Resize', img_scale=(1550, 1550), keep_ratio=True),
            dict(type='RandomFlip', flip_ratio=0.5),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
        ]),
    val=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_test.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1550, 1550),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_vals.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1550, 1550),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
evaluation = dict(interval=1, metric='bbox')
optimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0001)
optimizer_config = dict(grad_clip=None)
lr_config = dict(
    policy='step',
    warmup='linear',
    warmup_iters=500,
    warmup_ratio=0.001,
    step=[8, 11])
total_epochs = 4
checkpoint_config = dict(interval=4)
log_config = dict(interval=100, hooks=[dict(type='TextLoggerHook')])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = '/home/admin/.cache/torch/checkpoints/X.pth'
resume_from = None
workflow = [('train', 2), ('val', 1)]
work_dir = '/home/admin/jupyter/SecurityAI_Round5/data/work'
gpu_ids = range(0, 1)

2020-11-19 12:01:09,281 - mmdet - INFO - load model from: torchvision://resnet50
2020-11-19 12:01:17,160 - mmdet - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: fc.weight, fc.bias

2020-11-19 12:01:28,061 - mmdet - INFO - load checkpoint from /home/admin/.cache/torch/checkpoints/X.pth
2020-11-19 12:01:34,962 - mmdet - INFO - Start running, host: admin@fuxilabor_labor0_S4_Odps_S96_dsw_prepaid_cnsh_838_2020111823124, work_dir: /home/admin/jupyter/SecurityAI_Round5/data/work
2020-11-19 12:01:34,963 - mmdet - INFO - workflow: [('train', 2), ('val', 1)], max: 4 epochs
2020-11-19 12:02:53,365 - mmdet - INFO - Epoch [1][100/624]	lr: 1.988e-03, eta: 0:31:13, time: 0.782, data_time: 0.034, memory: 8023, loss_rpn_cls: 0.0029, loss_rpn_bbox: 0.0384, loss_cls: 0.0413, acc: 98.3340, loss_bbox: 0.0958, loss: 0.1784
2020-11-19 12:04:08,841 - mmdet - INFO - Epoch [1][200/624]	lr: 3.986e-03, eta: 0:29:24, time: 0.755, data_time: 0.012, memory: 9501, loss_rpn_cls: 0.0026, loss_rpn_bbox: 0.0326, loss_cls: 0.0392, acc: 98.3242, loss_bbox: 0.0881, loss: 0.1625
2020-11-19 12:05:23,849 - mmdet - INFO - Epoch [1][300/624]	lr: 5.984e-03, eta: 0:27:54, time: 0.750, data_time: 0.012, memory: 9501, loss_rpn_cls: 0.0047, loss_rpn_bbox: 0.0365, loss_cls: 0.0459, acc: 98.1074, loss_bbox: 0.0930, loss: 0.1801
2020-11-19 12:06:39,261 - mmdet - INFO - Epoch [1][400/624]	lr: 7.982e-03, eta: 0:26:33, time: 0.754, data_time: 0.013, memory: 9819, loss_rpn_cls: 0.0046, loss_rpn_bbox: 0.0383, loss_cls: 0.0434, acc: 98.1553, loss_bbox: 0.0938, loss: 0.1801
2020-11-19 12:07:54,719 - mmdet - INFO - Epoch [1][500/624]	lr: 9.980e-03, eta: 0:25:15, time: 0.755, data_time: 0.012, memory: 9819, loss_rpn_cls: 0.0051, loss_rpn_bbox: 0.0405, loss_cls: 0.0449, acc: 98.0947, loss_bbox: 0.0960, loss: 0.1864
2020-11-19 12:09:10,240 - mmdet - INFO - Epoch [1][600/624]	lr: 1.000e-02, eta: 0:23:58, time: 0.755, data_time: 0.012, memory: 9819, loss_rpn_cls: 0.0031, loss_rpn_bbox: 0.0408, loss_cls: 0.0396, acc: 98.3613, loss_bbox: 0.0918, loss: 0.1753
2020-11-19 12:09:52,452 - mmdet - INFO - Evaluating bbox...
2020-11-19 12:09:55,668 - mmdet - INFO - Epoch [1][624/624]	lr: 1.000e-02, bbox_mAP: 0.7560, bbox_mAP_50: 0.8300, bbox_mAP_75: 0.8090, bbox_mAP_s: 0.4100, bbox_mAP_m: 0.7890, bbox_mAP_l: 0.8760, bbox_mAP_copypaste: 0.756 0.830 0.809 0.410 0.789 0.876
2020-11-19 12:11:12,945 - mmdet - INFO - Epoch [2][100/624]	lr: 1.000e-02, eta: 0:21:42, time: 0.771, data_time: 0.034, memory: 9819, loss_rpn_cls: 0.0033, loss_rpn_bbox: 0.0374, loss_cls: 0.0385, acc: 98.3809, loss_bbox: 0.0908, loss: 0.1700
2020-11-19 12:12:27,705 - mmdet - INFO - Epoch [2][200/624]	lr: 1.000e-02, eta: 0:20:31, time: 0.748, data_time: 0.012, memory: 9819, loss_rpn_cls: 0.0047, loss_rpn_bbox: 0.0423, loss_cls: 0.0447, acc: 98.1260, loss_bbox: 0.1001, loss: 0.1918
2020-11-19 12:13:42,913 - mmdet - INFO - Epoch [2][300/624]	lr: 1.000e-02, eta: 0:19:20, time: 0.752, data_time: 0.012, memory: 9819, loss_rpn_cls: 0.0042, loss_rpn_bbox: 0.0436, loss_cls: 0.0483, acc: 97.9531, loss_bbox: 0.1021, loss: 0.1981
2020-11-19 12:14:57,808 - mmdet - INFO - Epoch [2][400/624]	lr: 1.000e-02, eta: 0:18:08, time: 0.749, data_time: 0.012, memory: 9819, loss_rpn_cls: 0.0031, loss_rpn_bbox: 0.0427, loss_cls: 0.0382, acc: 98.4053, loss_bbox: 0.0936, loss: 0.1777
2020-11-19 12:16:13,569 - mmdet - INFO - Epoch [2][500/624]	lr: 1.000e-02, eta: 0:16:56, time: 0.758, data_time: 0.013, memory: 9819, loss_rpn_cls: 0.0037, loss_rpn_bbox: 0.0402, loss_cls: 0.0409, acc: 98.3555, loss_bbox: 0.0973, loss: 0.1821
2020-11-19 12:17:28,665 - mmdet - INFO - Epoch [2][600/624]	lr: 1.000e-02, eta: 0:15:43, time: 0.751, data_time: 0.012, memory: 9819, loss_rpn_cls: 0.0051, loss_rpn_bbox: 0.0472, loss_cls: 0.0542, acc: 97.7627, loss_bbox: 0.1107, loss: 0.2171
2020-11-19 12:18:11,441 - mmdet - INFO - Evaluating bbox...
2020-11-19 12:18:14,682 - mmdet - INFO - Epoch [2][624/624]	lr: 1.000e-02, bbox_mAP: 0.7520, bbox_mAP_50: 0.8290, bbox_mAP_75: 0.8040, bbox_mAP_s: 0.4030, bbox_mAP_m: 0.7710, bbox_mAP_l: 0.8720, bbox_mAP_copypaste: 0.752 0.829 0.804 0.403 0.771 0.872
2020-11-19 12:18:45,938 - mmdet - INFO - Epoch(train) [2][76]	loss_rpn_cls: 0.0040, loss_rpn_bbox: 0.0387, loss_cls: 0.0436, acc: 98.2332, loss_bbox: 0.0947, loss: 0.1810
2020-11-19 12:20:03,606 - mmdet - INFO - Epoch [3][100/624]	lr: 1.000e-02, eta: 0:13:59, time: 0.775, data_time: 0.034, memory: 9819, loss_rpn_cls: 0.0029, loss_rpn_bbox: 0.0431, loss_cls: 0.0472, acc: 98.0205, loss_bbox: 0.1085, loss: 0.2017
2020-11-19 12:21:18,838 - mmdet - INFO - Epoch [3][200/624]	lr: 1.000e-02, eta: 0:12:47, time: 0.752, data_time: 0.013, memory: 9819, loss_rpn_cls: 0.0036, loss_rpn_bbox: 0.0417, loss_cls: 0.0399, acc: 98.3311, loss_bbox: 0.0921, loss: 0.1773
2020-11-19 12:22:34,474 - mmdet - INFO - Epoch [3][300/624]	lr: 1.000e-02, eta: 0:11:35, time: 0.756, data_time: 0.013, memory: 9819, loss_rpn_cls: 0.0043, loss_rpn_bbox: 0.0416, loss_cls: 0.0424, acc: 98.2891, loss_bbox: 0.1027, loss: 0.1910
2020-11-19 12:23:49,763 - mmdet - INFO - Epoch [3][400/624]	lr: 1.000e-02, eta: 0:10:23, time: 0.753, data_time: 0.013, memory: 9819, loss_rpn_cls: 0.0037, loss_rpn_bbox: 0.0413, loss_cls: 0.0441, acc: 98.1758, loss_bbox: 0.1045, loss: 0.1936
2020-11-19 12:25:04,601 - mmdet - INFO - Epoch [3][500/624]	lr: 1.000e-02, eta: 0:09:10, time: 0.748, data_time: 0.012, memory: 9820, loss_rpn_cls: 0.0049, loss_rpn_bbox: 0.0403, loss_cls: 0.0488, acc: 97.9629, loss_bbox: 0.1011, loss: 0.1951
2020-11-19 12:26:19,692 - mmdet - INFO - Epoch [3][600/624]	lr: 1.000e-02, eta: 0:07:57, time: 0.751, data_time: 0.012, memory: 9820, loss_rpn_cls: 0.0053, loss_rpn_bbox: 0.0466, loss_cls: 0.0494, acc: 97.9355, loss_bbox: 0.1028, loss: 0.2041
2020-11-19 12:27:02,236 - mmdet - INFO - Evaluating bbox...
2020-11-19 12:27:05,563 - mmdet - INFO - Epoch [3][624/624]	lr: 1.000e-02, bbox_mAP: 0.7430, bbox_mAP_50: 0.8240, bbox_mAP_75: 0.7930, bbox_mAP_s: 0.3880, bbox_mAP_m: 0.7500, bbox_mAP_l: 0.8650, bbox_mAP_copypaste: 0.743 0.824 0.793 0.388 0.750 0.865
2020-11-19 12:28:23,610 - mmdet - INFO - Epoch [4][100/624]	lr: 1.000e-02, eta: 0:06:22, time: 0.779, data_time: 0.035, memory: 9820, loss_rpn_cls: 0.0032, loss_rpn_bbox: 0.0401, loss_cls: 0.0435, acc: 98.2568, loss_bbox: 0.1005, loss: 0.1873
2020-11-19 12:29:38,882 - mmdet - INFO - Epoch [4][200/624]	lr: 1.000e-02, eta: 0:05:09, time: 0.753, data_time: 0.012, memory: 9820, loss_rpn_cls: 0.0031, loss_rpn_bbox: 0.0433, loss_cls: 0.0467, acc: 98.0225, loss_bbox: 0.1058, loss: 0.1988
2020-11-19 12:30:54,131 - mmdet - INFO - Epoch [4][300/624]	lr: 1.000e-02, eta: 0:03:57, time: 0.752, data_time: 0.012, memory: 9820, loss_rpn_cls: 0.0033, loss_rpn_bbox: 0.0415, loss_cls: 0.0426, acc: 98.1729, loss_bbox: 0.0993, loss: 0.1868
2020-11-19 12:32:09,400 - mmdet - INFO - Epoch [4][400/624]	lr: 1.000e-02, eta: 0:02:44, time: 0.753, data_time: 0.013, memory: 9820, loss_rpn_cls: 0.0041, loss_rpn_bbox: 0.0389, loss_cls: 0.0443, acc: 98.2275, loss_bbox: 0.0996, loss: 0.1869
2020-11-19 12:33:24,559 - mmdet - INFO - Epoch [4][500/624]	lr: 1.000e-02, eta: 0:01:30, time: 0.752, data_time: 0.012, memory: 9820, loss_rpn_cls: 0.0032, loss_rpn_bbox: 0.0416, loss_cls: 0.0388, acc: 98.3945, loss_bbox: 0.0913, loss: 0.1749
2020-11-19 12:34:40,191 - mmdet - INFO - Epoch [4][600/624]	lr: 1.000e-02, eta: 0:00:17, time: 0.756, data_time: 0.013, memory: 9820, loss_rpn_cls: 0.0053, loss_rpn_bbox: 0.0462, loss_cls: 0.0527, acc: 97.7783, loss_bbox: 0.1104, loss: 0.2147
2020-11-19 12:34:58,206 - mmdet - INFO - Saving checkpoint at 4 epochs
2020-11-19 12:35:24,836 - mmdet - INFO - Evaluating bbox...
2020-11-19 12:35:28,023 - mmdet - INFO - Epoch [4][624/624]	lr: 1.000e-02, bbox_mAP: 0.7510, bbox_mAP_50: 0.8290, bbox_mAP_75: 0.7990, bbox_mAP_s: 0.4050, bbox_mAP_m: 0.7630, bbox_mAP_l: 0.8700, bbox_mAP_copypaste: 0.751 0.829 0.799 0.405 0.763 0.870
2020-11-19 12:35:59,152 - mmdet - INFO - Epoch(train) [4][76]	loss_rpn_cls: 0.0056, loss_rpn_bbox: 0.0384, loss_cls: 0.0421, acc: 98.2627, loss_bbox: 0.0980, loss: 0.1840
