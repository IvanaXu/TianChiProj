2020-11-20 14:09:07,296 - mmdet - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.6.4 |Anaconda, Inc.| (default, Jan 16 2018, 18:10:19) [GCC 7.2.0]
CUDA available: True
CUDA_HOME: /usr/local/cuda
NVCC: Cuda compilation tools, release 10.0, V10.0.130
GPU 0: Tesla P100-PCIE-16GB
GCC: gcc (GCC) 5.3.0
PyTorch: 1.3.1+cu100
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - Intel(R) Math Kernel Library Version 2019.0.4 Product Build 20190411 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.20.5 (Git Hash 0125f28c61c1f822fd48570b4c1066f96fcb9b2e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CUDA Runtime 10.0
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.1
  - Build settings: BLAS=MKL, BUILD_NAMEDTENSOR=OFF, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Wno-stringop-overflow, DISABLE_NUMA=1, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=True, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

TorchVision: 0.4.2+cu100
OpenCV: 4.4.0
MMCV: 1.0.5
MMDetection: 2.3.0+788fa8d
MMDetection Compiler: GCC 7.3
MMDetection CUDA Compiler: 10.0
------------------------------------------------------------

2020-11-20 14:09:07,297 - mmdet - INFO - Distributed training: False
2020-11-20 14:09:07,681 - mmdet - INFO - Config:
model = dict(
    type='FasterRCNN',
    pretrained='torchvision://resnet50',
    backbone=dict(
        type='ResNet',
        depth=50,
        num_stages=4,
        out_indices=(0, 1, 2, 3),
        frozen_stages=1,
        norm_cfg=dict(type='BN', requires_grad=True),
        norm_eval=True,
        style='pytorch'),
    neck=dict(
        type='FPN',
        in_channels=[256, 512, 1024, 2048],
        out_channels=256,
        num_outs=5),
    rpn_head=dict(
        type='RPNHead',
        in_channels=256,
        feat_channels=256,
        anchor_generator=dict(
            type='AnchorGenerator',
            scales=[8],
            ratios=[0.5, 1.0, 2.0],
            strides=[4, 8, 16, 32, 64]),
        bbox_coder=dict(
            type='DeltaXYWHBBoxCoder',
            target_means=[0.0, 0.0, 0.0, 0.0],
            target_stds=[1.0, 1.0, 1.0, 1.0]),
        loss_cls=dict(
            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),
        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),
    roi_head=dict(
        type='StandardRoIHead',
        bbox_roi_extractor=dict(
            type='SingleRoIExtractor',
            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),
            out_channels=256,
            featmap_strides=[4, 8, 16, 32]),
        bbox_head=dict(
            type='Shared2FCBBoxHead',
            in_channels=256,
            fc_out_channels=1024,
            roi_feat_size=7,
            num_classes=2,
            bbox_coder=dict(
                type='DeltaXYWHBBoxCoder',
                target_means=[0.0, 0.0, 0.0, 0.0],
                target_stds=[0.1, 0.1, 0.2, 0.2]),
            reg_class_agnostic=False,
            loss_cls=dict(
                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),
            loss_bbox=dict(type='L1Loss', loss_weight=1.0))))
train_cfg = dict(
    rpn=dict(
        assigner=dict(
            type='MaxIoUAssigner',
            pos_iou_thr=0.7,
            neg_iou_thr=0.3,
            min_pos_iou=0.3,
            match_low_quality=True,
            ignore_iof_thr=-1),
        sampler=dict(
            type='RandomSampler',
            num=256,
            pos_fraction=0.5,
            neg_pos_ub=-1,
            add_gt_as_proposals=False),
        allowed_border=-1,
        pos_weight=-1,
        debug=False),
    rpn_proposal=dict(
        nms_across_levels=False,
        nms_pre=2000,
        nms_post=1000,
        max_num=1000,
        nms_thr=0.7,
        min_bbox_size=0),
    rcnn=dict(
        assigner=dict(
            type='MaxIoUAssigner',
            pos_iou_thr=0.5,
            neg_iou_thr=0.5,
            min_pos_iou=0.5,
            match_low_quality=False,
            ignore_iof_thr=-1),
        sampler=dict(
            type='RandomSampler',
            num=512,
            pos_fraction=0.25,
            neg_pos_ub=-1,
            add_gt_as_proposals=True),
        pos_weight=-1,
        debug=False))
test_cfg = dict(
    rpn=dict(
        nms_across_levels=False,
        nms_pre=1000,
        nms_post=1000,
        max_num=1000,
        nms_thr=0.7,
        min_bbox_size=0),
    rcnn=dict(
        score_thr=0.05,
        nms=dict(type='nms', iou_threshold=0.5),
        max_per_img=100))
dataset_type = 'CocoDataset'
data_root = 'data/coco/'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(type='Resize', img_scale=(1550, 1550), keep_ratio=True),
    dict(type='RandomFlip', flip_ratio=0.5),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='Pad', size_divisor=32),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(1550, 1550),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=2,
    workers_per_gpu=2,
    train=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_trai.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(type='Resize', img_scale=(1550, 1550), keep_ratio=True),
            dict(type='RandomFlip', flip_ratio=0.5),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
        ]),
    val=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_test.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1550, 1550),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_vals.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1550, 1550),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
evaluation = dict(interval=1, metric='bbox')
optimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0001)
optimizer_config = dict(grad_clip=None)
lr_config = dict(
    policy='step',
    warmup='linear',
    warmup_iters=500,
    warmup_ratio=0.001,
    step=[8, 11])
total_epochs = 4
checkpoint_config = dict(interval=4)
log_config = dict(interval=100, hooks=[dict(type='TextLoggerHook')])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = '/home/admin/.cache/torch/checkpoints/X.pth'
resume_from = None
workflow = [('train', 2), ('val', 1)]
work_dir = '/home/admin/jupyter/SecurityAI_Round5/data/work'
gpu_ids = range(0, 1)

2020-11-20 14:09:08,183 - mmdet - INFO - load model from: torchvision://resnet50
2020-11-20 14:09:16,103 - mmdet - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: fc.weight, fc.bias

2020-11-20 14:09:26,136 - mmdet - INFO - load checkpoint from /home/admin/.cache/torch/checkpoints/X.pth
2020-11-20 14:09:32,697 - mmdet - INFO - Start running, host: admin@fuxilabor_labor0_S4_Odps_S96_dsw_prepaid_cnsh_838_2020112000281, work_dir: /home/admin/jupyter/SecurityAI_Round5/data/work
2020-11-20 14:09:32,697 - mmdet - INFO - workflow: [('train', 2), ('val', 1)], max: 4 epochs
2020-11-20 14:10:50,588 - mmdet - INFO - Epoch [1][100/613]	lr: 1.988e-03, eta: 0:30:27, time: 0.777, data_time: 0.034, memory: 9531, loss_rpn_cls: 0.0031, loss_rpn_bbox: 0.0326, loss_cls: 0.0359, acc: 98.4834, loss_bbox: 0.0833, loss: 0.1550
2020-11-20 14:12:05,706 - mmdet - INFO - Epoch [1][200/613]	lr: 3.986e-03, eta: 0:28:40, time: 0.751, data_time: 0.012, memory: 9780, loss_rpn_cls: 0.0022, loss_rpn_bbox: 0.0289, loss_cls: 0.0336, acc: 98.5684, loss_bbox: 0.0767, loss: 0.1414
2020-11-20 14:13:21,010 - mmdet - INFO - Epoch [1][300/613]	lr: 5.984e-03, eta: 0:27:16, time: 0.753, data_time: 0.012, memory: 10079, loss_rpn_cls: 0.0032, loss_rpn_bbox: 0.0314, loss_cls: 0.0360, acc: 98.5195, loss_bbox: 0.0810, loss: 0.1517
2020-11-20 14:14:36,267 - mmdet - INFO - Epoch [1][400/613]	lr: 7.982e-03, eta: 0:25:56, time: 0.753, data_time: 0.012, memory: 11888, loss_rpn_cls: 0.0030, loss_rpn_bbox: 0.0326, loss_cls: 0.0326, acc: 98.6494, loss_bbox: 0.0767, loss: 0.1449
2020-11-20 14:15:51,290 - mmdet - INFO - Epoch [1][500/613]	lr: 9.980e-03, eta: 0:24:37, time: 0.750, data_time: 0.012, memory: 11888, loss_rpn_cls: 0.0032, loss_rpn_bbox: 0.0338, loss_cls: 0.0372, acc: 98.4648, loss_bbox: 0.0810, loss: 0.1552
2020-11-20 14:17:06,225 - mmdet - INFO - Epoch [1][600/613]	lr: 1.000e-02, eta: 0:23:19, time: 0.749, data_time: 0.012, memory: 11888, loss_rpn_cls: 0.0028, loss_rpn_bbox: 0.0354, loss_cls: 0.0403, acc: 98.2705, loss_bbox: 0.0852, loss: 0.1637
2020-11-20 14:17:43,772 - mmdet - INFO - Evaluating bbox...
2020-11-20 14:17:45,843 - mmdet - INFO - Epoch [1][613/613]	lr: 1.000e-02, bbox_mAP: 0.8120, bbox_mAP_50: 0.8850, bbox_mAP_75: 0.8750, bbox_mAP_s: 0.5390, bbox_mAP_m: 0.8540, bbox_mAP_l: 0.8850, bbox_mAP_copypaste: 0.812 0.885 0.875 0.539 0.854 0.885
2020-11-20 14:19:03,282 - mmdet - INFO - Epoch [2][100/613]	lr: 1.000e-02, eta: 0:21:34, time: 0.772, data_time: 0.033, memory: 11888, loss_rpn_cls: 0.0029, loss_rpn_bbox: 0.0348, loss_cls: 0.0361, acc: 98.5078, loss_bbox: 0.0823, loss: 0.1561
2020-11-20 14:20:18,465 - mmdet - INFO - Epoch [2][200/613]	lr: 1.000e-02, eta: 0:20:21, time: 0.752, data_time: 0.012, memory: 11888, loss_rpn_cls: 0.0029, loss_rpn_bbox: 0.0373, loss_cls: 0.0382, acc: 98.2803, loss_bbox: 0.0852, loss: 0.1637
2020-11-20 14:21:33,392 - mmdet - INFO - Epoch [2][300/613]	lr: 1.000e-02, eta: 0:19:07, time: 0.749, data_time: 0.012, memory: 11888, loss_rpn_cls: 0.0026, loss_rpn_bbox: 0.0381, loss_cls: 0.0403, acc: 98.3066, loss_bbox: 0.0909, loss: 0.1719
2020-11-20 14:22:48,035 - mmdet - INFO - Epoch [2][400/613]	lr: 1.000e-02, eta: 0:17:52, time: 0.746, data_time: 0.012, memory: 11888, loss_rpn_cls: 0.0025, loss_rpn_bbox: 0.0323, loss_cls: 0.0311, acc: 98.7227, loss_bbox: 0.0778, loss: 0.1438
2020-11-20 14:24:02,858 - mmdet - INFO - Epoch [2][500/613]	lr: 1.000e-02, eta: 0:16:38, time: 0.748, data_time: 0.012, memory: 11888, loss_rpn_cls: 0.0032, loss_rpn_bbox: 0.0335, loss_cls: 0.0404, acc: 98.3037, loss_bbox: 0.0831, loss: 0.1603
2020-11-20 14:25:18,029 - mmdet - INFO - Epoch [2][600/613]	lr: 1.000e-02, eta: 0:15:24, time: 0.752, data_time: 0.012, memory: 11888, loss_rpn_cls: 0.0024, loss_rpn_bbox: 0.0376, loss_cls: 0.0363, acc: 98.4463, loss_bbox: 0.0917, loss: 0.1680
2020-11-20 14:25:55,630 - mmdet - INFO - Evaluating bbox...
2020-11-20 14:25:57,759 - mmdet - INFO - Epoch [2][613/613]	lr: 1.000e-02, bbox_mAP: 0.8160, bbox_mAP_50: 0.8850, bbox_mAP_75: 0.8750, bbox_mAP_s: 0.5390, bbox_mAP_m: 0.8540, bbox_mAP_l: 0.8950, bbox_mAP_copypaste: 0.816 0.885 0.875 0.539 0.854 0.895
2020-11-20 14:26:32,421 - mmdet - INFO - Epoch(train) [2][87]	loss_rpn_cls: 0.0028, loss_rpn_bbox: 0.0373, loss_cls: 0.0312, acc: 98.7900, loss_bbox: 0.0901, loss: 0.1614
2020-11-20 14:27:49,711 - mmdet - INFO - Epoch [3][100/613]	lr: 1.000e-02, eta: 0:13:54, time: 0.771, data_time: 0.034, memory: 11888, loss_rpn_cls: 0.0031, loss_rpn_bbox: 0.0346, loss_cls: 0.0334, acc: 98.5908, loss_bbox: 0.0810, loss: 0.1520
2020-11-20 14:29:04,723 - mmdet - INFO - Epoch [3][200/613]	lr: 1.000e-02, eta: 0:12:40, time: 0.750, data_time: 0.012, memory: 11888, loss_rpn_cls: 0.0025, loss_rpn_bbox: 0.0362, loss_cls: 0.0322, acc: 98.6475, loss_bbox: 0.0832, loss: 0.1542
2020-11-20 14:30:19,616 - mmdet - INFO - Epoch [3][300/613]	lr: 1.000e-02, eta: 0:11:27, time: 0.749, data_time: 0.012, memory: 11888, loss_rpn_cls: 0.0047, loss_rpn_bbox: 0.0382, loss_cls: 0.0460, acc: 98.0811, loss_bbox: 0.0945, loss: 0.1834
2020-11-20 14:31:34,613 - mmdet - INFO - Epoch [3][400/613]	lr: 1.000e-02, eta: 0:10:13, time: 0.750, data_time: 0.012, memory: 11888, loss_rpn_cls: 0.0036, loss_rpn_bbox: 0.0355, loss_cls: 0.0413, acc: 98.2803, loss_bbox: 0.0935, loss: 0.1739
2020-11-20 14:32:49,465 - mmdet - INFO - Epoch [3][500/613]	lr: 1.000e-02, eta: 0:08:59, time: 0.749, data_time: 0.012, memory: 11888, loss_rpn_cls: 0.0044, loss_rpn_bbox: 0.0366, loss_cls: 0.0378, acc: 98.3408, loss_bbox: 0.0859, loss: 0.1646
2020-11-20 14:34:04,271 - mmdet - INFO - Epoch [3][600/613]	lr: 1.000e-02, eta: 0:07:45, time: 0.748, data_time: 0.012, memory: 11888, loss_rpn_cls: 0.0035, loss_rpn_bbox: 0.0361, loss_cls: 0.0402, acc: 98.2539, loss_bbox: 0.0890, loss: 0.1688
2020-11-20 14:34:41,733 - mmdet - INFO - Evaluating bbox...
2020-11-20 14:34:43,831 - mmdet - INFO - Epoch [3][613/613]	lr: 1.000e-02, bbox_mAP: 0.8090, bbox_mAP_50: 0.8800, bbox_mAP_75: 0.8650, bbox_mAP_s: 0.5330, bbox_mAP_m: 0.8550, bbox_mAP_l: 0.8880, bbox_mAP_copypaste: 0.809 0.880 0.865 0.533 0.855 0.888
2020-11-20 14:36:01,104 - mmdet - INFO - Epoch [4][100/613]	lr: 1.000e-02, eta: 0:06:19, time: 0.771, data_time: 0.034, memory: 11888, loss_rpn_cls: 0.0030, loss_rpn_bbox: 0.0353, loss_cls: 0.0325, acc: 98.6582, loss_bbox: 0.0844, loss: 0.1552
2020-11-20 14:37:15,998 - mmdet - INFO - Epoch [4][200/613]	lr: 1.000e-02, eta: 0:05:05, time: 0.749, data_time: 0.012, memory: 11914, loss_rpn_cls: 0.0031, loss_rpn_bbox: 0.0363, loss_cls: 0.0365, acc: 98.4844, loss_bbox: 0.0868, loss: 0.1627
2020-11-20 14:38:31,011 - mmdet - INFO - Epoch [4][300/613]	lr: 1.000e-02, eta: 0:03:51, time: 0.750, data_time: 0.012, memory: 11914, loss_rpn_cls: 0.0035, loss_rpn_bbox: 0.0374, loss_cls: 0.0420, acc: 98.1895, loss_bbox: 0.0881, loss: 0.1710
2020-11-20 14:39:45,996 - mmdet - INFO - Epoch [4][400/613]	lr: 1.000e-02, eta: 0:02:37, time: 0.750, data_time: 0.012, memory: 11914, loss_rpn_cls: 0.0030, loss_rpn_bbox: 0.0347, loss_cls: 0.0400, acc: 98.2939, loss_bbox: 0.0893, loss: 0.1670
2020-11-20 14:41:00,845 - mmdet - INFO - Epoch [4][500/613]	lr: 1.000e-02, eta: 0:01:23, time: 0.748, data_time: 0.012, memory: 11914, loss_rpn_cls: 0.0028, loss_rpn_bbox: 0.0342, loss_cls: 0.0366, acc: 98.3867, loss_bbox: 0.0770, loss: 0.1506
2020-11-20 14:42:15,885 - mmdet - INFO - Epoch [4][600/613]	lr: 1.000e-02, eta: 0:00:09, time: 0.750, data_time: 0.012, memory: 11914, loss_rpn_cls: 0.0031, loss_rpn_bbox: 0.0372, loss_cls: 0.0393, acc: 98.4141, loss_bbox: 0.0910, loss: 0.1706
2020-11-20 14:42:25,481 - mmdet - INFO - Saving checkpoint at 4 epochs
2020-11-20 14:42:55,220 - mmdet - INFO - Evaluating bbox...
2020-11-20 14:42:57,317 - mmdet - INFO - Epoch [4][613/613]	lr: 1.000e-02, bbox_mAP: 0.8150, bbox_mAP_50: 0.8800, bbox_mAP_75: 0.8700, bbox_mAP_s: 0.5410, bbox_mAP_m: 0.8680, bbox_mAP_l: 0.8980, bbox_mAP_copypaste: 0.815 0.880 0.870 0.541 0.868 0.898
2020-11-20 14:43:31,944 - mmdet - INFO - Epoch(train) [4][87]	loss_rpn_cls: 0.0031, loss_rpn_bbox: 0.0354, loss_cls: 0.0358, acc: 98.5767, loss_bbox: 0.0856, loss: 0.1599
