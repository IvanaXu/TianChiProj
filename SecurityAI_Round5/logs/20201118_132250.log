2020-11-18 13:22:50,657 - mmdet - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.6.4 |Anaconda, Inc.| (default, Jan 16 2018, 18:10:19) [GCC 7.2.0]
CUDA available: True
CUDA_HOME: /usr/local/cuda
NVCC: Cuda compilation tools, release 10.0, V10.0.130
GPU 0: Tesla P100-PCIE-16GB
GCC: gcc (GCC) 5.3.0
PyTorch: 1.3.1+cu100
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - Intel(R) Math Kernel Library Version 2019.0.4 Product Build 20190411 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.20.5 (Git Hash 0125f28c61c1f822fd48570b4c1066f96fcb9b2e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CUDA Runtime 10.0
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.1
  - Build settings: BLAS=MKL, BUILD_NAMEDTENSOR=OFF, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Wno-stringop-overflow, DISABLE_NUMA=1, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=True, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

TorchVision: 0.4.2+cu100
OpenCV: 4.4.0
MMCV: 1.0.5
MMDetection: 2.3.0+788fa8d
MMDetection Compiler: GCC 7.3
MMDetection CUDA Compiler: 10.0
------------------------------------------------------------

2020-11-18 13:22:50,658 - mmdet - INFO - Distributed training: False
2020-11-18 13:22:51,049 - mmdet - INFO - Config:
model = dict(
    type='FasterRCNN',
    pretrained='torchvision://resnet50',
    backbone=dict(
        type='ResNet',
        depth=50,
        num_stages=4,
        out_indices=(0, 1, 2, 3),
        frozen_stages=1,
        norm_cfg=dict(type='BN', requires_grad=True),
        norm_eval=True,
        style='pytorch'),
    neck=dict(
        type='FPN',
        in_channels=[256, 512, 1024, 2048],
        out_channels=256,
        num_outs=5),
    rpn_head=dict(
        type='RPNHead',
        in_channels=256,
        feat_channels=256,
        anchor_generator=dict(
            type='AnchorGenerator',
            scales=[8],
            ratios=[0.5, 1.0, 2.0],
            strides=[4, 8, 16, 32, 64]),
        bbox_coder=dict(
            type='DeltaXYWHBBoxCoder',
            target_means=[0.0, 0.0, 0.0, 0.0],
            target_stds=[1.0, 1.0, 1.0, 1.0]),
        loss_cls=dict(
            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),
        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),
    roi_head=dict(
        type='StandardRoIHead',
        bbox_roi_extractor=dict(
            type='SingleRoIExtractor',
            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),
            out_channels=256,
            featmap_strides=[4, 8, 16, 32]),
        bbox_head=dict(
            type='Shared2FCBBoxHead',
            in_channels=256,
            fc_out_channels=1024,
            roi_feat_size=7,
            num_classes=2,
            bbox_coder=dict(
                type='DeltaXYWHBBoxCoder',
                target_means=[0.0, 0.0, 0.0, 0.0],
                target_stds=[0.1, 0.1, 0.2, 0.2]),
            reg_class_agnostic=False,
            loss_cls=dict(
                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),
            loss_bbox=dict(type='L1Loss', loss_weight=1.0))))
train_cfg = dict(
    rpn=dict(
        assigner=dict(
            type='MaxIoUAssigner',
            pos_iou_thr=0.7,
            neg_iou_thr=0.3,
            min_pos_iou=0.3,
            match_low_quality=True,
            ignore_iof_thr=-1),
        sampler=dict(
            type='RandomSampler',
            num=256,
            pos_fraction=0.5,
            neg_pos_ub=-1,
            add_gt_as_proposals=False),
        allowed_border=-1,
        pos_weight=-1,
        debug=False),
    rpn_proposal=dict(
        nms_across_levels=False,
        nms_pre=2000,
        nms_post=1000,
        max_num=1000,
        nms_thr=0.7,
        min_bbox_size=0),
    rcnn=dict(
        assigner=dict(
            type='MaxIoUAssigner',
            pos_iou_thr=0.5,
            neg_iou_thr=0.5,
            min_pos_iou=0.5,
            match_low_quality=False,
            ignore_iof_thr=-1),
        sampler=dict(
            type='RandomSampler',
            num=512,
            pos_fraction=0.25,
            neg_pos_ub=-1,
            add_gt_as_proposals=True),
        pos_weight=-1,
        debug=False))
test_cfg = dict(
    rpn=dict(
        nms_across_levels=False,
        nms_pre=1000,
        nms_post=1000,
        max_num=1000,
        nms_thr=0.7,
        min_bbox_size=0),
    rcnn=dict(
        score_thr=0.05,
        nms=dict(type='nms', iou_threshold=0.5),
        max_per_img=100))
dataset_type = 'CocoDataset'
data_root = 'data/coco/'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(type='Resize', img_scale=(1550, 1550), keep_ratio=True),
    dict(type='RandomFlip', flip_ratio=0.5),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='Pad', size_divisor=32),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(1550, 1550),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=2,
    workers_per_gpu=2,
    train=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_trai.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(type='Resize', img_scale=(1550, 1550), keep_ratio=True),
            dict(type='RandomFlip', flip_ratio=0.5),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
        ]),
    val=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_test.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1550, 1550),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/annotations_vals.json',
        img_prefix='data/coco/img/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1550, 1550),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
evaluation = dict(interval=1, metric='bbox')
optimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0001)
optimizer_config = dict(grad_clip=None)
lr_config = dict(
    policy='step',
    warmup='linear',
    warmup_iters=500,
    warmup_ratio=0.001,
    step=[8, 11])
total_epochs = 4
checkpoint_config = dict(interval=4)
log_config = dict(interval=100, hooks=[dict(type='TextLoggerHook')])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = '/home/admin/.cache/torch/checkpoints/X.pth'
resume_from = None
workflow = [('train', 2), ('val', 1)]
work_dir = '/home/admin/jupyter/SecurityAI_Round5/data/work'
gpu_ids = range(0, 1)

2020-11-18 13:22:51,552 - mmdet - INFO - load model from: torchvision://resnet50
2020-11-18 13:22:59,649 - mmdet - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: fc.weight, fc.bias

2020-11-18 13:23:10,027 - mmdet - INFO - load checkpoint from /home/admin/.cache/torch/checkpoints/X.pth
2020-11-18 13:23:16,984 - mmdet - INFO - Start running, host: admin@fuxilabor_labor0_S4_Odps_S95_dsw_prepaid_cnsh_838_2020111802041, work_dir: /home/admin/jupyter/SecurityAI_Round5/data/work
2020-11-18 13:23:16,984 - mmdet - INFO - workflow: [('train', 2), ('val', 1)], max: 4 epochs
2020-11-18 13:24:34,157 - mmdet - INFO - Epoch [1][100/622]	lr: 1.988e-03, eta: 0:30:37, time: 0.770, data_time: 0.033, memory: 8135, loss_rpn_cls: 0.0088, loss_rpn_bbox: 0.0526, loss_cls: 0.0705, acc: 97.1465, loss_bbox: 0.1453, loss: 0.2772
2020-11-18 13:25:48,670 - mmdet - INFO - Epoch [1][200/622]	lr: 3.986e-03, eta: 0:28:52, time: 0.745, data_time: 0.012, memory: 8889, loss_rpn_cls: 0.0059, loss_rpn_bbox: 0.0421, loss_cls: 0.0561, acc: 97.7500, loss_bbox: 0.1151, loss: 0.2192
2020-11-18 13:27:03,298 - mmdet - INFO - Epoch [1][300/622]	lr: 5.984e-03, eta: 0:27:29, time: 0.746, data_time: 0.012, memory: 9501, loss_rpn_cls: 0.0086, loss_rpn_bbox: 0.0500, loss_cls: 0.0596, acc: 97.6396, loss_bbox: 0.1226, loss: 0.2407
2020-11-18 13:28:17,810 - mmdet - INFO - Epoch [1][400/622]	lr: 7.982e-03, eta: 0:26:09, time: 0.745, data_time: 0.012, memory: 9501, loss_rpn_cls: 0.0063, loss_rpn_bbox: 0.0461, loss_cls: 0.0589, acc: 97.5605, loss_bbox: 0.1148, loss: 0.2261
2020-11-18 13:29:32,641 - mmdet - INFO - Epoch [1][500/622]	lr: 9.980e-03, eta: 0:24:52, time: 0.748, data_time: 0.012, memory: 9801, loss_rpn_cls: 0.0055, loss_rpn_bbox: 0.0500, loss_cls: 0.0585, acc: 97.6006, loss_bbox: 0.1199, loss: 0.2340
2020-11-18 13:30:47,433 - mmdet - INFO - Epoch [1][600/622]	lr: 1.000e-02, eta: 0:23:36, time: 0.748, data_time: 0.012, memory: 9990, loss_rpn_cls: 0.0053, loss_rpn_bbox: 0.0539, loss_cls: 0.0605, acc: 97.4258, loss_bbox: 0.1326, loss: 0.2523
2020-11-18 13:31:27,440 - mmdet - INFO - Evaluating bbox...
2020-11-18 13:31:31,224 - mmdet - INFO - Epoch [1][622/622]	lr: 1.000e-02, bbox_mAP: 0.7000, bbox_mAP_50: 0.8010, bbox_mAP_75: 0.7540, bbox_mAP_s: 0.3230, bbox_mAP_m: 0.6870, bbox_mAP_l: 0.8230, bbox_mAP_copypaste: 0.700 0.801 0.754 0.323 0.687 0.823
2020-11-18 13:32:48,279 - mmdet - INFO - Epoch [2][100/622]	lr: 1.000e-02, eta: 0:21:29, time: 0.768, data_time: 0.033, memory: 9990, loss_rpn_cls: 0.0228, loss_rpn_bbox: 0.0594, loss_cls: 0.0723, acc: 97.3203, loss_bbox: 0.1349, loss: 0.2895
2020-11-18 13:34:02,728 - mmdet - INFO - Epoch [2][200/622]	lr: 1.000e-02, eta: 0:20:19, time: 0.744, data_time: 0.012, memory: 9990, loss_rpn_cls: 0.0124, loss_rpn_bbox: 0.0624, loss_cls: 0.0760, acc: 96.9746, loss_bbox: 0.1453, loss: 0.2960
2020-11-18 13:35:17,301 - mmdet - INFO - Epoch [2][300/622]	lr: 1.000e-02, eta: 0:19:08, time: 0.746, data_time: 0.012, memory: 9990, loss_rpn_cls: 0.0157, loss_rpn_bbox: 0.0589, loss_cls: 0.0743, acc: 97.0469, loss_bbox: 0.1363, loss: 0.2852
2020-11-18 13:36:31,683 - mmdet - INFO - Epoch [2][400/622]	lr: 1.000e-02, eta: 0:17:56, time: 0.744, data_time: 0.012, memory: 9990, loss_rpn_cls: 0.0322, loss_rpn_bbox: 0.0623, loss_cls: 0.0809, acc: 97.0586, loss_bbox: 0.1345, loss: 0.3099
2020-11-18 13:37:45,895 - mmdet - INFO - Epoch [2][500/622]	lr: 1.000e-02, eta: 0:16:43, time: 0.742, data_time: 0.012, memory: 9990, loss_rpn_cls: 0.0108, loss_rpn_bbox: 0.0604, loss_cls: 0.0717, acc: 97.0508, loss_bbox: 0.1442, loss: 0.2871
2020-11-18 13:39:00,281 - mmdet - INFO - Epoch [2][600/622]	lr: 1.000e-02, eta: 0:15:31, time: 0.744, data_time: 0.012, memory: 9990, loss_rpn_cls: 0.0150, loss_rpn_bbox: 0.0572, loss_cls: 0.0715, acc: 97.0732, loss_bbox: 0.1364, loss: 0.2801
2020-11-18 13:39:40,213 - mmdet - INFO - Evaluating bbox...
2020-11-18 13:39:44,034 - mmdet - INFO - Epoch [2][622/622]	lr: 1.000e-02, bbox_mAP: 0.6860, bbox_mAP_50: 0.7870, bbox_mAP_75: 0.7370, bbox_mAP_s: 0.2970, bbox_mAP_m: 0.6630, bbox_mAP_l: 0.8060, bbox_mAP_copypaste: 0.686 0.787 0.737 0.297 0.663 0.806
2020-11-18 13:40:14,032 - mmdet - INFO - Epoch(train) [2][74]	loss_rpn_cls: 0.0133, loss_rpn_bbox: 0.0546, loss_cls: 0.0740, acc: 96.9423, loss_bbox: 0.1445, loss: 0.2864
2020-11-18 13:41:30,648 - mmdet - INFO - Epoch [3][100/622]	lr: 1.000e-02, eta: 0:13:50, time: 0.764, data_time: 0.033, memory: 9990, loss_rpn_cls: 0.0102, loss_rpn_bbox: 0.0541, loss_cls: 0.0598, acc: 97.5322, loss_bbox: 0.1229, loss: 0.2470
2020-11-18 13:42:45,179 - mmdet - INFO - Epoch [3][200/622]	lr: 1.000e-02, eta: 0:12:39, time: 0.745, data_time: 0.012, memory: 9990, loss_rpn_cls: 0.0103, loss_rpn_bbox: 0.0568, loss_cls: 0.0674, acc: 97.1758, loss_bbox: 0.1342, loss: 0.2687
2020-11-18 13:43:59,765 - mmdet - INFO - Epoch [3][300/622]	lr: 1.000e-02, eta: 0:11:27, time: 0.746, data_time: 0.012, memory: 9990, loss_rpn_cls: 0.0066, loss_rpn_bbox: 0.0570, loss_cls: 0.0675, acc: 97.2168, loss_bbox: 0.1468, loss: 0.2779
2020-11-18 13:45:14,370 - mmdet - INFO - Epoch [3][400/622]	lr: 1.000e-02, eta: 0:10:15, time: 0.746, data_time: 0.012, memory: 9990, loss_rpn_cls: 0.0091, loss_rpn_bbox: 0.0543, loss_cls: 0.0742, acc: 96.9131, loss_bbox: 0.1444, loss: 0.2819
2020-11-18 13:46:28,628 - mmdet - INFO - Epoch [3][500/622]	lr: 1.000e-02, eta: 0:09:03, time: 0.743, data_time: 0.012, memory: 9990, loss_rpn_cls: 0.0067, loss_rpn_bbox: 0.0507, loss_cls: 0.0555, acc: 97.7949, loss_bbox: 0.1179, loss: 0.2308
2020-11-18 13:47:43,258 - mmdet - INFO - Epoch [3][600/622]	lr: 1.000e-02, eta: 0:07:50, time: 0.746, data_time: 0.012, memory: 9990, loss_rpn_cls: 0.0097, loss_rpn_bbox: 0.0576, loss_cls: 0.0727, acc: 97.0205, loss_bbox: 0.1468, loss: 0.2869
2020-11-18 13:48:23,184 - mmdet - INFO - Evaluating bbox...
2020-11-18 13:48:26,928 - mmdet - INFO - Epoch [3][622/622]	lr: 1.000e-02, bbox_mAP: 0.6950, bbox_mAP_50: 0.7940, bbox_mAP_75: 0.7420, bbox_mAP_s: 0.3010, bbox_mAP_m: 0.6730, bbox_mAP_l: 0.8250, bbox_mAP_copypaste: 0.695 0.794 0.742 0.301 0.673 0.825
2020-11-18 13:49:43,836 - mmdet - INFO - Epoch [4][100/622]	lr: 1.000e-02, eta: 0:06:18, time: 0.767, data_time: 0.033, memory: 9990, loss_rpn_cls: 0.0117, loss_rpn_bbox: 0.0551, loss_cls: 0.0660, acc: 97.3906, loss_bbox: 0.1299, loss: 0.2626
2020-11-18 13:50:58,434 - mmdet - INFO - Epoch [4][200/622]	lr: 1.000e-02, eta: 0:05:06, time: 0.746, data_time: 0.012, memory: 9990, loss_rpn_cls: 0.0058, loss_rpn_bbox: 0.0503, loss_cls: 0.0529, acc: 97.8203, loss_bbox: 0.1211, loss: 0.2302
2020-11-18 13:52:12,977 - mmdet - INFO - Epoch [4][300/622]	lr: 1.000e-02, eta: 0:03:53, time: 0.745, data_time: 0.012, memory: 9990, loss_rpn_cls: 0.0095, loss_rpn_bbox: 0.0609, loss_cls: 0.0717, acc: 96.9619, loss_bbox: 0.1421, loss: 0.2843
2020-11-18 13:53:27,730 - mmdet - INFO - Epoch [4][400/622]	lr: 1.000e-02, eta: 0:02:41, time: 0.748, data_time: 0.012, memory: 9990, loss_rpn_cls: 0.0102, loss_rpn_bbox: 0.0559, loss_cls: 0.0721, acc: 97.1611, loss_bbox: 0.1371, loss: 0.2753
2020-11-18 13:54:41,805 - mmdet - INFO - Epoch [4][500/622]	lr: 1.000e-02, eta: 0:01:28, time: 0.741, data_time: 0.012, memory: 9990, loss_rpn_cls: 0.0092, loss_rpn_bbox: 0.0521, loss_cls: 0.0721, acc: 97.1035, loss_bbox: 0.1292, loss: 0.2626
2020-11-18 13:55:56,215 - mmdet - INFO - Epoch [4][600/622]	lr: 1.000e-02, eta: 0:00:16, time: 0.744, data_time: 0.012, memory: 9990, loss_rpn_cls: 0.0072, loss_rpn_bbox: 0.0551, loss_cls: 0.0654, acc: 97.3672, loss_bbox: 0.1400, loss: 0.2678
2020-11-18 13:56:12,480 - mmdet - INFO - Saving checkpoint at 4 epochs
2020-11-18 13:56:37,901 - mmdet - INFO - Evaluating bbox...
2020-11-18 13:56:41,587 - mmdet - INFO - Epoch [4][622/622]	lr: 1.000e-02, bbox_mAP: 0.6840, bbox_mAP_50: 0.7830, bbox_mAP_75: 0.7300, bbox_mAP_s: 0.2990, bbox_mAP_m: 0.6560, bbox_mAP_l: 0.8070, bbox_mAP_copypaste: 0.684 0.783 0.730 0.299 0.656 0.807
2020-11-18 13:57:11,490 - mmdet - INFO - Epoch(train) [4][74]	loss_rpn_cls: 0.0131, loss_rpn_bbox: 0.0536, loss_cls: 0.0787, acc: 96.8249, loss_bbox: 0.1447, loss: 0.2901
